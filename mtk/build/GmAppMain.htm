<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [build\GmAppMain.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image build\GmAppMain.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.1 [Build 569]: Last Updated: Thu Aug 08 15:18:06 2019
<BR><P>
<H3>Maximum Stack Usage =       8232 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
on_recv_sms &rArr; sms_send &rArr; send_sms_real &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[15d7670]">GM_Trace</a>
 <LI><a href="#[15d7628]">GM_ReleaseBuild</a>
 <LI><a href="#[15d75e0]">GM_ReleaseBranch</a>
 <LI><a href="#[15d7598]">GM_ReleaseHwVer</a>
 <LI><a href="#[15d7550]">GM_ReleaseVerno</a>
 <LI><a href="#[15d7508]">GM_BuildDateTime</a>
 <LI><a href="#[15d74c0]">GM_atoi</a>
 <LI><a href="#[15d7478]">GM_atof</a>
 <LI><a href="#[15d7430]">GM_memset</a>
 <LI><a href="#[15d73e8]">GM_memcpy</a>
 <LI><a href="#[15d73a0]">GM_memcmp</a>
 <LI><a href="#[15d7358]">GM_memmove</a>
 <LI><a href="#[15d7310]">GM_strcpy</a>
 <LI><a href="#[15d72c8]">GM_strncpy</a>
 <LI><a href="#[15d7280]">GM_strcat</a>
 <LI><a href="#[15d7238]">GM_strncat</a>
 <LI><a href="#[15d71f0]">GM_strcmp</a>
 <LI><a href="#[15d71a8]">GM_strncmp</a>
 <LI><a href="#[15d7160]">GM_strchr</a>
 <LI><a href="#[15d7118]">GM_strlen</a>
 <LI><a href="#[15d70d0]">GM_strstr</a>
 <LI><a href="#[15d7088]">GM_sprintf</a>
 <LI><a href="#[15d7040]">GM_snprintf</a>
 <LI><a href="#[15d6ff8]">GM_vsprintf</a>
 <LI><a href="#[15d6fb0]">GM_sscanf</a>
 <LI><a href="#[15d6f68]">GM_GpioInit</a>
 <LI><a href="#[15d6f20]">GM_GetGpioMode</a>
 <LI><a href="#[15d6ed8]">GM_GpioSetLevel</a>
 <LI><a href="#[15d6e90]">GM_GpioGetLevel</a>
 <LI><a href="#[15d6e48]">GM_GpioSetDirection</a>
 <LI><a href="#[15d6e00]">GM_GpioGetDirection</a>
 <LI><a href="#[15d6db8]">GM_GpioSetPullSelection</a>
 <LI><a href="#[15d6d70]">GM_RegisterCallBack</a>
 <LI><a href="#[15d6d28]">GM_UartOpen</a>
 <LI><a href="#[15d6ce0]">GM_UartClose</a>
 <LI><a href="#[15d6c98]">GM_UartWrite</a>
 <LI><a href="#[15d6c50]">GM_UartRead</a>
 <LI><a href="#[15d6c08]">GM_UartClrRxBuffer</a>
 <LI><a href="#[15d6bc0]">GM_UartClrTxBuffer</a>
 <LI><a href="#[15d6b78]">GM_CheckSimValid</a>
 <LI><a href="#[15d6b30]">GM_GetImei</a>
 <LI><a href="#[15d6ae8]">GM_GetPlmn</a>
 <LI><a href="#[15d6aa0]">GM_GetServiceAvailability</a>
 <LI><a href="#[15d6a58]">GM_SetLocalTime</a>
 <LI><a href="#[15d6a10]">GM_GetLocalTime</a>
 <LI><a href="#[15d69c8]">GM_SetUartTrace</a>
 <LI><a href="#[15d6980]">GM_CloseUartTrace</a>
 <LI><a href="#[15d6938]">GM_MemoryAlloc</a>
 <LI><a href="#[15d68f0]">GM_MemoryFree</a>
 <LI><a href="#[15d68a8]">GM_Ucs2ToAsc</a>
 <LI><a href="#[15d6860]">GM_AscToUcs2</a>
 <LI><a href="#[15d6818]">GM_SendSMS</a>
 <LI><a href="#[15d67d0]">GM_CallAnswer</a>
 <LI><a href="#[15d6788]">GM_CallHangUp</a>
 <LI><a href="#[15d6740]">GM_MakeCall</a>
 <LI><a href="#[15d66f8]">GM_SystemReboot</a>
 <LI><a href="#[15d66b0]">GM_SystemPowerOff</a>
 <LI><a href="#[15d6668]">GM_FS_Open</a>
 <LI><a href="#[15d6620]">GM_FS_Close</a>
 <LI><a href="#[15d65d8]">GM_FS_Read</a>
 <LI><a href="#[15d6590]">GM_FS_Write</a>
 <LI><a href="#[15d6548]">GM_FS_Seek</a>
 <LI><a href="#[15d6500]">GM_FS_Commit</a>
 <LI><a href="#[15d64b8]">GM_FS_GetFileSize</a>
 <LI><a href="#[15d6470]">GM_FS_GetFilePosition</a>
 <LI><a href="#[15d6428]">GM_GetDiskFreeSpace</a>
 <LI><a href="#[15d63e0]">GM_FS_Delete</a>
 <LI><a href="#[15d6398]">GM_FS_CheckFile</a>
 <LI><a href="#[15d6350]">GM_FS_GetCurrentDir</a>
 <LI><a href="#[15d6308]">GM_FS_SetCurrentDir</a>
 <LI><a href="#[15d62c0]">GM_FS_CreateDir</a>
 <LI><a href="#[15d6278]">GM_FS_RemoveDir</a>
 <LI><a href="#[15d6230]">GM_FS_Rename</a>
 <LI><a href="#[15d61e8]">GM_FS_XDelete</a>
 <LI><a href="#[15d61a0]">GM_IsinkBacklightCtrl</a>
 <LI><a href="#[15d6158]">GM_SocketCreate</a>
 <LI><a href="#[15d6110]">GM_SocketConnect</a>
 <LI><a href="#[15d60c8]">GM_SocketRecv</a>
 <LI><a href="#[15d6080]">GM_SocketClose</a>
 <LI><a href="#[15d6038]">GM_SocketSend</a>
 <LI><a href="#[15d5ff0]">GM_SocketRegisterCallBack</a>
 <LI><a href="#[15d5fa8]">GM_GetLocalIP</a>
 <LI><a href="#[15d5f60]">GM_SleepEnable</a>
 <LI><a href="#[15d5f18]">GM_SleepDisable</a>
 <LI><a href="#[15d5ed0]">GM_KpledLevelCtrl</a>
 <LI><a href="#[15d5e88]">GM_CreateKalTimer</a>
 <LI><a href="#[15d5e40]">GM_StartKalTimer</a>
 <LI><a href="#[15d5df8]">GM_StopKalTimer</a>
 <LI><a href="#[15d5db0]">GM_StartTimer</a>
 <LI><a href="#[15d5d68]">GM_StopTimer</a>
 <LI><a href="#[15d5d20]">GM_GetSignalValue</a>
 <LI><a href="#[15d5cd8]">GM_GetLbsInfo</a>
 <LI><a href="#[15d5c90]">GM_I2cInit</a>
 <LI><a href="#[15d5c48]">GM_I2cConfig</a>
 <LI><a href="#[15d5c00]">GM_I2cWriteByte</a>
 <LI><a href="#[15d5bb8]">GM_I2cReadBytes</a>
 <LI><a href="#[15d5b70]">GM_I2cGetMode</a>
 <LI><a href="#[15d5b28]">GM_I2cSetMode</a>
 <LI><a href="#[15d5ae0]">GM_AdcRead</a>
 <LI><a href="#[15d5a98]">GM_EintRegister</a>
 <LI><a href="#[15d5a50]">GM_EintPinInit</a>
 <LI><a href="#[15d5a08]">GM_EintSetPolarity</a>
 <LI><a href="#[15d59c0]">GM_SysUsdelay</a>
 <LI><a href="#[15d5978]">GM_SysMsdelay</a>
 <LI><a href="#[15d5930]">GM_GetImsi</a>
 <LI><a href="#[15d58e8]">GM_GetIccid</a>
 <LI><a href="#[15d58a0]">GM_GetPdpStatus</a>
 <LI><a href="#[15d5858]">GM_GetGsmStatus</a>
 <LI><a href="#[15d5810]">GM_ImageZiLimit</a>
 <LI><a href="#[15d57c8]">GM_ImageDummyBase</a>
 <LI><a href="#[15d5780]">GM_GetBarcode</a>
 <LI><a href="#[15d5738]">GM_IsGprsAutoOn</a>
 <LI><a href="#[15d56f0]">GM_GetTcpStatus</a>
 <LI><a href="#[15d56a8]">GM_GetLibStatus</a>
 <LI><a href="#[15d5660]">GM_SetUartFunc</a>
 <LI><a href="#[15d5618]">GM_GetHostByName</a>
 <LI><a href="#[15d55d0]">GM_GetCregStatus</a>
 <LI><a href="#[15d5588]">GM_GetBearerStatus</a>
 <LI><a href="#[15d5540]">GM_AccountIdClose</a>
 <LI><a href="#[15d54f8]">GM_GetFakeCellFeature</a>
 <LI><a href="#[15d54b0]">GM_ApnConfig</a>
 <LI><a href="#[15d5468]">GM_ReadWriteNvram</a>
 <LI><a href="#[15d5420]">GM_GetNewAttachStatus</a>
 <LI><a href="#[15d53d8]">GM_IsWdtPwrOn</a>
 <LI><a href="#[15d5390]">GM_DnsParserCallback</a>
 <LI><a href="#[15d5348]">GM_GetSetFlightMode</a>
 <LI><a href="#[15d5300]">GM_CloseBearerAppId</a>
 <LI><a href="#[15d52b8]">GM_GetApnMatch</a>
 <LI><a href="#[15d5270]">GM_DeleteApn</a>
 <LI><a href="#[15d5228]">GM_SoftwareWdtCounterEnable</a>
 <LI><a href="#[15d51e0]">GM_SetSoftwareWdtCounter</a>
 <LI><a href="#[15d5198]">GM_GetSoftwareWdtCounter</a>
 <LI><a href="#[15d5150]">GM_SetSwLogicCounterEnable</a>
 <LI><a href="#[15d5108]">GM_SetSwLogicCounter</a>
 <LI><a href="#[15d50c0]">GM_SetSwLogicCounterMax</a>
 <LI><a href="#[15d5078]">GM_GetSwLogicCounter</a>
 <LI><a href="#[15d5030]">GM_GetSwLogicCounterMax</a>
 <LI><a href="#[15d4fe8]">GM_SpiReadData</a>
 <LI><a href="#[15d4fa0]">GM_SpiWriteData</a>
 <LI><a href="#[15d4f58]">GM_SpiFlashReadID</a>
 <LI><a href="#[15d4f10]">GM_SpiPinInit</a>
 <LI><a href="#[15d4ec8]">GM_StopRecord</a>
 <LI><a href="#[15d4e80]">GM_StartRecord</a>
 <LI><a href="#[15d4e38]">GM_RecordRegister</a>
 <LI><a href="#[15d4df0]">GM_GetChrStatus</a>
 <LI><a href="#[15d4da8]">GM_PowerKeyRegister</a>
 <LI><a href="#[15d4d60]">GM_ConvertIpAddr</a>
 <LI><a href="#[15d4d18]">GM_ReadNvramLid</a>
 <LI><a href="#[15d4cd0]">GM_ChrCurrentConfig</a>
 <LI><a href="#[15d4c88]">GM_ChrCurrentGet</a>
 <LI><a href="#[15d4c40]">GM_AutoApnCheck</a>
 <LI><a href="#[15d4bf8]">GM_Set_Mic_Volume</a>
 <LI><a href="#[15d4bb0]">GM_log10</a>
 <LI><a href="#[15d4b68]">GM_log</a>
 <LI><a href="#[15d4b20]">GM_sqrt</a>
 <LI><a href="#[15d4ad8]">GM_fabs</a>
 <LI><a href="#[15d4a90]">wlan_init</a>
 <LI><a href="#[15d4a48]">wlan_deinit</a>
 <LI><a href="#[15d4a00]">wlan_scan</a>
 <LI><a href="#[15d49b8]">GM_MemoryRealloc</a>
 <LI><a href="#[15d4970]">GM_GetTime</a>
 <LI><a href="#[15d4928]">GM_GetChipRID</a>
 <LI><a href="#[15d48e0]">GM_Func19</a>
 <LI><a href="#[15d4898]">GM_Func20</a>
 <LI><a href="#[15d4850]">GM_Func21</a>
 <LI><a href="#[15d4808]">GM_Func22</a>
 <LI><a href="#[15d47c0]">GM_Func23</a>
 <LI><a href="#[15d4778]">GM_Func24</a>
 <LI><a href="#[15d4730]">GM_Func25</a>
 <LI><a href="#[15d46e8]">GM_Func26</a>
 <LI><a href="#[15d46a0]">GM_Func27</a>
 <LI><a href="#[15d4658]">GM_Func28</a>
 <LI><a href="#[15d4610]">GM_Func29</a>
 <LI><a href="#[15d45c8]">GM_Func30</a>
 <LI><a href="#[15d4580]">GM_Func31</a>
 <LI><a href="#[15d4538]">GM_Func32</a>
 <LI><a href="#[15d44f0]">GM_Func33</a>
 <LI><a href="#[15d44a8]">GM_Func34</a>
 <LI><a href="#[15d4460]">GM_Func35</a>
 <LI><a href="#[15d4418]">GM_Func36</a>
 <LI><a href="#[15d43d0]">GM_Func37</a>
 <LI><a href="#[15d4388]">GM_Func38</a>
 <LI><a href="#[15d4340]">GM_Func39</a>
 <LI><a href="#[15d42f8]">GM_Func40</a>
 <LI><a href="#[15d42b0]">GM_Func41</a>
 <LI><a href="#[15d4268]">GM_Func42</a>
 <LI><a href="#[15d4220]">GM_Func43</a>
 <LI><a href="#[15d41d8]">GM_Func44</a>
 <LI><a href="#[15d4190]">GM_Func45</a>
 <LI><a href="#[15d4148]">GM_Func46</a>
 <LI><a href="#[15d4100]">GM_Func47</a>
 <LI><a href="#[15d40b8]">GM_Func48</a>
 <LI><a href="#[15d4070]">GM_Func49</a>
 <LI><a href="#[15d4028]">GM_Func50</a>
 <LI><a href="#[15d3fe0]">GM_CallbackFunc1</a>
 <LI><a href="#[15d3f98]">GM_CallbackFunc2</a>
 <LI><a href="#[15d3f50]">GM_CallbackFunc3</a>
 <LI><a href="#[15d3f08]">GM_CallbackFunc4</a>
 <LI><a href="#[15d3ec0]">GM_CallbackFunc5</a>
 <LI><a href="#[15d3e78]">GM_CallbackFunc6</a>
 <LI><a href="#[15d3e30]">GM_CallbackFunc7</a>
 <LI><a href="#[15d3de8]">GM_CallbackFunc8</a>
 <LI><a href="#[15d3da0]">GM_CallbackFunc9</a>
 <LI><a href="#[15d3d58]">GM_CallbackFunc10</a>
 <LI><a href="#[15d3d10]">GM_CallbackFunc11</a>
 <LI><a href="#[15d3cc8]">GM_CallbackFunc12</a>
 <LI><a href="#[15d3c80]">GM_CallbackFunc13</a>
 <LI><a href="#[15d3c38]">GM_CallbackFunc14</a>
 <LI><a href="#[15d3bf0]">GM_CallbackFunc15</a>
 <LI><a href="#[15d3ba8]">GM_CallbackFunc16</a>
 <LI><a href="#[15d3b60]">GM_CallbackFunc17</a>
 <LI><a href="#[15d3b18]">GM_CallbackFunc18</a>
 <LI><a href="#[15d3ad0]">GM_CallbackFunc19</a>
 <LI><a href="#[15d3a88]">GM_CallbackFunc20</a>
 <LI><a href="#[15d3a40]">GM_CallbackFunc21</a>
 <LI><a href="#[15d39f8]">GM_CallbackFunc22</a>
 <LI><a href="#[15d39b0]">GM_CallbackFunc23</a>
 <LI><a href="#[15d3968]">GM_CallbackFunc24</a>
 <LI><a href="#[15d3920]">GM_CallbackFunc25</a>
 <LI><a href="#[15d38d8]">GM_CallbackFunc26</a>
 <LI><a href="#[15d3890]">GM_CallbackFunc27</a>
 <LI><a href="#[15d3848]">GM_CallbackFunc28</a>
 <LI><a href="#[15d3800]">GM_CallbackFunc29</a>
 <LI><a href="#[15d37b8]">GM_CallbackFunc30</a>
 <LI><a href="#[15d3770]">GM_CallbackFunc31</a>
 <LI><a href="#[15d3728]">GM_CallbackFunc32</a>
 <LI><a href="#[15d36e0]">GM_CallbackFunc33</a>
 <LI><a href="#[15d3698]">GM_CallbackFunc34</a>
 <LI><a href="#[15d3650]">GM_CallbackFunc35</a>
 <LI><a href="#[15d3608]">GM_CallbackFunc36</a>
 <LI><a href="#[15d35c0]">GM_CallbackFunc37</a>
 <LI><a href="#[15d3578]">GM_CallbackFunc38</a>
 <LI><a href="#[15d3530]">GM_CallbackFunc39</a>
 <LI><a href="#[15d34e8]">GM_CallbackFunc40</a>
 <LI><a href="#[15d34a0]">GM_CallbackFunc41</a>
 <LI><a href="#[15d3458]">GM_CallbackFunc42</a>
 <LI><a href="#[15d3410]">GM_CallbackFunc43</a>
 <LI><a href="#[15d33c8]">GM_CallbackFunc44</a>
 <LI><a href="#[15d3380]">GM_CallbackFunc45</a>
 <LI><a href="#[15d3338]">GM_CallbackFunc46</a>
 <LI><a href="#[15d32f0]">GM_CallbackFunc47</a>
 <LI><a href="#[15d32a8]">GM_CallbackFunc48</a>
 <LI><a href="#[15d3260]">GM_CallbackFunc49</a>
 <LI><a href="#[15d3218]">GM_CallbackFunc50</a>
 <LI><a href="#[15d31d0]">TK_dll_set_sb</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2309478]">log_data_insert_one</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[230fb20]">log_service_print</a><BR>
 <LI><a href="#[230d7f8]">config_service_get</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[230fb20]">log_service_print</a><BR>
 <LI><a href="#[230de28]">config_service_get_zone</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[230fb20]">log_service_print</a><BR>
 <LI><a href="#[230dde0]">log_service_upload</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[230fb20]">log_service_print</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15cec10]">Service_Entry</a>
 <LI><a href="#[15cf678]">$Super$$GM_Trace</a>
 <LI><a href="#[15d0050]">$Super$$GM_ReleaseBuild</a>
 <LI><a href="#[15d0098]">$Super$$GM_ReleaseBranch</a>
 <LI><a href="#[15d0008]">$Super$$GM_ReleaseHwVer</a>
 <LI><a href="#[15cffc0]">$Super$$GM_ReleaseVerno</a>
 <LI><a href="#[15d3020]">$Super$$GM_BuildDateTime</a>
 <LI><a href="#[15cf3f0]">$Super$$GM_atoi</a>
 <LI><a href="#[15cf438]">$Super$$GM_atof</a>
 <LI><a href="#[15cf1f8]">$Super$$GM_memset</a>
 <LI><a href="#[15cf288]">$Super$$GM_memcpy</a>
 <LI><a href="#[15cf2d0]">$Super$$GM_memcmp</a>
 <LI><a href="#[15cf240]">$Super$$GM_memmove</a>
 <LI><a href="#[15cefb8]">$Super$$GM_strcpy</a>
 <LI><a href="#[15cee98]">$Super$$GM_strncpy</a>
 <LI><a href="#[15cf090]">$Super$$GM_strcat</a>
 <LI><a href="#[15cef28]">$Super$$GM_strncat</a>
 <LI><a href="#[15cf000]">$Super$$GM_strcmp</a>
 <LI><a href="#[15ceee0]">$Super$$GM_strncmp</a>
 <LI><a href="#[15cf048]">$Super$$GM_strchr</a>
 <LI><a href="#[15cef70]">$Super$$GM_strlen</a>
 <LI><a href="#[15cee50]">$Super$$GM_strstr</a>
 <LI><a href="#[15cf168]">$Super$$GM_sprintf</a>
 <LI><a href="#[15cf1b0]">$Super$$GM_snprintf</a>
 <LI><a href="#[15cee08]">$Super$$GM_vsprintf</a>
 <LI><a href="#[15cf0d8]">$Super$$GM_sscanf</a>
 <LI><a href="#[15d07a0]">$Super$$GM_GpioInit</a>
 <LI><a href="#[15d0e18]">$Super$$GM_GetGpioMode</a>
 <LI><a href="#[15d0710]">$Super$$GM_GpioSetLevel</a>
 <LI><a href="#[15d07e8]">$Super$$GM_GpioGetLevel</a>
 <LI><a href="#[15d0758]">$Super$$GM_GpioSetDirection</a>
 <LI><a href="#[15d0830]">$Super$$GM_GpioGetDirection</a>
 <LI><a href="#[15d06c8]">$Super$$GM_GpioSetPullSelection</a>
 <LI><a href="#[15d00e0]">$Super$$GM_RegisterCallBack</a>
 <LI><a href="#[15cf558]">$Super$$GM_UartOpen</a>
 <LI><a href="#[15cf630]">$Super$$GM_UartClose</a>
 <LI><a href="#[15cf4c8]">$Super$$GM_UartWrite</a>
 <LI><a href="#[15cf510]">$Super$$GM_UartRead</a>
 <LI><a href="#[15cf5e8]">$Super$$GM_UartClrRxBuffer</a>
 <LI><a href="#[15cf5a0]">$Super$$GM_UartClrTxBuffer</a>
 <LI><a href="#[15d2138]">$Super$$GM_CheckSimValid</a>
 <LI><a href="#[15d0cf8]">$Super$$GM_GetImei</a>
 <LI><a href="#[15d0ab8]">$Super$$GM_GetPlmn</a>
 <LI><a href="#[15d0a70]">$Super$$GM_GetServiceAvailability</a>
 <LI><a href="#[15cff30]">$Super$$GM_SetLocalTime</a>
 <LI><a href="#[15d0b90]">$Super$$GM_GetLocalTime</a>
 <LI><a href="#[15cfd80]">$Super$$GM_SetUartTrace</a>
 <LI><a href="#[15d2018]">$Super$$GM_CloseUartTrace</a>
 <LI><a href="#[15d02d8]">$Super$$GM_MemoryAlloc</a>
 <LI><a href="#[15d0290]">$Super$$GM_MemoryFree</a>
 <LI><a href="#[15cf480]">$Super$$GM_Ucs2ToAsc</a>
 <LI><a href="#[15d30b0]">$Super$$GM_AscToUcs2</a>
 <LI><a href="#[15cff78]">$Super$$GM_SendSMS</a>
 <LI><a href="#[15d2fd8]">$Super$$GM_CallAnswer</a>
 <LI><a href="#[15d2f90]">$Super$$GM_CallHangUp</a>
 <LI><a href="#[15d0320]">$Super$$GM_MakeCall</a>
 <LI><a href="#[15cf6c0]">$Super$$GM_SystemReboot</a>
 <LI><a href="#[15cf708]">$Super$$GM_SystemPowerOff</a>
 <LI><a href="#[15d1b98]">$Super$$GM_FS_Open</a>
 <LI><a href="#[15d1d90]">$Super$$GM_FS_Close</a>
 <LI><a href="#[15d1b50]">$Super$$GM_FS_Read</a>
 <LI><a href="#[15d19e8]">$Super$$GM_FS_Write</a>
 <LI><a href="#[15d1a78]">$Super$$GM_FS_Seek</a>
 <LI><a href="#[15d1d48]">$Super$$GM_FS_Commit</a>
 <LI><a href="#[15d1be0]">$Super$$GM_FS_GetFileSize</a>
 <LI><a href="#[15d1c28]">$Super$$GM_FS_GetFilePosition</a>
 <LI><a href="#[15d0ea8]">$Super$$GM_GetDiskFreeSpace</a>
 <LI><a href="#[15d1cb8]">$Super$$GM_FS_Delete</a>
 <LI><a href="#[15d1dd8]">$Super$$GM_FS_CheckFile</a>
 <LI><a href="#[15d1c70]">$Super$$GM_FS_GetCurrentDir</a>
 <LI><a href="#[15d1a30]">$Super$$GM_FS_SetCurrentDir</a>
 <LI><a href="#[15d1d00]">$Super$$GM_FS_CreateDir</a>
 <LI><a href="#[15d1b08]">$Super$$GM_FS_RemoveDir</a>
 <LI><a href="#[15d1ac0]">$Super$$GM_FS_Rename</a>
 <LI><a href="#[15d19a0]">$Super$$GM_FS_XDelete</a>
 <LI><a href="#[15d03b0]">$Super$$GM_IsinkBacklightCtrl</a>
 <LI><a href="#[15cfbd0]">$Super$$GM_SocketCreate</a>
 <LI><a href="#[15cfc18]">$Super$$GM_SocketConnect</a>
 <LI><a href="#[15cfb88]">$Super$$GM_SocketRecv</a>
 <LI><a href="#[15cfc60]">$Super$$GM_SocketClose</a>
 <LI><a href="#[15cfaf8]">$Super$$GM_SocketSend</a>
 <LI><a href="#[15cfb40]">$Super$$GM_SocketRegisterCallBack</a>
 <LI><a href="#[15d0bd8]">$Super$$GM_GetLocalIP</a>
 <LI><a href="#[15cfca8]">$Super$$GM_SleepEnable</a>
 <LI><a href="#[15cfcf0]">$Super$$GM_SleepDisable</a>
 <LI><a href="#[15d0368]">$Super$$GM_KpledLevelCtrl</a>
 <LI><a href="#[15d1f88]">$Super$$GM_CreateKalTimer</a>
 <LI><a href="#[15cf948]">$Super$$GM_StartKalTimer</a>
 <LI><a href="#[15cf870]">$Super$$GM_StopKalTimer</a>
 <LI><a href="#[15cf8b8]">$Super$$GM_StartTimer</a>
 <LI><a href="#[15cf7e0]">$Super$$GM_StopTimer</a>
 <LI><a href="#[15d09e0]">$Super$$GM_GetSignalValue</a>
 <LI><a href="#[15d0c68]">$Super$$GM_GetLbsInfo</a>
 <LI><a href="#[15d05f0]">$Super$$GM_I2cInit</a>
 <LI><a href="#[15d0680]">$Super$$GM_I2cConfig</a>
 <LI><a href="#[15d0518]">$Super$$GM_I2cWriteByte</a>
 <LI><a href="#[15d05a8]">$Super$$GM_I2cReadBytes</a>
 <LI><a href="#[15d0638]">$Super$$GM_I2cGetMode</a>
 <LI><a href="#[15d0560]">$Super$$GM_I2cSetMode</a>
 <LI><a href="#[15d3140]">$Super$$GM_AdcRead</a>
 <LI><a href="#[15d1e68]">$Super$$GM_EintRegister</a>
 <LI><a href="#[15d1eb0]">$Super$$GM_EintPinInit</a>
 <LI><a href="#[15d1e20]">$Super$$GM_EintSetPolarity</a>
 <LI><a href="#[15cf750]">$Super$$GM_SysUsdelay</a>
 <LI><a href="#[15cf798]">$Super$$GM_SysMsdelay</a>
 <LI><a href="#[15d0cb0]">$Super$$GM_GetImsi</a>
 <LI><a href="#[15d0d40]">$Super$$GM_GetIccid</a>
 <LI><a href="#[15d0b00]">$Super$$GM_GetPdpStatus</a>
 <LI><a href="#[15d0dd0]">$Super$$GM_GetGsmStatus</a>
 <LI><a href="#[15d0488]">$Super$$GM_ImageZiLimit</a>
 <LI><a href="#[15d04d0]">$Super$$GM_ImageDummyBase</a>
 <LI><a href="#[15d1010]">$Super$$GM_GetBarcode</a>
 <LI><a href="#[15d0440]">$Super$$GM_IsGprsAutoOn</a>
 <LI><a href="#[15d08c0]">$Super$$GM_GetTcpStatus</a>
 <LI><a href="#[15d0c20]">$Super$$GM_GetLibStatus</a>
 <LI><a href="#[15cfdc8]">$Super$$GM_SetUartFunc</a>
 <LI><a href="#[15d0d88]">$Super$$GM_GetHostByName</a>
 <LI><a href="#[15d0ef0]">$Super$$GM_GetCregStatus</a>
 <LI><a href="#[15d0fc8]">$Super$$GM_GetBearerStatus</a>
 <LI><a href="#[15d3188]">$Super$$GM_AccountIdClose</a>
 <LI><a href="#[15d0e60]">$Super$$GM_GetFakeCellFeature</a>
 <LI><a href="#[15d30f8]">$Super$$GM_ApnConfig</a>
 <LI><a href="#[15d0170]">$Super$$GM_ReadWriteNvram</a>
 <LI><a href="#[15d0b48]">$Super$$GM_GetNewAttachStatus</a>
 <LI><a href="#[15d03f8]">$Super$$GM_IsWdtPwrOn</a>
 <LI><a href="#[15d1ef8]">$Super$$GM_DnsParserCallback</a>
 <LI><a href="#[15d0a28]">$Super$$GM_GetSetFlightMode</a>
 <LI><a href="#[15d2060]">$Super$$GM_CloseBearerAppId</a>
 <LI><a href="#[15d1058]">$Super$$GM_GetApnMatch</a>
 <LI><a href="#[15d1f40]">$Super$$GM_DeleteApn</a>
 <LI><a href="#[15cfab0]">$Super$$GM_SoftwareWdtCounterEnable</a>
 <LI><a href="#[15cfee8]">$Super$$GM_SetSoftwareWdtCounter</a>
 <LI><a href="#[15d0998]">$Super$$GM_GetSoftwareWdtCounter</a>
 <LI><a href="#[15cfe58]">$Super$$GM_SetSwLogicCounterEnable</a>
 <LI><a href="#[15cfea0]">$Super$$GM_SetSwLogicCounter</a>
 <LI><a href="#[15cfe10]">$Super$$GM_SetSwLogicCounterMax</a>
 <LI><a href="#[15d0950]">$Super$$GM_GetSwLogicCounter</a>
 <LI><a href="#[15d0908]">$Super$$GM_GetSwLogicCounterMax</a>
 <LI><a href="#[15cf9d8]">$Super$$GM_SpiReadData</a>
 <LI><a href="#[15cf990]">$Super$$GM_SpiWriteData</a>
 <LI><a href="#[15cfa68]">$Super$$GM_SpiFlashReadID</a>
 <LI><a href="#[15cfa20]">$Super$$GM_SpiPinInit</a>
 <LI><a href="#[15cf828]">$Super$$GM_StopRecord</a>
 <LI><a href="#[15cf900]">$Super$$GM_StartRecord</a>
 <LI><a href="#[15d0128]">$Super$$GM_RecordRegister</a>
 <LI><a href="#[15d0f38]">$Super$$GM_GetChrStatus</a>
 <LI><a href="#[15d0200]">$Super$$GM_PowerKeyRegister</a>
 <LI><a href="#[15d1fd0]">$Super$$GM_ConvertIpAddr</a>
 <LI><a href="#[15d01b8]">$Super$$GM_ReadNvramLid</a>
 <LI><a href="#[15d20f0]">$Super$$GM_ChrCurrentConfig</a>
 <LI><a href="#[15d20a8]">$Super$$GM_ChrCurrentGet</a>
 <LI><a href="#[15d3068]">$Super$$GM_AutoApnCheck</a>
 <LI><a href="#[15cfd38]">$Super$$GM_Set_Mic_Volume</a>
 <LI><a href="#[15cf318]">$Super$$GM_log10</a>
 <LI><a href="#[15cf360]">$Super$$GM_log</a>
 <LI><a href="#[15cf120]">$Super$$GM_sqrt</a>
 <LI><a href="#[15cf3a8]">$Super$$GM_fabs</a>
 <LI><a href="#[15ced78]">$Super$$wlan_init</a>
 <LI><a href="#[15cedc0]">$Super$$wlan_deinit</a>
 <LI><a href="#[15ced30]">$Super$$wlan_scan</a>
 <LI><a href="#[15d0248]">$Super$$GM_MemoryRealloc</a>
 <LI><a href="#[15d0878]">$Super$$GM_GetTime</a>
 <LI><a href="#[15d0f80]">$Super$$GM_GetChipRID</a>
 <LI><a href="#[15d1958]">$Super$$GM_Func19</a>
 <LI><a href="#[15d1910]">$Super$$GM_Func20</a>
 <LI><a href="#[15d18c8]">$Super$$GM_Func21</a>
 <LI><a href="#[15d1880]">$Super$$GM_Func22</a>
 <LI><a href="#[15d1838]">$Super$$GM_Func23</a>
 <LI><a href="#[15d17f0]">$Super$$GM_Func24</a>
 <LI><a href="#[15d17a8]">$Super$$GM_Func25</a>
 <LI><a href="#[15d1760]">$Super$$GM_Func26</a>
 <LI><a href="#[15d1718]">$Super$$GM_Func27</a>
 <LI><a href="#[15d16d0]">$Super$$GM_Func28</a>
 <LI><a href="#[15d1688]">$Super$$GM_Func29</a>
 <LI><a href="#[15d1640]">$Super$$GM_Func30</a>
 <LI><a href="#[15d15f8]">$Super$$GM_Func31</a>
 <LI><a href="#[15d15b0]">$Super$$GM_Func32</a>
 <LI><a href="#[15d1568]">$Super$$GM_Func33</a>
 <LI><a href="#[15d1520]">$Super$$GM_Func34</a>
 <LI><a href="#[15d14d8]">$Super$$GM_Func35</a>
 <LI><a href="#[15d1490]">$Super$$GM_Func36</a>
 <LI><a href="#[15d1448]">$Super$$GM_Func37</a>
 <LI><a href="#[15d1400]">$Super$$GM_Func38</a>
 <LI><a href="#[15d13b8]">$Super$$GM_Func39</a>
 <LI><a href="#[15d1370]">$Super$$GM_Func40</a>
 <LI><a href="#[15d1328]">$Super$$GM_Func41</a>
 <LI><a href="#[15d12e0]">$Super$$GM_Func42</a>
 <LI><a href="#[15d1298]">$Super$$GM_Func43</a>
 <LI><a href="#[15d1250]">$Super$$GM_Func44</a>
 <LI><a href="#[15d1208]">$Super$$GM_Func45</a>
 <LI><a href="#[15d11c0]">$Super$$GM_Func46</a>
 <LI><a href="#[15d1178]">$Super$$GM_Func47</a>
 <LI><a href="#[15d1130]">$Super$$GM_Func48</a>
 <LI><a href="#[15d10e8]">$Super$$GM_Func49</a>
 <LI><a href="#[15d10a0]">$Super$$GM_Func50</a>
 <LI><a href="#[15d2f48]">$Super$$GM_CallbackFunc1</a>
 <LI><a href="#[15d2c30]">$Super$$GM_CallbackFunc2</a>
 <LI><a href="#[15d2918]">$Super$$GM_CallbackFunc3</a>
 <LI><a href="#[15d2600]">$Super$$GM_CallbackFunc4</a>
 <LI><a href="#[15d22e8]">$Super$$GM_CallbackFunc5</a>
 <LI><a href="#[15d2258]">$Super$$GM_CallbackFunc6</a>
 <LI><a href="#[15d2210]">$Super$$GM_CallbackFunc7</a>
 <LI><a href="#[15d21c8]">$Super$$GM_CallbackFunc8</a>
 <LI><a href="#[15d2180]">$Super$$GM_CallbackFunc9</a>
 <LI><a href="#[15d2f00]">$Super$$GM_CallbackFunc10</a>
 <LI><a href="#[15d2eb8]">$Super$$GM_CallbackFunc11</a>
 <LI><a href="#[15d2e70]">$Super$$GM_CallbackFunc12</a>
 <LI><a href="#[15d2e28]">$Super$$GM_CallbackFunc13</a>
 <LI><a href="#[15d2de0]">$Super$$GM_CallbackFunc14</a>
 <LI><a href="#[15d2d98]">$Super$$GM_CallbackFunc15</a>
 <LI><a href="#[15d2d50]">$Super$$GM_CallbackFunc16</a>
 <LI><a href="#[15d2d08]">$Super$$GM_CallbackFunc17</a>
 <LI><a href="#[15d2cc0]">$Super$$GM_CallbackFunc18</a>
 <LI><a href="#[15d2c78]">$Super$$GM_CallbackFunc19</a>
 <LI><a href="#[15d2be8]">$Super$$GM_CallbackFunc20</a>
 <LI><a href="#[15d2ba0]">$Super$$GM_CallbackFunc21</a>
 <LI><a href="#[15d2b58]">$Super$$GM_CallbackFunc22</a>
 <LI><a href="#[15d2b10]">$Super$$GM_CallbackFunc23</a>
 <LI><a href="#[15d2ac8]">$Super$$GM_CallbackFunc24</a>
 <LI><a href="#[15d2a80]">$Super$$GM_CallbackFunc25</a>
 <LI><a href="#[15d2a38]">$Super$$GM_CallbackFunc26</a>
 <LI><a href="#[15d29f0]">$Super$$GM_CallbackFunc27</a>
 <LI><a href="#[15d29a8]">$Super$$GM_CallbackFunc28</a>
 <LI><a href="#[15d2960]">$Super$$GM_CallbackFunc29</a>
 <LI><a href="#[15d28d0]">$Super$$GM_CallbackFunc30</a>
 <LI><a href="#[15d2888]">$Super$$GM_CallbackFunc31</a>
 <LI><a href="#[15d2840]">$Super$$GM_CallbackFunc32</a>
 <LI><a href="#[15d27f8]">$Super$$GM_CallbackFunc33</a>
 <LI><a href="#[15d27b0]">$Super$$GM_CallbackFunc34</a>
 <LI><a href="#[15d2768]">$Super$$GM_CallbackFunc35</a>
 <LI><a href="#[15d2720]">$Super$$GM_CallbackFunc36</a>
 <LI><a href="#[15d26d8]">$Super$$GM_CallbackFunc37</a>
 <LI><a href="#[15d2690]">$Super$$GM_CallbackFunc38</a>
 <LI><a href="#[15d2648]">$Super$$GM_CallbackFunc39</a>
 <LI><a href="#[15d25b8]">$Super$$GM_CallbackFunc40</a>
 <LI><a href="#[15d2570]">$Super$$GM_CallbackFunc41</a>
 <LI><a href="#[15d2528]">$Super$$GM_CallbackFunc42</a>
 <LI><a href="#[15d24e0]">$Super$$GM_CallbackFunc43</a>
 <LI><a href="#[15d2498]">$Super$$GM_CallbackFunc44</a>
 <LI><a href="#[15d2450]">$Super$$GM_CallbackFunc45</a>
 <LI><a href="#[15d2408]">$Super$$GM_CallbackFunc46</a>
 <LI><a href="#[15d23c0]">$Super$$GM_CallbackFunc47</a>
 <LI><a href="#[15d2378]">$Super$$GM_CallbackFunc48</a>
 <LI><a href="#[15d2330]">$Super$$GM_CallbackFunc49</a>
 <LI><a href="#[15d22a0]">$Super$$GM_CallbackFunc50</a>
 <LI><a href="#[15ce8b0]">timer_1s_proc</a>
 <LI><a href="#[15ce868]">timer_10ms_proc</a>
 <LI><a href="#[15ce280]">upload_boot_log</a>
 <LI><a href="#[15ce820]">kal_timer_1s_proc</a>
 <LI><a href="#[15ce790]">DLL_init_SB</a>
 <LI><a href="#[15ce7d8]">app_main_entry</a>
 <LI><a href="#[230e0b0]">hard_ware_reboot_atonce</a>
 <LI><a href="#[230d258]">socket_get_host_by_name_callback</a>
 <LI><a href="#[230d9f0]">gprs_socket_notify</a>
 <LI><a href="#[230c0a0]">check_sim_card</a>
 <LI><a href="#[230c0e8]">gsm_iccid_callback</a>
 <LI><a href="#[230c130]">gsm_lbs_callback</a>
 <LI><a href="#[230c178]">gsm_imei_callback</a>
 <LI><a href="#[230c058]">gsm_call_status_callback</a>
 <LI><a href="#[230bfc8]">gsm_fake_cell_callback</a>
 <LI><a href="#[230c010]">gsm_incomming_call</a>
 <LI><a href="#[230c0a0]">check_sim_card</a>
 <LI><a href="#[230c208]">check_fake_cell_alarm_timer_proc</a>
 <LI><a href="#[230bb90]">send_sms_real</a>
 <LI><a href="#[230bbd8]">send_sms_callback</a>
 <LI><a href="#[230bb48]">on_recv_sms</a>
 <LI><a href="#[230b830]">debug_port_on_receive</a>
 <LI><a href="#[230b878]">gps_port_on_receive</a>
 <LI><a href="#[230b8c0]">expmu_port_receive</a>
 <LI><a href="#[230a510]">check_fix_state</a>
 <LI><a href="#[230a4c8]">query_mtk_version</a>
 <LI><a href="#[230a480]">check_has_received_data</a>
 <LI><a href="#[230a438]">query_at_version</a>
 <LI><a href="#[230a3f0]">query_td_version</a>
 <LI><a href="#[230a3a8]">query_td_and_at_version</a>
 <LI><a href="#[230a438]">query_at_version</a>
 <LI><a href="#[230a3a8]">query_td_and_at_version</a>
 <LI><a href="#[230a4c8]">query_mtk_version</a>
 <LI><a href="#[230a480]">check_has_received_data</a>
 <LI><a href="#[230a510]">check_fix_state</a>
 <LI><a href="#[230a3f0]">query_td_version</a>
 <LI><a href="#[230a168]">open_td_vtg</a>
 <LI><a href="#[23098b0]">gps_service_push_lbs</a>
 <LI><a href="#[2304260]">delay_gprs_destory</a>
 <LI><a href="#[2304218]">delay_gprs_change_dns</a>
 <LI><a href="#[2304848]">cmd_reboot</a>
 <LI><a href="#[23016c0]">wlan_deinit_cb</a>
 <LI><a href="#[2301678]">wlan_scan_cb</a>
 <LI><a href="#[2301630]">wlan_init_cb</a>
 <LI><a href="#[23015e8]">wifi_service_period_scan_wifi</a>
 <LI><a href="#[23016c0]">wlan_deinit_cb</a>
 <LI><a href="#[2369eb0]">_sputc</a>
 <LI><a href="#[23674b8]">_printf_outstr_char</a>
 <LI><a href="#[2367340]">_printf_input_char</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[15cf678]"></a>$Super$$GM_Trace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0050]"></a>$Super$$GM_ReleaseBuild</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0098]"></a>$Super$$GM_ReleaseBranch</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0008]"></a>$Super$$GM_ReleaseHwVer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cffc0]"></a>$Super$$GM_ReleaseVerno</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d3020]"></a>$Super$$GM_BuildDateTime</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf3f0]"></a>$Super$$GM_atoi</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf438]"></a>$Super$$GM_atof</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf1f8]"></a>$Super$$GM_memset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf288]"></a>$Super$$GM_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf2d0]"></a>$Super$$GM_memcmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf240]"></a>$Super$$GM_memmove</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cefb8]"></a>$Super$$GM_strcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cee98]"></a>$Super$$GM_strncpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf090]"></a>$Super$$GM_strcat</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cef28]"></a>$Super$$GM_strncat</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf000]"></a>$Super$$GM_strcmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15ceee0]"></a>$Super$$GM_strncmp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf048]"></a>$Super$$GM_strchr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cef70]"></a>$Super$$GM_strlen</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cee50]"></a>$Super$$GM_strstr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf168]"></a>$Super$$GM_sprintf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf1b0]"></a>$Super$$GM_snprintf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cee08]"></a>$Super$$GM_vsprintf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf0d8]"></a>$Super$$GM_sscanf</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d07a0]"></a>$Super$$GM_GpioInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0e18]"></a>$Super$$GM_GetGpioMode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0710]"></a>$Super$$GM_GpioSetLevel</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d07e8]"></a>$Super$$GM_GpioGetLevel</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0758]"></a>$Super$$GM_GpioSetDirection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0830]"></a>$Super$$GM_GpioGetDirection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d06c8]"></a>$Super$$GM_GpioSetPullSelection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d00e0]"></a>$Super$$GM_RegisterCallBack</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf558]"></a>$Super$$GM_UartOpen</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf630]"></a>$Super$$GM_UartClose</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf4c8]"></a>$Super$$GM_UartWrite</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf510]"></a>$Super$$GM_UartRead</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf5e8]"></a>$Super$$GM_UartClrRxBuffer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf5a0]"></a>$Super$$GM_UartClrTxBuffer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2138]"></a>$Super$$GM_CheckSimValid</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0cf8]"></a>$Super$$GM_GetImei</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0ab8]"></a>$Super$$GM_GetPlmn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0a70]"></a>$Super$$GM_GetServiceAvailability</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cff30]"></a>$Super$$GM_SetLocalTime</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0b90]"></a>$Super$$GM_GetLocalTime</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfd80]"></a>$Super$$GM_SetUartTrace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2018]"></a>$Super$$GM_CloseUartTrace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d02d8]"></a>$Super$$GM_MemoryAlloc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0290]"></a>$Super$$GM_MemoryFree</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf480]"></a>$Super$$GM_Ucs2ToAsc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d30b0]"></a>$Super$$GM_AscToUcs2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cff78]"></a>$Super$$GM_SendSMS</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2fd8]"></a>$Super$$GM_CallAnswer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2f90]"></a>$Super$$GM_CallHangUp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0320]"></a>$Super$$GM_MakeCall</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf6c0]"></a>$Super$$GM_SystemReboot</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf708]"></a>$Super$$GM_SystemPowerOff</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1b98]"></a>$Super$$GM_FS_Open</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1d90]"></a>$Super$$GM_FS_Close</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1b50]"></a>$Super$$GM_FS_Read</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d19e8]"></a>$Super$$GM_FS_Write</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1a78]"></a>$Super$$GM_FS_Seek</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1d48]"></a>$Super$$GM_FS_Commit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1be0]"></a>$Super$$GM_FS_GetFileSize</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1c28]"></a>$Super$$GM_FS_GetFilePosition</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0ea8]"></a>$Super$$GM_GetDiskFreeSpace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1cb8]"></a>$Super$$GM_FS_Delete</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1dd8]"></a>$Super$$GM_FS_CheckFile</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1c70]"></a>$Super$$GM_FS_GetCurrentDir</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1a30]"></a>$Super$$GM_FS_SetCurrentDir</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1d00]"></a>$Super$$GM_FS_CreateDir</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1b08]"></a>$Super$$GM_FS_RemoveDir</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1ac0]"></a>$Super$$GM_FS_Rename</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d19a0]"></a>$Super$$GM_FS_XDelete</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d03b0]"></a>$Super$$GM_IsinkBacklightCtrl</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfbd0]"></a>$Super$$GM_SocketCreate</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfc18]"></a>$Super$$GM_SocketConnect</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfb88]"></a>$Super$$GM_SocketRecv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfc60]"></a>$Super$$GM_SocketClose</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfaf8]"></a>$Super$$GM_SocketSend</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfb40]"></a>$Super$$GM_SocketRegisterCallBack</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0bd8]"></a>$Super$$GM_GetLocalIP</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfca8]"></a>$Super$$GM_SleepEnable</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfcf0]"></a>$Super$$GM_SleepDisable</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0368]"></a>$Super$$GM_KpledLevelCtrl</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1f88]"></a>$Super$$GM_CreateKalTimer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf948]"></a>$Super$$GM_StartKalTimer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf870]"></a>$Super$$GM_StopKalTimer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf8b8]"></a>$Super$$GM_StartTimer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf7e0]"></a>$Super$$GM_StopTimer</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d09e0]"></a>$Super$$GM_GetSignalValue</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0c68]"></a>$Super$$GM_GetLbsInfo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d05f0]"></a>$Super$$GM_I2cInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0680]"></a>$Super$$GM_I2cConfig</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0518]"></a>$Super$$GM_I2cWriteByte</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d05a8]"></a>$Super$$GM_I2cReadBytes</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0638]"></a>$Super$$GM_I2cGetMode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0560]"></a>$Super$$GM_I2cSetMode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d3140]"></a>$Super$$GM_AdcRead</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1e68]"></a>$Super$$GM_EintRegister</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1eb0]"></a>$Super$$GM_EintPinInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1e20]"></a>$Super$$GM_EintSetPolarity</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf750]"></a>$Super$$GM_SysUsdelay</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf798]"></a>$Super$$GM_SysMsdelay</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0cb0]"></a>$Super$$GM_GetImsi</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0d40]"></a>$Super$$GM_GetIccid</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0b00]"></a>$Super$$GM_GetPdpStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0dd0]"></a>$Super$$GM_GetGsmStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0488]"></a>$Super$$GM_ImageZiLimit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d04d0]"></a>$Super$$GM_ImageDummyBase</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1010]"></a>$Super$$GM_GetBarcode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0440]"></a>$Super$$GM_IsGprsAutoOn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d08c0]"></a>$Super$$GM_GetTcpStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0c20]"></a>$Super$$GM_GetLibStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfdc8]"></a>$Super$$GM_SetUartFunc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0d88]"></a>$Super$$GM_GetHostByName</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0ef0]"></a>$Super$$GM_GetCregStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0fc8]"></a>$Super$$GM_GetBearerStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d3188]"></a>$Super$$GM_AccountIdClose</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0e60]"></a>$Super$$GM_GetFakeCellFeature</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d30f8]"></a>$Super$$GM_ApnConfig</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0170]"></a>$Super$$GM_ReadWriteNvram</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0b48]"></a>$Super$$GM_GetNewAttachStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d03f8]"></a>$Super$$GM_IsWdtPwrOn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1ef8]"></a>$Super$$GM_DnsParserCallback</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0a28]"></a>$Super$$GM_GetSetFlightMode</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2060]"></a>$Super$$GM_CloseBearerAppId</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1058]"></a>$Super$$GM_GetApnMatch</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1f40]"></a>$Super$$GM_DeleteApn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfab0]"></a>$Super$$GM_SoftwareWdtCounterEnable</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfee8]"></a>$Super$$GM_SetSoftwareWdtCounter</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0998]"></a>$Super$$GM_GetSoftwareWdtCounter</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfe58]"></a>$Super$$GM_SetSwLogicCounterEnable</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfea0]"></a>$Super$$GM_SetSwLogicCounter</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfe10]"></a>$Super$$GM_SetSwLogicCounterMax</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0950]"></a>$Super$$GM_GetSwLogicCounter</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0908]"></a>$Super$$GM_GetSwLogicCounterMax</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf9d8]"></a>$Super$$GM_SpiReadData</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf990]"></a>$Super$$GM_SpiWriteData</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfa68]"></a>$Super$$GM_SpiFlashReadID</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfa20]"></a>$Super$$GM_SpiPinInit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf828]"></a>$Super$$GM_StopRecord</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf900]"></a>$Super$$GM_StartRecord</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0128]"></a>$Super$$GM_RecordRegister</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0f38]"></a>$Super$$GM_GetChrStatus</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0200]"></a>$Super$$GM_PowerKeyRegister</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1fd0]"></a>$Super$$GM_ConvertIpAddr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d01b8]"></a>$Super$$GM_ReadNvramLid</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d20f0]"></a>$Super$$GM_ChrCurrentConfig</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d20a8]"></a>$Super$$GM_ChrCurrentGet</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d3068]"></a>$Super$$GM_AutoApnCheck</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cfd38]"></a>$Super$$GM_Set_Mic_Volume</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf318]"></a>$Super$$GM_log10</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf360]"></a>$Super$$GM_log</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf120]"></a>$Super$$GM_sqrt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cf3a8]"></a>$Super$$GM_fabs</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15ced78]"></a>$Super$$wlan_init</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15cedc0]"></a>$Super$$wlan_deinit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15ced30]"></a>$Super$$wlan_scan</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0248]"></a>$Super$$GM_MemoryRealloc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0878]"></a>$Super$$GM_GetTime</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d0f80]"></a>$Super$$GM_GetChipRID</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1958]"></a>$Super$$GM_Func19</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1910]"></a>$Super$$GM_Func20</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d18c8]"></a>$Super$$GM_Func21</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1880]"></a>$Super$$GM_Func22</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1838]"></a>$Super$$GM_Func23</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d17f0]"></a>$Super$$GM_Func24</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d17a8]"></a>$Super$$GM_Func25</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1760]"></a>$Super$$GM_Func26</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1718]"></a>$Super$$GM_Func27</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d16d0]"></a>$Super$$GM_Func28</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1688]"></a>$Super$$GM_Func29</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1640]"></a>$Super$$GM_Func30</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d15f8]"></a>$Super$$GM_Func31</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d15b0]"></a>$Super$$GM_Func32</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1568]"></a>$Super$$GM_Func33</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1520]"></a>$Super$$GM_Func34</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d14d8]"></a>$Super$$GM_Func35</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1490]"></a>$Super$$GM_Func36</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1448]"></a>$Super$$GM_Func37</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1400]"></a>$Super$$GM_Func38</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d13b8]"></a>$Super$$GM_Func39</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1370]"></a>$Super$$GM_Func40</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1328]"></a>$Super$$GM_Func41</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d12e0]"></a>$Super$$GM_Func42</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1298]"></a>$Super$$GM_Func43</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1250]"></a>$Super$$GM_Func44</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1208]"></a>$Super$$GM_Func45</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d11c0]"></a>$Super$$GM_Func46</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1178]"></a>$Super$$GM_Func47</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d1130]"></a>$Super$$GM_Func48</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d10e8]"></a>$Super$$GM_Func49</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d10a0]"></a>$Super$$GM_Func50</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2f48]"></a>$Super$$GM_CallbackFunc1</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2c30]"></a>$Super$$GM_CallbackFunc2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2918]"></a>$Super$$GM_CallbackFunc3</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2600]"></a>$Super$$GM_CallbackFunc4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d22e8]"></a>$Super$$GM_CallbackFunc5</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2258]"></a>$Super$$GM_CallbackFunc6</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2210]"></a>$Super$$GM_CallbackFunc7</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d21c8]"></a>$Super$$GM_CallbackFunc8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2180]"></a>$Super$$GM_CallbackFunc9</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2f00]"></a>$Super$$GM_CallbackFunc10</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2eb8]"></a>$Super$$GM_CallbackFunc11</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2e70]"></a>$Super$$GM_CallbackFunc12</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2e28]"></a>$Super$$GM_CallbackFunc13</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2de0]"></a>$Super$$GM_CallbackFunc14</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2d98]"></a>$Super$$GM_CallbackFunc15</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2d50]"></a>$Super$$GM_CallbackFunc16</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2d08]"></a>$Super$$GM_CallbackFunc17</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2cc0]"></a>$Super$$GM_CallbackFunc18</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2c78]"></a>$Super$$GM_CallbackFunc19</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2be8]"></a>$Super$$GM_CallbackFunc20</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2ba0]"></a>$Super$$GM_CallbackFunc21</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2b58]"></a>$Super$$GM_CallbackFunc22</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2b10]"></a>$Super$$GM_CallbackFunc23</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2ac8]"></a>$Super$$GM_CallbackFunc24</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2a80]"></a>$Super$$GM_CallbackFunc25</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2a38]"></a>$Super$$GM_CallbackFunc26</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d29f0]"></a>$Super$$GM_CallbackFunc27</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d29a8]"></a>$Super$$GM_CallbackFunc28</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2960]"></a>$Super$$GM_CallbackFunc29</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d28d0]"></a>$Super$$GM_CallbackFunc30</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2888]"></a>$Super$$GM_CallbackFunc31</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2840]"></a>$Super$$GM_CallbackFunc32</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d27f8]"></a>$Super$$GM_CallbackFunc33</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d27b0]"></a>$Super$$GM_CallbackFunc34</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2768]"></a>$Super$$GM_CallbackFunc35</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2720]"></a>$Super$$GM_CallbackFunc36</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d26d8]"></a>$Super$$GM_CallbackFunc37</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2690]"></a>$Super$$GM_CallbackFunc38</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2648]"></a>$Super$$GM_CallbackFunc39</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d25b8]"></a>$Super$$GM_CallbackFunc40</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2570]"></a>$Super$$GM_CallbackFunc41</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2528]"></a>$Super$$GM_CallbackFunc42</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d24e0]"></a>$Super$$GM_CallbackFunc43</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2498]"></a>$Super$$GM_CallbackFunc44</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2450]"></a>$Super$$GM_CallbackFunc45</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2408]"></a>$Super$$GM_CallbackFunc46</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d23c0]"></a>$Super$$GM_CallbackFunc47</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2378]"></a>$Super$$GM_CallbackFunc48</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d2330]"></a>$Super$$GM_CallbackFunc49</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d22a0]"></a>$Super$$GM_CallbackFunc50</STRONG> (ARM, 0 bytes, Stack size 0 bytes, app_start.sym(ABSOLUTE))
<BR>[Address Reference Count : 1]<UL><LI> app_start.o(ServiceHeader)
</UL>
<P><STRONG><a name="[15d7670]"></a>GM_Trace</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7628]"></a>GM_ReleaseBuild</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d75e0]"></a>GM_ReleaseBranch</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7598]"></a>GM_ReleaseHwVer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7550]"></a>GM_ReleaseVerno</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
</UL>

<P><STRONG><a name="[15d7508]"></a>GM_BuildDateTime</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
</UL>

<P><STRONG><a name="[15d74c0]"></a>GM_atoi</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2304650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_track_mode (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode (via Veneer)
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock (via Veneer)
</UL>

<P><STRONG><a name="[15d7478]"></a>GM_atof</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7430]"></a>GM_memset</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cc988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_reset (via Veneer)
<LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para (via Veneer)
<LI><a href="#[15ce508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_create (via Veneer)
<LI><a href="#[15ce6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_create (via Veneer)
<LI><a href="#[23015a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_creat (via Veneer)
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc (via Veneer)
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat (via Veneer)
<LI><a href="#[23039a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_test_result (via Veneer)
<LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid (via Veneer)
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode (via Veneer)
<LI><a href="#[2304fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_protocol_data_to_file (via Veneer)
<LI><a href="#[2305028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_saved_protocol_data_from_file (via Veneer)
<LI><a href="#[2305070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_saved_protocol_data (via Veneer)
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet (via Veneer)
<LI><a href="#[2305460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_additional_lbs (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[23054f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_get_state (via Veneer)
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg (via Veneer)
<LI><a href="#[2305f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_file_extend (via Veneer)
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request (via Veneer)
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head (via Veneer)
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create (via Veneer)
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create (via Veneer)
<LI><a href="#[2306c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_send_request_failed (via Veneer)
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload (via Veneer)
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr (via Veneer)
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file (via Veneer)
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok (via Veneer)
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing (via Veneer)
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head (via Veneer)
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file (via Veneer)
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same (via Veneer)
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps (via Veneer)
<LI><a href="#[230a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsv (via Veneer)
<LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version (via Veneer)
<LI><a href="#[230a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive (via Veneer)
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive (via Veneer)
<LI><a href="#[230b8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_port_receive (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create (via Veneer)
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create (via Veneer)
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create (via Veneer)
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv (via Veneer)
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create (via Veneer)
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create (via Veneer)
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset (via Veneer)
<LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init (via Veneer)
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create (via Veneer)
</UL>

<P><STRONG><a name="[15d73e8]"></a>GM_memcpy</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc (via Veneer)
<LI><a href="#[23023f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_next_wakeup_time (via Veneer)
<LI><a href="#[23025a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_write_response_packet (via Veneer)
<LI><a href="#[23025f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_read_packet (via Veneer)
<LI><a href="#[2302710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_calibration_pmu_time (via Veneer)
<LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que (via Veneer)
<LI><a href="#[2302dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat_write_pmu_register_block (via Veneer)
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file (via Veneer)
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data (via Veneer)
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num (via Veneer)
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update (via Veneer)
<LI><a href="#[2305220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_work_mode_update (via Veneer)
<LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc (via Veneer)
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request (via Veneer)
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc (via Veneer)
<LI><a href="#[2306348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_file_request (via Veneer)
<LI><a href="#[2306420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_result_report (via Veneer)
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response (via Veneer)
<LI><a href="#[2306c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_get_item (via Veneer)
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set (via Veneer)
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload (via Veneer)
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file (via Veneer)
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save (via Veneer)
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem (via Veneer)
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc (via Veneer)
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing (via Veneer)
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack (via Veneer)
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack (via Veneer)
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack (via Veneer)
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file (via Veneer)
<LI><a href="#[2308a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peek_one_location_protocol_data (via Veneer)
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc (via Veneer)
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc (via Veneer)
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set (via Veneer)
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local (via Veneer)
<LI><a href="#[230a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsv (via Veneer)
<LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence (via Veneer)
<LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence (via Veneer)
<LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence (via Veneer)
<LI><a href="#[230af30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_at_ver (via Veneer)
<LI><a href="#[230af78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_at_ack (via Veneer)
<LI><a href="#[230afc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_td_ver (via Veneer)
<LI><a href="#[230b008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_td_ack (via Veneer)
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
<LI><a href="#[230b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_sentence_id (via Veneer)
<LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence (via Veneer)
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send (via Veneer)
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei (via Veneer)
<LI><a href="#[230bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_model_imei (via Veneer)
<LI><a href="#[230c0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_iccid_callback (via Veneer)
<LI><a href="#[230c130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_lbs_callback (via Veneer)
<LI><a href="#[230c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_imei_callback (via Veneer)
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr (via Veneer)
<LI><a href="#[230d330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imsi (via Veneer)
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get (via Veneer)
<LI><a href="#[230e920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek_and_get_len (via Veneer)
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek (via Veneer)
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert (via Veneer)
<LI><a href="#[230fa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_strdup (via Veneer)
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache (via Veneer)
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache (via Veneer)
</UL>

<P><STRONG><a name="[15d73a0]"></a>GM_memcmp</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc (via Veneer)
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num (via Veneer)
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working (via Veneer)
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive (via Veneer)
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack (via Veneer)
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei (via Veneer)
</UL>

<P><STRONG><a name="[15d7358]"></a>GM_memmove</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7310]"></a>GM_strcpy</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
</UL>

<P><STRONG><a name="[15d72c8]"></a>GM_strncpy</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc (via Veneer)
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request (via Veneer)
<LI><a href="#[2306228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_one_block (via Veneer)
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc (via Veneer)
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits (via Veneer)
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send (via Veneer)
<LI><a href="#[230c568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_failed (via Veneer)
<LI><a href="#[230cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name (via Veneer)
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
</UL>

<P><STRONG><a name="[15d7280]"></a>GM_strcat</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7238]"></a>GM_strncat</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d71f0]"></a>GM_strcmp</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan (via Veneer)
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei (via Veneer)
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same (via Veneer)
<LI><a href="#[230b098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_mtk_ack (via Veneer)
<LI><a href="#[230b0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_zda (via Veneer)
<LI><a href="#[230b128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_vtg (via Veneer)
<LI><a href="#[230b170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsv (via Veneer)
<LI><a href="#[230b1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gst (via Veneer)
<LI><a href="#[230b200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gll (via Veneer)
<LI><a href="#[230b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsa (via Veneer)
<LI><a href="#[230b290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gga (via Veneer)
<LI><a href="#[230b2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_rmc (via Veneer)
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
<LI><a href="#[230b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_sentence_id (via Veneer)
<LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket_get_host_by_name_callback (via Veneer)
</UL>

<P><STRONG><a name="[15d71a8]"></a>GM_strncmp</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2306270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_file_extend_same (via Veneer)
</UL>

<P><STRONG><a name="[15d7160]"></a>GM_strchr</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d7118]"></a>GM_strlen</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust (via Veneer)
<LI><a href="#[23040b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_version_string (via Veneer)
<LI><a href="#[2304608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_dev_apn (via Veneer)
<LI><a href="#[2304728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set__udp_ip (via Veneer)
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns (via Veneer)
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num (via Veneer)
<LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response (via Veneer)
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode (via Veneer)
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid (via Veneer)
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip (via Veneer)
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head (via Veneer)
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create (via Veneer)
<LI><a href="#[2306420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_result_report (via Veneer)
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response (via Veneer)
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr (via Veneer)
<LI><a href="#[2307690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_deault (via Veneer)
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault (via Veneer)
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok (via Veneer)
<LI><a href="#[23077b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_para_to_cfg (via Veneer)
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para (via Veneer)
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id (via Veneer)
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head (via Veneer)
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test (via Veneer)
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg (via Veneer)
<LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence (via Veneer)
<LI><a href="#[230aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_epo_sentence (via Veneer)
<LI><a href="#[230acf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_set_min_snr_sentence (via Veneer)
<LI><a href="#[230ad38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_active_interference_cancellation (via Veneer)
<LI><a href="#[230ad80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_high_accuracy_sentence (via Veneer)
<LI><a href="#[230adc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_full_cold_start_sentence (via Veneer)
<LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence (via Veneer)
<LI><a href="#[230ae58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_time_sentence (via Veneer)
<LI><a href="#[230aea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_qeury_version_sentence (via Veneer)
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write (via Veneer)
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send (via Veneer)
<LI><a href="#[230bb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recv_sms (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei (via Veneer)
<LI><a href="#[230bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_model_imei (via Veneer)
<LI><a href="#[230c0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_iccid_callback (via Veneer)
<LI><a href="#[230c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_imei_callback (via Veneer)
<LI><a href="#[230c1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imei_is_valid (via Veneer)
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex (via Veneer)
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create (via Veneer)
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create (via Veneer)
<LI><a href="#[230d330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imsi (via Veneer)
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid (via Veneer)
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create (via Veneer)
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create (via Veneer)
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create (via Veneer)
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload (via Veneer)
<LI><a href="#[230fa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_strdup (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print (via Veneer)
</UL>

<P><STRONG><a name="[15d70d0]"></a>GM_strstr</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
</UL>

<P><STRONG><a name="[15d7088]"></a>GM_sprintf</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[2302680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bcd_time_string (via Veneer)
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string (via Veneer)
<LI><a href="#[23040b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_version_string (via Veneer)
<LI><a href="#[23042a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_workmode_string (via Veneer)
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns (via Veneer)
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response (via Veneer)
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data (via Veneer)
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set (via Veneer)
<LI><a href="#[230aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_epo_sentence (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei (via Veneer)
<LI><a href="#[230f808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_print_to_buffer (via Veneer)
</UL>

<P><STRONG><a name="[15d7040]"></a>GM_snprintf</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid (via Veneer)
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request (via Veneer)
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response (via Veneer)
<LI><a href="#[2307720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_para_ok (via Veneer)
<LI><a href="#[23077b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_para_to_cfg (via Veneer)
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test (via Veneer)
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg (via Veneer)
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence (via Veneer)
<LI><a href="#[230acf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_set_min_snr_sentence (via Veneer)
<LI><a href="#[230ad38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_active_interference_cancellation (via Veneer)
<LI><a href="#[230ad80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_high_accuracy_sentence (via Veneer)
<LI><a href="#[230adc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_full_cold_start_sentence (via Veneer)
<LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence (via Veneer)
<LI><a href="#[230ae58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_time_sentence (via Veneer)
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex (via Veneer)
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect (via Veneer)
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy (via Veneer)
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print (via Veneer)
</UL>

<P><STRONG><a name="[15d6ff8]"></a>GM_vsprintf</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print (via Veneer)
</UL>

<P><STRONG><a name="[15d6fb0]"></a>GM_sscanf</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2304608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_dev_apn (via Veneer)
<LI><a href="#[2304728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set__udp_ip (via Veneer)
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns (via Veneer)
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create (via Veneer)
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr (via Veneer)
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok (via Veneer)
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para (via Veneer)
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same (via Veneer)
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create (via Veneer)
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create (via Veneer)
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create (via Veneer)
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create (via Veneer)
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create (via Veneer)
</UL>

<P><STRONG><a name="[15d6f68]"></a>GM_GpioInit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_create (via Veneer)
<LI><a href="#[15ce4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_create (via Veneer)
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port (via Veneer)
</UL>

<P><STRONG><a name="[15d6f20]"></a>GM_GetGpioMode</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6ed8]"></a>GM_GpioSetLevel</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cceb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_led_proc (via Veneer)
<LI><a href="#[230deb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_open_gps (via Veneer)
<LI><a href="#[230df48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_close_gps (via Veneer)
</UL>

<P><STRONG><a name="[15d6e90]"></a>GM_GpioGetLevel</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6e48]"></a>GM_GpioSetDirection</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6e00]"></a>GM_GpioGetDirection</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6db8]"></a>GM_GpioSetPullSelection</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6d70]"></a>GM_RegisterCallBack</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_create (via Veneer)
<LI><a href="#[15ce3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_create (via Veneer)
<LI><a href="#[15ce508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_create (via Veneer)
</UL>

<P><STRONG><a name="[15d6d28]"></a>GM_UartOpen</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port (via Veneer)
</UL>

<P><STRONG><a name="[15d6ce0]"></a>GM_UartClose</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port (via Veneer)
</UL>

<P><STRONG><a name="[15d6c98]"></a>GM_UartWrite</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write (via Veneer)
</UL>

<P><STRONG><a name="[15d6c50]"></a>GM_UartRead</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive (via Veneer)
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive (via Veneer)
<LI><a href="#[230b8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_port_receive (via Veneer)
</UL>

<P><STRONG><a name="[15d6c08]"></a>GM_UartClrRxBuffer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port (via Veneer)
</UL>

<P><STRONG><a name="[15d6bc0]"></a>GM_UartClrTxBuffer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port (via Veneer)
</UL>

<P><STRONG><a name="[15d6b78]"></a>GM_CheckSimValid</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23038d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_sim (via Veneer)
<LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify (via Veneer)
</UL>

<P><STRONG><a name="[15d6b30]"></a>GM_GetImei</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
</UL>

<P><STRONG><a name="[15d6ae8]"></a>GM_GetPlmn</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6aa0]"></a>GM_GetServiceAvailability</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc (via Veneer)
</UL>

<P><STRONG><a name="[15d6a58]"></a>GM_SetLocalTime</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
</UL>

<P><STRONG><a name="[15d6a10]"></a>GM_GetLocalTime</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time (via Veneer)
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info (via Veneer)
</UL>

<P><STRONG><a name="[15d69c8]"></a>GM_SetUartTrace</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6980]"></a>GM_CloseUartTrace</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6938]"></a>GM_MemoryAlloc</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local (via Veneer)
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string (via Veneer)
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet (via Veneer)
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive (via Veneer)
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive (via Veneer)
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set (via Veneer)
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id (via Veneer)
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save (via Veneer)
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive (via Veneer)
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive (via Veneer)
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet (via Veneer)
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg (via Veneer)
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set (via Veneer)
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv (via Veneer)
<LI><a href="#[230e770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_create (via Veneer)
<LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init (via Veneer)
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create (via Veneer)
<LI><a href="#[230fa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_strdup (via Veneer)
</UL>

<P><STRONG><a name="[15d68f0]"></a>GM_MemoryFree</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local (via Veneer)
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string (via Veneer)
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet (via Veneer)
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive (via Veneer)
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive (via Veneer)
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set (via Veneer)
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive (via Veneer)
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive (via Veneer)
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet (via Veneer)
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg (via Veneer)
<LI><a href="#[23093a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_release (via Veneer)
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set (via Veneer)
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv (via Veneer)
<LI><a href="#[230e728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_destroy (via Veneer)
<LI><a href="#[230ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_delete (via Veneer)
<LI><a href="#[230f928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_destroy (via Veneer)
</UL>

<P><STRONG><a name="[15d68a8]"></a>GM_Ucs2ToAsc</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6860]"></a>GM_AscToUcs2</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6818]"></a>GM_SendSMS</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230bb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_real (via Veneer)
</UL>

<P><STRONG><a name="[15d67d0]"></a>GM_CallAnswer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230c010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_incomming_call (via Veneer)
</UL>

<P><STRONG><a name="[15d6788]"></a>GM_CallHangUp</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6740]"></a>GM_MakeCall</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d66f8]"></a>GM_SystemReboot</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230e0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot_atonce (via Veneer)
</UL>

<P><STRONG><a name="[15d66b0]"></a>GM_SystemPowerOff</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6668]"></a>GM_FS_Open</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file (via Veneer)
<LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file (via Veneer)
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file (via Veneer)
<LI><a href="#[2304fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_protocol_data_to_file (via Veneer)
<LI><a href="#[2305028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_saved_protocol_data_from_file (via Veneer)
<LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open (via Veneer)
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load (via Veneer)
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create (via Veneer)
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write (via Veneer)
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file (via Veneer)
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum (via Veneer)
</UL>

<P><STRONG><a name="[15d6620]"></a>GM_FS_Close</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file (via Veneer)
<LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file (via Veneer)
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file (via Veneer)
<LI><a href="#[2304fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_protocol_data_to_file (via Veneer)
<LI><a href="#[2305028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_saved_protocol_data_from_file (via Veneer)
<LI><a href="#[2305f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_file_extend (via Veneer)
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request (via Veneer)
<LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open (via Veneer)
<LI><a href="#[23063d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_finish (via Veneer)
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load (via Veneer)
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create (via Veneer)
<LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write (via Veneer)
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write (via Veneer)
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file (via Veneer)
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum (via Veneer)
</UL>

<P><STRONG><a name="[15d65d8]"></a>GM_FS_Read</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file (via Veneer)
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file (via Veneer)
<LI><a href="#[2305028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_saved_protocol_data_from_file (via Veneer)
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum (via Veneer)
</UL>

<P><STRONG><a name="[15d6590]"></a>GM_FS_Write</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file (via Veneer)
<LI><a href="#[2304fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_protocol_data_to_file (via Veneer)
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create (via Veneer)
<LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write (via Veneer)
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save (via Veneer)
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param (via Veneer)
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write (via Veneer)
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file (via Veneer)
</UL>

<P><STRONG><a name="[15d6548]"></a>GM_FS_Seek</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write (via Veneer)
</UL>

<P><STRONG><a name="[15d6500]"></a>GM_FS_Commit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file (via Veneer)
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save (via Veneer)
</UL>

<P><STRONG><a name="[15d64b8]"></a>GM_FS_GetFileSize</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum (via Veneer)
</UL>

<P><STRONG><a name="[15d6470]"></a>GM_FS_GetFilePosition</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6428]"></a>GM_GetDiskFreeSpace</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d63e0]"></a>GM_FS_Delete</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file (via Veneer)
<LI><a href="#[23040f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_reset (via Veneer)
<LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file (via Veneer)
</UL>

<P><STRONG><a name="[15d6398]"></a>GM_FS_CheckFile</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file (via Veneer)
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file (via Veneer)
<LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file (via Veneer)
</UL>

<P><STRONG><a name="[15d6350]"></a>GM_FS_GetCurrentDir</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6308]"></a>GM_FS_SetCurrentDir</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d62c0]"></a>GM_FS_CreateDir</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6278]"></a>GM_FS_RemoveDir</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d6230]"></a>GM_FS_Rename</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server (via Veneer)
</UL>

<P><STRONG><a name="[15d61e8]"></a>GM_FS_XDelete</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d61a0]"></a>GM_IsinkBacklightCtrl</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ccd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gps_led (via Veneer)
</UL>

<P><STRONG><a name="[15d6158]"></a>GM_SocketCreate</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect (via Veneer)
</UL>

<P><STRONG><a name="[15d6110]"></a>GM_SocketConnect</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect (via Veneer)
</UL>

<P><STRONG><a name="[15d60c8]"></a>GM_SocketRecv</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv (via Veneer)
</UL>

<P><STRONG><a name="[15d6080]"></a>GM_SocketClose</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2305a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_close (via Veneer)
<LI><a href="#[2306d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close (via Veneer)
<LI><a href="#[2307f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close (via Veneer)
<LI><a href="#[2308e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close (via Veneer)
<LI><a href="#[2309358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close (via Veneer)
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy (via Veneer)
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify (via Veneer)
</UL>

<P><STRONG><a name="[15d6038]"></a>GM_SocketSend</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send (via Veneer)
</UL>

<P><STRONG><a name="[15d5ff0]"></a>GM_SocketRegisterCallBack</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy (via Veneer)
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc (via Veneer)
</UL>

<P><STRONG><a name="[15d5fa8]"></a>GM_GetLocalIP</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5f60]"></a>GM_SleepEnable</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_sleep (via Veneer)
</UL>

<P><STRONG><a name="[15d5f18]"></a>GM_SleepDisable</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230df00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_awake (via Veneer)
</UL>

<P><STRONG><a name="[15d5ed0]"></a>GM_KpledLevelCtrl</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15cccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gsm_led (via Veneer)
</UL>

<P><STRONG><a name="[15d5e88]"></a>GM_CreateKalTimer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry (via Veneer)
</UL>

<P><STRONG><a name="[15d5e40]"></a>GM_StartKalTimer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry (via Veneer)
</UL>

<P><STRONG><a name="[15d5df8]"></a>GM_StopKalTimer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5db0]"></a>GM_StartTimer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_create (via Veneer)
<LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry (via Veneer)
<LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc (via Veneer)
<LI><a href="#[15ce8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_1s_proc (via Veneer)
<LI><a href="#[23015e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_period_scan_wifi (via Veneer)
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs (via Veneer)
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info (via Veneer)
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on (via Veneer)
<LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg (via Veneer)
<LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version (via Veneer)
<LI><a href="#[230a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_version (via Veneer)
<LI><a href="#[230a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_at_version (via Veneer)
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data (via Veneer)
<LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version (via Veneer)
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230bbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_callback (via Veneer)
<LI><a href="#[230c130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_lbs_callback (via Veneer)
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot (via Veneer)
</UL>

<P><STRONG><a name="[15d5d68]"></a>GM_StopTimer</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on (via Veneer)
<LI><a href="#[2301cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_close (via Veneer)
<LI><a href="#[2303e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_off (via Veneer)
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs (via Veneer)
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off (via Veneer)
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data (via Veneer)
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state (via Veneer)
</UL>

<P><STRONG><a name="[15d5d20]"></a>GM_GetSignalValue</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq (via Veneer)
</UL>

<P><STRONG><a name="[15d5cd8]"></a>GM_GetLbsInfo</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
</UL>

<P><STRONG><a name="[15d5c90]"></a>GM_I2cInit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5c48]"></a>GM_I2cConfig</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5c00]"></a>GM_I2cWriteByte</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5bb8]"></a>GM_I2cReadBytes</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5b70]"></a>GM_I2cGetMode</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5b28]"></a>GM_I2cSetMode</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5ae0]"></a>GM_AdcRead</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5a98]"></a>GM_EintRegister</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5a50]"></a>GM_EintPinInit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5a08]"></a>GM_EintSetPolarity</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d59c0]"></a>GM_SysUsdelay</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5978]"></a>GM_SysMsdelay</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info (via Veneer)
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on (via Veneer)
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data (via Veneer)
</UL>

<P><STRONG><a name="[15d5930]"></a>GM_GetImsi</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
</UL>

<P><STRONG><a name="[15d58e8]"></a>GM_GetIccid</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card (via Veneer)
</UL>

<P><STRONG><a name="[15d58a0]"></a>GM_GetPdpStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5858]"></a>GM_GetGsmStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5810]"></a>GM_ImageZiLimit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d57c8]"></a>GM_ImageDummyBase</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local (via Veneer)
</UL>

<P><STRONG><a name="[15d5780]"></a>GM_GetBarcode</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust (via Veneer)
</UL>

<P><STRONG><a name="[15d5738]"></a>GM_IsGprsAutoOn</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d56f0]"></a>GM_GetTcpStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230cbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_ackseq (via Veneer)
</UL>

<P><STRONG><a name="[15d56a8]"></a>GM_GetLibStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5660]"></a>GM_SetUartFunc</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5618]"></a>GM_GetHostByName</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name (via Veneer)
</UL>

<P><STRONG><a name="[15d55d0]"></a>GM_GetCregStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_creg_state (via Veneer)
</UL>

<P><STRONG><a name="[15d5588]"></a>GM_GetBearerStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc (via Veneer)
</UL>

<P><STRONG><a name="[15d5540]"></a>GM_AccountIdClose</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy (via Veneer)
</UL>

<P><STRONG><a name="[15d54f8]"></a>GM_GetFakeCellFeature</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d54b0]"></a>GM_ApnConfig</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
</UL>

<P><STRONG><a name="[15d5468]"></a>GM_ReadWriteNvram</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust (via Veneer)
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp (via Veneer)
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id (via Veneer)
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save (via Veneer)
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei (via Veneer)
</UL>

<P><STRONG><a name="[15d5420]"></a>GM_GetNewAttachStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d53d8]"></a>GM_IsWdtPwrOn</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5390]"></a>GM_DnsParserCallback</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create (via Veneer)
</UL>

<P><STRONG><a name="[15d5348]"></a>GM_GetSetFlightMode</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5300]"></a>GM_CloseBearerAppId</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d52b8]"></a>GM_GetApnMatch</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5270]"></a>GM_DeleteApn</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5228]"></a>GM_SoftwareWdtCounterEnable</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d51e0]"></a>GM_SetSoftwareWdtCounter</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5198]"></a>GM_GetSoftwareWdtCounter</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5150]"></a>GM_SetSwLogicCounterEnable</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5108]"></a>GM_SetSwLogicCounter</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d50c0]"></a>GM_SetSwLogicCounterMax</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5078]"></a>GM_GetSwLogicCounter</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d5030]"></a>GM_GetSwLogicCounterMax</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4fe8]"></a>GM_SpiReadData</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4fa0]"></a>GM_SpiWriteData</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4f58]"></a>GM_SpiFlashReadID</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4f10]"></a>GM_SpiPinInit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4ec8]"></a>GM_StopRecord</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4e80]"></a>GM_StartRecord</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4e38]"></a>GM_RecordRegister</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4df0]"></a>GM_GetChrStatus</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4da8]"></a>GM_PowerKeyRegister</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4d60]"></a>GM_ConvertIpAddr</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para (via Veneer)
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create (via Veneer)
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr (via Veneer)
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok (via Veneer)
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same (via Veneer)
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create (via Veneer)
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create (via Veneer)
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create (via Veneer)
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create (via Veneer)
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create (via Veneer)
</UL>

<P><STRONG><a name="[15d4d18]"></a>GM_ReadNvramLid</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust (via Veneer)
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp (via Veneer)
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id (via Veneer)
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save (via Veneer)
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei (via Veneer)
</UL>

<P><STRONG><a name="[15d4cd0]"></a>GM_ChrCurrentConfig</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4c88]"></a>GM_ChrCurrentGet</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4c40]"></a>GM_AutoApnCheck</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn (via Veneer)
</UL>

<P><STRONG><a name="[15d4bf8]"></a>GM_Set_Mic_Volume</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4bb0]"></a>GM_log10</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4b68]"></a>GM_log</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4b20]"></a>GM_sqrt</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4ad8]"></a>GM_fabs</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4a90]"></a>wlan_init</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[23015e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_period_scan_wifi (via Veneer)
<LI><a href="#[2301630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init_cb (via Veneer)
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on (via Veneer)
</UL>

<P><STRONG><a name="[15d4a48]"></a>wlan_deinit</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2301678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan_cb (via Veneer)
<LI><a href="#[23016c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_deinit_cb (via Veneer)
<LI><a href="#[2303e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_off (via Veneer)
</UL>

<P><STRONG><a name="[15d4a00]"></a>wlan_scan</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2301630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init_cb (via Veneer)
<LI><a href="#[2301678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan_cb (via Veneer)
</UL>

<P><STRONG><a name="[15d49b8]"></a>GM_MemoryRealloc</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4970]"></a>GM_GetTime</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4928]"></a>GM_GetChipRID</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid (via Veneer)
</UL>

<P><STRONG><a name="[15d48e0]"></a>GM_Func19</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4898]"></a>GM_Func20</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4850]"></a>GM_Func21</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4808]"></a>GM_Func22</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d47c0]"></a>GM_Func23</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4778]"></a>GM_Func24</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4730]"></a>GM_Func25</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d46e8]"></a>GM_Func26</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d46a0]"></a>GM_Func27</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4658]"></a>GM_Func28</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4610]"></a>GM_Func29</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d45c8]"></a>GM_Func30</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4580]"></a>GM_Func31</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4538]"></a>GM_Func32</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d44f0]"></a>GM_Func33</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d44a8]"></a>GM_Func34</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4460]"></a>GM_Func35</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4418]"></a>GM_Func36</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d43d0]"></a>GM_Func37</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4388]"></a>GM_Func38</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4340]"></a>GM_Func39</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d42f8]"></a>GM_Func40</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d42b0]"></a>GM_Func41</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4268]"></a>GM_Func42</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4220]"></a>GM_Func43</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d41d8]"></a>GM_Func44</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4190]"></a>GM_Func45</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4148]"></a>GM_Func46</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4100]"></a>GM_Func47</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d40b8]"></a>GM_Func48</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4070]"></a>GM_Func49</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d4028]"></a>GM_Func50</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3fe0]"></a>GM_CallbackFunc1</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3f98]"></a>GM_CallbackFunc2</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3f50]"></a>GM_CallbackFunc3</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3f08]"></a>GM_CallbackFunc4</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3ec0]"></a>GM_CallbackFunc5</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3e78]"></a>GM_CallbackFunc6</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3e30]"></a>GM_CallbackFunc7</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3de8]"></a>GM_CallbackFunc8</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3da0]"></a>GM_CallbackFunc9</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3d58]"></a>GM_CallbackFunc10</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3d10]"></a>GM_CallbackFunc11</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3cc8]"></a>GM_CallbackFunc12</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3c80]"></a>GM_CallbackFunc13</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3c38]"></a>GM_CallbackFunc14</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3bf0]"></a>GM_CallbackFunc15</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3ba8]"></a>GM_CallbackFunc16</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3b60]"></a>GM_CallbackFunc17</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3b18]"></a>GM_CallbackFunc18</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3ad0]"></a>GM_CallbackFunc19</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3a88]"></a>GM_CallbackFunc20</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3a40]"></a>GM_CallbackFunc21</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d39f8]"></a>GM_CallbackFunc22</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d39b0]"></a>GM_CallbackFunc23</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3968]"></a>GM_CallbackFunc24</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3920]"></a>GM_CallbackFunc25</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d38d8]"></a>GM_CallbackFunc26</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3890]"></a>GM_CallbackFunc27</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3848]"></a>GM_CallbackFunc28</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3800]"></a>GM_CallbackFunc29</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d37b8]"></a>GM_CallbackFunc30</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3770]"></a>GM_CallbackFunc31</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3728]"></a>GM_CallbackFunc32</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d36e0]"></a>GM_CallbackFunc33</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3698]"></a>GM_CallbackFunc34</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3650]"></a>GM_CallbackFunc35</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3608]"></a>GM_CallbackFunc36</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d35c0]"></a>GM_CallbackFunc37</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3578]"></a>GM_CallbackFunc38</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3530]"></a>GM_CallbackFunc39</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d34e8]"></a>GM_CallbackFunc40</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d34a0]"></a>GM_CallbackFunc41</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3458]"></a>GM_CallbackFunc42</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3410]"></a>GM_CallbackFunc43</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d33c8]"></a>GM_CallbackFunc44</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3380]"></a>GM_CallbackFunc45</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3338]"></a>GM_CallbackFunc46</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d32f0]"></a>GM_CallbackFunc47</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d32a8]"></a>GM_CallbackFunc48</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3260]"></a>GM_CallbackFunc49</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d3218]"></a>GM_CallbackFunc50</STRONG> (ARM, 4 bytes, Stack size unknown bytes, app_start.o(ServiceHeader), UNUSED, KEPT)

<P><STRONG><a name="[15d31d0]"></a>TK_dll_set_sb</STRONG> (ARM, 0 bytes, Stack size unknown bytes, app_start.o(ServiceHeader))
<BR><BR>[Called By]<UL><LI><a href="#[15ce790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLL_init_SB (via Veneer)
<LI><a href="#[15cec10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Service_Entry (via Veneer)
</UL>

<P><STRONG><a name="[15ce8b0]"></a>timer_1s_proc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8160 + Unknown Stack Size
<LI>Call Chain = timer_1s_proc &rArr; auto_test_timer_proc &rArr; auto_test_self_test &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ce748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_timer_proc
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[15ce868]"></a>timer_10ms_proc</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7768 + Unknown Stack Size
<LI>Call Chain = timer_10ms_proc &rArr; gprs_timer_proc &rArr; gps_service_timer_proc &rArr; gps_service_work_proc &rArr; protocol_msg_receive &rArr; protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ce2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timer_proc
<LI><a href="#[15ce430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_timer_proc
<LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
<LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
<LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[15ce820]"></a>kal_timer_1s_proc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kal_timer_1s_proc
</UL>
<BR>[Calls]<UL><LI><a href="#[15ce1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_timer_proc
<LI><a href="#[15ce358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_timer_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[15ce7d8]"></a>app_main_entry</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5312 + Unknown Stack Size
<LI>Call Chain = app_main_entry &rArr; config_service_read_from_local &rArr; check_para_ok &rArr; check_address_para_ok &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ce238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_create
<LI><a href="#[15ce310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_create
<LI><a href="#[15ce3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_create
<LI><a href="#[15ce3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_create
<LI><a href="#[15ce478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_create
<LI><a href="#[15ce4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_create
<LI><a href="#[15ce508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_create
<LI><a href="#[15ce550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_create
<LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
<LI><a href="#[15ce6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_create
<LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d5e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartKalTimer (via Veneer)
<LI><a href="#[15d5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_CreateKalTimer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[15ce790]"></a>DLL_init_SB</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = DLL_init_SB
</UL>
<BR>[Calls]<UL><LI><a href="#[15d31d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_dll_set_sb (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[15cec10]"></a>Service_Entry</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Service_Entry
</UL>
<BR>[Calls]<UL><LI><a href="#[15d31d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_dll_set_sb (via Veneer)
</UL>

<P><STRONG><a name="[15ce238]"></a>util_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[15cde48]"></a>util_destroy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15ce1f0]"></a>util_timer_proc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kal_timer_1s_proc
</UL>

<P><STRONG><a name="[15cde00]"></a>util_chr</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_same_number_in_string
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
</UL>

<P><STRONG><a name="[15cddb8]"></a>util_asc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cd5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_long_to_asc
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
</UL>

<P><STRONG><a name="[15cdd70]"></a>DWord2BCD</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = DWord2BCD
</UL>
<BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
</UL>

<P><STRONG><a name="[15cdd28]"></a>util_remove_char</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = util_remove_char
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[15cdce0]"></a>util_to_upper</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cdc98]"></a>util_to_lower</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cdc50]"></a>util_string_upper</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = util_string_upper
</UL>
<BR>[Called By]<UL><LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[15cdc08]"></a>util_string_number_counter</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[15cdbc0]"></a>util_string_lower</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cdb78]"></a>util_is_valid_dns</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = util_is_valid_dns
</UL>
<BR>[Called By]<UL><LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[15cdb30]"></a>util_is_valid_ip</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cdae8]"></a>util_tm_to_mtktime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15cdaa0]"></a>util_localtime</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = util_localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
</UL>

<P><STRONG><a name="[15cda58]"></a>util_is_leap_year</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = util_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime
<LI><a href="#[15cd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_gmtime
<LI><a href="#[15cd9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_items_mktime
</UL>

<P><STRONG><a name="[15cda10]"></a>util_get_day</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_items_mktime
</UL>

<P><STRONG><a name="[15cd9c8]"></a>util_items_mktime</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cda10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_day
<LI><a href="#[15cda58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
</UL>

<P><STRONG><a name="[15cd980]"></a>util_mktime</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = util_mktime &rArr; util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_items_mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_bcd_to_sec
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[230aa68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_get_utc_time
</UL>

<P><STRONG><a name="[15cd938]"></a>util_get_utc_time</STRONG> (Thumb, 62 bytes, Stack size 80 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = util_get_utc_time &rArr; util_mktime &rArr; util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
<LI><a href="#[15d6a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetLocalTime (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time
<LI><a href="#[2301d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_the_device_need_into_lpm
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2304698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_timepoint_mode
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
</UL>

<P><STRONG><a name="[15cd8f0]"></a>util_get_current_local_time</STRONG> (Thumb, 226 bytes, Stack size 104 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = util_get_current_local_time &rArr; util_get_utc_time &rArr; util_mktime &rArr; util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15cdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_localtime
<LI><a href="#[15cdae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_tm_to_mtktime
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[15cd8a8]"></a>util_utc_sec_to_bcdtime_base2000</STRONG> (Thumb, 204 bytes, Stack size 104 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = util_utc_sec_to_bcdtime_base2000 &rArr; util_localtime
</UL>
<BR>[Calls]<UL><LI><a href="#[15cdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_localtime
<LI><a href="#[15cdae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_tm_to_mtktime
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
</UL>

<P><STRONG><a name="[15cd860]"></a>util_gmtime</STRONG> (Thumb, 150 bytes, Stack size 80 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = util_gmtime &rArr; util_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[15cda58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_leap_year
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15cd818]"></a>util_mtktime_to_gpstime</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = util_mtktime_to_gpstime &rArr; util_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[15cda58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_leap_year
<LI><a href="#[236e7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[236e8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence
</UL>

<P><STRONG><a name="[15cd7d0]"></a>util_mtktime_to_tm</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cd788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_bcd_to_sec
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
</UL>

<P><STRONG><a name="[15cd788]"></a>util_bcd_to_sec</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = util_bcd_to_sec &rArr; util_mktime &rArr; util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_tm
<LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2304f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_saved_protocol_data_gps_time
</UL>

<P><STRONG><a name="[15cd740]"></a>util_clock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timer_proc
<LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
<LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
<LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2301558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_timer_proc
<LI><a href="#[2301678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan_cb
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on
<LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_the_device_need_into_lpm
<LI><a href="#[2301f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_into_lpm_proc
<LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string
<LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc
<LI><a href="#[23038d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_sim
<LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[23050b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_saved_protocol_data_valid
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[23052b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_remaining_number
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data
<LI><a href="#[2305340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_next_time_and_environment
<LI><a href="#[2305388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_extended_alarm_status
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid
<LI><a href="#[2305418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_device_model
<LI><a href="#[2305460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_additional_lbs
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
<LI><a href="#[23054f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_get_state
<LI><a href="#[2305538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_send_packet
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
<LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_data_finish_proc
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_id_len
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2306270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_file_extend_same
<LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open
<LI><a href="#[2306348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_file_request
<LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
<LI><a href="#[23063d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_finish
<LI><a href="#[2306420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_result_report
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
<LI><a href="#[2306540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[2306be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_retry_config
<LI><a href="#[2306c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_send_request_failed
<LI><a href="#[2306cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_request
<LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[2306dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_pwd
<LI><a href="#[2306e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_zone
<LI><a href="#[2306e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_byte
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_short
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[2307498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_length
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[23082a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_id_len
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei
<LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_one_gps
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same
<LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
<LI><a href="#[2308e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_data_finish_proc
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
<LI><a href="#[23093e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_data_finish_proc
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
<LI><a href="#[230a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state_change
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230b8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_port_receive
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230c6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_failed
<LI><a href="#[230c718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close_for_reconnect
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close_for_reconnect
<LI><a href="#[230c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_destroy
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket_get_host_by_name_callback
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
<LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
<LI><a href="#[230d960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_check_need_reboot
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[2310228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_mileage
</UL>

<P><STRONG><a name="[15cd6f8]"></a>util_utf8_msg_len</STRONG> (Thumb, 112 bytes, Stack size 4 bytes, utility.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cd6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utf8_to_unicode
</UL>

<P><STRONG><a name="[15cd6b0]"></a>util_utf8_to_unicode</STRONG> (Thumb, 178 bytes, Stack size 36 bytes, utility.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cd6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utf8_msg_len
</UL>

<P><STRONG><a name="[15cd668]"></a>util_ucs2_u16_to_u8</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cd620]"></a>util_ucs2_byte_revert</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, utility.o(.text), UNUSED)

<P><STRONG><a name="[15cd5d8]"></a>util_long_to_asc</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = util_long_to_asc
</UL>
<BR>[Calls]<UL><LI><a href="#[15cddb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_asc
</UL>
<BR>[Called By]<UL><LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
</UL>

<P><STRONG><a name="[15cd590]"></a>util_delete_file</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = util_delete_file
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_CheckFile (via Veneer)
<LI><a href="#[15d63e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Delete (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2307e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_delele_file
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
</UL>

<P><STRONG><a name="[15cd548]"></a>util_ucs2_to_ascii</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = util_ucs2_to_ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file
</UL>

<P><STRONG><a name="[15cd500]"></a>util_mile_to_km</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = util_mile_to_km &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236fd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15cd4b8]"></a>util_isdigit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cd428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_strtoul
<LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
<LI><a href="#[230c1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imei_is_valid
</UL>

<P><STRONG><a name="[15cd470]"></a>util_isprint</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utility.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan
<LI><a href="#[230b440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_isfield
<LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check
</UL>

<P><STRONG><a name="[15cd428]"></a>util_strtoul</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isdigit
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_strtol
</UL>

<P><STRONG><a name="[15cd3e0]"></a>util_strtol</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_strtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[15cd398]"></a>util_check_state_change</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, utility.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = util_check_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[230a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state_change
</UL>

<P><STRONG><a name="[15ce478]"></a>led_create</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = led_create
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[15cce20]"></a>led_destroy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, led.o(.text), UNUSED)

<P><STRONG><a name="[15ce430]"></a>led_timer_proc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = led_timer_proc &rArr; gps_led_proc &rArr; hard_ware_set_gps_led &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cce68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_led_proc
<LI><a href="#[15cceb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_led_proc
<LI><a href="#[15ccef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_led_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc
</UL>

<P><STRONG><a name="[15ccdd8]"></a>led_set_gps_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state_change
</UL>

<P><STRONG><a name="[15ccd90]"></a>led_set_gsm_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[15ccd48]"></a>led_set_wifi_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init_cb
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on
<LI><a href="#[2303e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_off
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[15ce3a0]"></a>system_state_create</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = system_state_create &rArr; read_state_from_file &rArr; init_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file
<LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[15cc9d0]"></a>system_state_destroy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc988]"></a>system_state_reset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = system_state_reset &rArr; init_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[15ce358]"></a>system_state_timer_proc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kal_timer_1s_proc
</UL>

<P><STRONG><a name="[15cc940]"></a>system_state_get_status_bits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc8f8]"></a>system_state_get_start_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc8b0]"></a>system_state_get_boot_reason</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_get_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
</UL>

<P><STRONG><a name="[15cc868]"></a>system_state_set_boot_reason</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = system_state_set_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
</UL>

<P><STRONG><a name="[15cc820]"></a>system_state_get_work_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230c208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fake_cell_alarm_timer_proc
</UL>

<P><STRONG><a name="[15cc7d8]"></a>system_state_set_work_state</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc790]"></a>system_state_set_vehicle_state</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[15cc748]"></a>system_state_get_vehicle_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc700]"></a>system_state_is_boot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc6b8]"></a>system_state_has_reported_gps_since_boot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cc670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_gps_since_boot
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15cc670]"></a>system_state_set_has_reported_gps_since_boot</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_has_reported_gps_since_boot &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_has_reported_gps_since_boot
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15cc628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15cc628]"></a>system_state_set_boot</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_gps_since_boot
</UL>

<P><STRONG><a name="[15cc5e0]"></a>system_state_get_poweron_counts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc598]"></a>system_state_get_reboot_counts</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = system_state_get_reboot_counts
</UL>
<BR>[Calls]<UL><LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_reboot
</UL>

<P><STRONG><a name="[15cc550]"></a>system_state_get_has_reported_static_gps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_static_gps
</UL>

<P><STRONG><a name="[15cc508]"></a>system_state_set_has_reported_static_gps</STRONG> (Thumb, 458 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_has_reported_static_gps
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc4c0]"></a>system_state_get_reported_gps_since_modify_ip</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_reported_gps_since_modify_ip
</UL>

<P><STRONG><a name="[15cc478]"></a>system_state_set_reported_gps_since_modify_ip</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_reported_gps_since_modify_ip
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc430]"></a>system_state_get_has_started_charge</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_started_charge
</UL>

<P><STRONG><a name="[15cc3e8]"></a>system_state_set_has_started_charge</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_has_started_charge
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc3a0]"></a>system_state_get_acc_is_line_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_acc_is_line_mode
</UL>

<P><STRONG><a name="[15cc358]"></a>system_state_set_acc_is_line_mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_acc_is_line_mode
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc310]"></a>system_state_get_device_relay_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_device_relay_state
</UL>

<P><STRONG><a name="[15cc2c8]"></a>system_state_set_device_relay_state</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_device_relay_state
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc280]"></a>system_state_get_user_relay_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_user_relay_state
</UL>

<P><STRONG><a name="[15cc238]"></a>system_state_set_user_relay_state</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_user_relay_state
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc1f0]"></a>system_state_get_defence</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15cc118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_test_result
<LI><a href="#[15cc1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_defence
</UL>

<P><STRONG><a name="[15cc1a8]"></a>system_state_set_defence</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_defence
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc160]"></a>system_state_get_test_result</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[15cc118]"></a>system_state_set_test_result</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cc1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_defence
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[15cc0d0]"></a>system_state_is_cold_boot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_cold_boot
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[15cc088]"></a>system_state_set_cold_boot</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_cold_boot &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_is_cold_boot
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[15cc040]"></a>system_state_get_extern_battery_voltage_grade</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[2310978]"></a>system_state_set_extern_battery_voltage_grade</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[2310930]"></a>system_state_get_power_off_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23108e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_power_off_alarm
</UL>

<P><STRONG><a name="[23108e8]"></a>system_state_set_power_off_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_power_off_alarm
</UL>

<P><STRONG><a name="[23108a0]"></a>system_state_get_battery_low_voltage_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[2310858]"></a>system_state_get_shake_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_shake_alarm
</UL>

<P><STRONG><a name="[2310810]"></a>system_state_set_shake_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_shake_alarm
</UL>

<P><STRONG><a name="[23107c8]"></a>system_state_get_overspeed_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
<LI><a href="#[2310780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_overspeed_alarm
</UL>

<P><STRONG><a name="[2310780]"></a>system_state_set_overspeed_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[23107c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_overspeed_alarm
</UL>

<P><STRONG><a name="[2310738]"></a>system_state_get_fakecell_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23106f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_fakecell_alarm
</UL>

<P><STRONG><a name="[23106f0]"></a>system_state_set_fakecell_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_fakecell_alarm &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_fakecell_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[230c208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fake_cell_alarm_timer_proc
</UL>

<P><STRONG><a name="[23106a8]"></a>system_state_get_high_voltage_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_high_voltage_alarm
</UL>

<P><STRONG><a name="[2310660]"></a>system_state_set_high_voltage_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[23106a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_high_voltage_alarm
</UL>

<P><STRONG><a name="[2310618]"></a>system_state_get_collision_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23105d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_collision_alarm
</UL>

<P><STRONG><a name="[23105d0]"></a>system_state_set_collision_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_collision_alarm
</UL>

<P><STRONG><a name="[2310588]"></a>system_state_get_speed_up_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_speed_up_alarm
</UL>

<P><STRONG><a name="[2310540]"></a>system_state_set_speed_up_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_speed_up_alarm
</UL>

<P><STRONG><a name="[23104f8]"></a>system_state_get_speed_down_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23104b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_speed_down_alarm
</UL>

<P><STRONG><a name="[23104b0]"></a>system_state_set_speed_down_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[23104f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_speed_down_alarm
</UL>

<P><STRONG><a name="[2310468]"></a>system_state_get_turn_over_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_turn_over_alarm
</UL>

<P><STRONG><a name="[2310420]"></a>system_state_set_turn_over_alarm</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_turn_over_alarm
</UL>

<P><STRONG><a name="[23103d8]"></a>system_state_get_sharp_turn_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_sharp_turn_alarm
</UL>

<P><STRONG><a name="[2310390]"></a>system_state_set_sharp_turn_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[23103d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_sharp_turn_alarm
</UL>

<P><STRONG><a name="[2310348]"></a>system_state_get_remove_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_remove_alarm
</UL>

<P><STRONG><a name="[2310300]"></a>system_state_set_remove_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2310348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_remove_alarm
</UL>

<P><STRONG><a name="[23102b8]"></a>system_state_get_move_alarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2310270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_move_alarm
</UL>

<P><STRONG><a name="[2310270]"></a>system_state_set_move_alarm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[23102b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_move_alarm
</UL>

<P><STRONG><a name="[2310228]"></a>system_state_set_mileage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[23101e0]"></a>system_state_get_mileage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[2310198]"></a>system_state_set_bin_checksum</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_bin_checksum &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
</UL>

<P><STRONG><a name="[2310150]"></a>system_state_get_bin_checksum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2310108]"></a>system_state_set_gsensor_type</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, system_state.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[23100c0]"></a>system_state_get_gsensor_type</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[2310078]"></a>system_state_get_last_good_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[2310030]"></a>system_state_get_call_ok_count</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[230ffe8]"></a>system_state_get_statis_pointer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2301ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_rep_gps_data_success_cnt
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2308b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_get_location_counts
<LI><a href="#[2308bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_one_gps
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[230ffa0]"></a>system_state_set_static_info</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_static_info &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>
<BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[230ff58]"></a>system_state_set_ip_cache</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2308c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_restart
<LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket_get_host_by_name_callback
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[230ff10]"></a>system_state_get_ip_cache</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = system_state_get_ip_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[230fec8]"></a>system_state_set_expmu_comm_err_count</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart
</UL>

<P><STRONG><a name="[230fe80]"></a>system_state_set_expmu_smsp_comm_eatablish_long_time</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[230fe38]"></a>system_state_set_expmu_smsp_comm_cannot_establish</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
</UL>

<P><STRONG><a name="[230fdf0]"></a>system_state_set_rtc_time_not_match_count</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
</UL>

<P><STRONG><a name="[230fda8]"></a>system_state_get_expmu_comm_err_count</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[230fd60]"></a>system_state_get_expmu_smsp_comm_eatablish_long_time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_state.o(.text), UNUSED)

<P><STRONG><a name="[230fd18]"></a>system_state_get_expmu_smsp_comm_cannot_establish</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[230fcd0]"></a>system_state_get_rtc_time_not_match_count</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_state.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[230f970]"></a>json_create</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = json_create
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_double
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[230f928]"></a>json_destroy</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = json_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[230f8e0]"></a>json_add_int</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = json_add_int &rArr; add_item_to_object &rArr; json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_item_to_object
<LI><a href="#[236e8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[230f898]"></a>json_add_double</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = json_add_double &rArr; add_item_to_object &rArr; json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_item_to_object
</UL>
<BR>[Called By]<UL><LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
</UL>

<P><STRONG><a name="[230f850]"></a>json_add_string</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = json_add_string &rArr; add_item_to_object &rArr; json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_item_to_object
<LI><a href="#[230fa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_strdup
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[230f808]"></a>json_print_to_buffer</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = json_print_to_buffer &rArr; __1sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[2371a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[230f460]"></a>applied_math_get_sign</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236c7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[236c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round
</UL>

<P><STRONG><a name="[230f418]"></a>applied_math_round</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230f460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_sign
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236e7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d
</UL>

<P><STRONG><a name="[230f3d0]"></a>applied_math_get_magnitude_3d</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d
<LI><a href="#[230f340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_3d
</UL>

<P><STRONG><a name="[230f388]"></a>applied_math_get_magnitude_2d</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_2d
</UL>

<P><STRONG><a name="[230f340]"></a>applied_math_normalize_3d</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[236fd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
</UL>

<P><STRONG><a name="[230f2f8]"></a>applied_math_normalize_2d</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230f388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_2d
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[236fd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
</UL>

<P><STRONG><a name="[230f2b0]"></a>applied_math_inner_product_3d</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d
</UL>

<P><STRONG><a name="[230f268]"></a>applied_math_inner_product_2d</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>

<P><STRONG><a name="[230f220]"></a>applied_math_cross_product_3d</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub (via Veneer)
</UL>

<P><STRONG><a name="[230f1d8]"></a>applied_math_get_angle_3d</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_inner_product_3d
<LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d
<LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos (via Veneer)
<LI><a href="#[236c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via Veneer)
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236fd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
</UL>

<P><STRONG><a name="[230f190]"></a>applied_math_get_angle_diff</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>

<P><STRONG><a name="[230f148]"></a>applied_math_get_distance</STRONG> (Thumb, 342 bytes, Stack size 80 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin (via Veneer)
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos (via Veneer)
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin (via Veneer)
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
</UL>

<P><STRONG><a name="[230fc40]"></a>applied_math_calc_common_crc16</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, applied_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = applied_math_calc_common_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file
<LI><a href="#[23078d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_read_back_free_mem
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file
</UL>

<P><STRONG><a name="[230f100]"></a>applied_math_calc_epo_crc16</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)

<P><STRONG><a name="[230f0b8]"></a>applied_math_lowpass_filter</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, applied_math.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>

<P><STRONG><a name="[230f070]"></a>applied_math_avage</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, applied_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = applied_math_avage &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
</UL>

<P><STRONG><a name="[230ead0]"></a>fifo_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = fifo_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_create
<LI><a href="#[15ce3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_create
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
</UL>

<P><STRONG><a name="[230ea88]"></a>fifo_reset</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[230ea40]"></a>fifo_delete</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = fifo_delete
</UL>
<BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_destroy
<LI><a href="#[230bab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_destroy
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
</UL>

<P><STRONG><a name="[230e9f8]"></a>fifo_get_msg_length</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fifo.o(.text), UNUSED)

<P><STRONG><a name="[230e9b0]"></a>fifo_insert</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = fifo_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[230e968]"></a>fifo_peek</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = fifo_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230bb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_real
</UL>

<P><STRONG><a name="[230e920]"></a>fifo_peek_and_get_len</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[230e8d8]"></a>fifo_pop_len</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fifo_pop_len
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230bbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_callback
</UL>

<P><STRONG><a name="[230e890]"></a>fifo_peek_until</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = fifo_peek_until
</UL>
<BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
</UL>

<P><STRONG><a name="[230e770]"></a>circular_queue_create</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = circular_queue_create
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_create
</UL>

<P><STRONG><a name="[230e728]"></a>circular_queue_destroy</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_destroy
</UL>

<P><STRONG><a name="[230e6e0]"></a>circular_queue_get_capacity</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, circular_queue.o(.text), UNUSED)

<P><STRONG><a name="[230e698]"></a>circular_queue_is_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, circular_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230e2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_i
<LI><a href="#[230e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_f
<LI><a href="#[230e380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_tail_i
<LI><a href="#[230e3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_tail_f
<LI><a href="#[230e410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_head_i
<LI><a href="#[230e458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_head_f
<LI><a href="#[230e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_de_queue_i
<LI><a href="#[230e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_de_queue_f
</UL>

<P><STRONG><a name="[230e650]"></a>circular_queue_empty</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circular_queue.o(.text), UNUSED)

<P><STRONG><a name="[230e608]"></a>circular_queue_is_full</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = circular_queue_is_full
</UL>
<BR>[Calls]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230e530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_i
<LI><a href="#[230e578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_f
</UL>

<P><STRONG><a name="[230e5c0]"></a>circular_queue_get_len</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = circular_queue_get_len &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230e2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_i
<LI><a href="#[230e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_f
</UL>

<P><STRONG><a name="[230e578]"></a>circular_queue_en_queue_f</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = circular_queue_en_queue_f &rArr; circular_queue_is_full
</UL>
<BR>[Calls]<UL><LI><a href="#[230e608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_full
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230e530]"></a>circular_queue_en_queue_i</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = circular_queue_en_queue_i &rArr; circular_queue_is_full
</UL>
<BR>[Calls]<UL><LI><a href="#[230e608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_full
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230e4e8]"></a>circular_queue_de_queue_f</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[230e4a0]"></a>circular_queue_de_queue_i</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>

<P><STRONG><a name="[230e458]"></a>circular_queue_get_head_f</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
</UL>

<P><STRONG><a name="[230e410]"></a>circular_queue_get_head_i</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
</UL>

<P><STRONG><a name="[230e3c8]"></a>circular_queue_get_tail_f</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = circular_queue_get_tail_f &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed
</UL>

<P><STRONG><a name="[230e380]"></a>circular_queue_get_tail_i</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, circular_queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>

<P><STRONG><a name="[230e338]"></a>circular_queue_get_by_index_f</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = circular_queue_get_by_index_f &rArr; circular_queue_get_len &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230e5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_len
<LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_n_senconds_data
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230e2f0]"></a>circular_queue_get_by_index_i</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, circular_queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = circular_queue_get_by_index_i &rArr; circular_queue_get_len &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230e5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_len
<LI><a href="#[230e698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_empty
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_n_senconds_data
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15ce4c0]"></a>hard_ware_create</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = hard_ware_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioInit (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[230e068]"></a>hard_ware_destroy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hard_ware.o(.text), UNUSED)

<P><STRONG><a name="[230e020]"></a>hard_ware_timer_proc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hard_ware.o(.text), UNUSED)

<P><STRONG><a name="[15ccd00]"></a>hard_ware_set_gps_led</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = hard_ware_set_gps_led &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d61a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_IsinkBacklightCtrl (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15cce68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_led_proc
</UL>

<P><STRONG><a name="[15cccb8]"></a>hard_ware_set_gsm_led</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = hard_ware_set_gsm_led &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_KpledLevelCtrl (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ccef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_led_proc
</UL>

<P><STRONG><a name="[15ce280]"></a>upload_boot_log</STRONG> (Thumb, 442 bytes, Stack size 208 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6312 + Unknown Stack Size
<LI>Call Chain = upload_boot_log &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot_reason
<LI><a href="#[15cc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_boot_reason
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_BuildDateTime (via Veneer)
<LI><a href="#[15d7550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReleaseVerno (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
<LI><a href="#[230e0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_boot_reason_str
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
<LI><a href="#[2310198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_bin_checksum
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[230dfd8]"></a>hard_ware_reboot</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = hard_ware_reboot &rArr; system_state_set_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot_reason
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230e0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot_atonce
</UL>
<BR>[Called By]<UL><LI><a href="#[2304848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_reboot
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_check_need_reboot
</UL>

<P><STRONG><a name="[230df90]"></a>hard_ware_sleep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = hard_ware_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SleepEnable (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2301cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_close
</UL>

<P><STRONG><a name="[230df48]"></a>hard_ware_close_gps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = hard_ware_close_gps
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioSetLevel (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
</UL>

<P><STRONG><a name="[230df00]"></a>hard_ware_awake</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = hard_ware_awake
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SleepDisable (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
</UL>

<P><STRONG><a name="[230deb8]"></a>hard_ware_open_gps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = hard_ware_open_gps
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioSetLevel (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
</UL>

<P><STRONG><a name="[230da38]"></a>gprs_status_string</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[230d9f0]"></a>gprs_socket_notify</STRONG> (Thumb, 314 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6304 + Unknown Stack Size
<LI>Call Chain = gprs_socket_notify &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
<LI><a href="#[15d6b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_CheckSimValid (via Veneer)
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
<LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
<LI><a href="#[230d768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket_by_id
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.text)
</UL>
<P><STRONG><a name="[15ce5e0]"></a>gprs_create</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = gprs_create &rArr; update_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_DnsParserCallback (via Veneer)
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_global_init
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[230d9a8]"></a>gprs_destroy</STRONG> (Thumb, 908 bytes, Stack size 72 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5352 + Unknown Stack Size
<LI>Call Chain = gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gsm_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_AccountIdClose (via Veneer)
<LI><a href="#[15d5ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketRegisterCallBack (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230d498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_get_current_ip
<LI><a href="#[230d648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_global_destroy
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_gprs_destory
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[230d960]"></a>gprs_check_need_reboot</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = gprs_check_need_reboot &rArr; hard_ware_reboot &rArr; system_state_set_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[15ce598]"></a>gprs_timer_proc</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7760 + Unknown Stack Size
<LI>Call Chain = gprs_timer_proc &rArr; gps_service_timer_proc &rArr; gps_service_work_proc &rArr; protocol_msg_receive &rArr; protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
<LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
<LI><a href="#[230d960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_check_need_reboot
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc
</UL>

<P><STRONG><a name="[230d918]"></a>gprs_is_ok</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gprs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish_proc
<LI><a href="#[23093e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_data_finish_proc
</UL>

<P><STRONG><a name="[230fb68]"></a>gprs_get_last_good_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gprs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
</UL>

<P><STRONG><a name="[230fbb0]"></a>gprs_get_call_ok_count</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gprs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network
</UL>

<P><STRONG><a name="[230d768]"></a>get_socket_by_id</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
</UL>

<P><STRONG><a name="[230ce20]"></a>get_socket_by_accessid</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
</UL>

<P><STRONG><a name="[230cdd8]"></a>current_get_host_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230d600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_global_init
<LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
</UL>

<P><STRONG><a name="[230d600]"></a>gm_socket_global_init</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gm_socket_global_init
</UL>
<BR>[Calls]<UL><LI><a href="#[230cdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_get_host_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
</UL>

<P><STRONG><a name="[230cd90]"></a>gm_socket_init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = gm_socket_init &rArr; fifo_init
</UL>
<BR>[Calls]<UL><LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[230cd48]"></a>gm_socket_set_addr</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = gm_socket_set_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[230d570]"></a>gm_socket_set_account_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
</UL>

<P><STRONG><a name="[230cd00]"></a>gm_socket_set_ip_port</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gm_socket_set_ip_port
</UL>
<BR>[Called By]<UL><LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[230d6d8]"></a>gm_socket_destroy</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5264 + Unknown Stack Size
<LI>Call Chain = gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230c400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_destroy
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230c640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_destroy
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_destroy
<LI><a href="#[230c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_destroy
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230d648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_global_destroy
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
</UL>

<P><STRONG><a name="[230d648]"></a>gm_socket_global_destroy</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5280 + Unknown Stack Size
<LI>Call Chain = gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
</UL>

<P><STRONG><a name="[230ccb8]"></a>gm_is_valid_ip</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket_get_host_by_name_callback
</UL>

<P><STRONG><a name="[230d258]"></a>socket_get_host_by_name_callback</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = socket_get_host_by_name_callback &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.text)
</UL>
<P><STRONG><a name="[230d720]"></a>gm_socket_connect_ok</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6256 + Unknown Stack Size
<LI>Call Chain = gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230c448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_ok
<LI><a href="#[230c520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_ok
<LI><a href="#[230c688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_ok
<LI><a href="#[230c7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_ok
<LI><a href="#[230c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_ok
<LI><a href="#[230ca30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_ok
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
</UL>

<P><STRONG><a name="[230cc70]"></a>gm_socket_close_for_reconnect</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5272 + Unknown Stack Size
<LI>Call Chain = gm_socket_close_for_reconnect &rArr; update_filemod_close_for_reconnect &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230c5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_close_for_reconnect
<LI><a href="#[230c718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close_for_reconnect
<LI><a href="#[230c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close_for_reconnect
<LI><a href="#[230c9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close_for_reconnect
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[230cc28]"></a>gm_socket_connect</STRONG> (Thumb, 638 bytes, Stack size 64 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6320 + Unknown Stack Size
<LI>Call Chain = gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketConnect (via Veneer)
<LI><a href="#[15d6158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketCreate (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[230c490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_failed
<LI><a href="#[230c568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_failed
<LI><a href="#[230c6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_failed
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_failed
<LI><a href="#[230ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_failed
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
</UL>

<P><STRONG><a name="[230cbe0]"></a>gm_socket_get_ackseq</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = gm_socket_get_ackseq
</UL>
<BR>[Calls]<UL><LI><a href="#[15d56f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetTcpStatus (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
</UL>

<P><STRONG><a name="[230cb98]"></a>gm_socket_send</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketSend (via Veneer)
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230cbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_ackseq
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
</UL>

<P><STRONG><a name="[230d5b8]"></a>gm_socket_recv</STRONG> (Thumb, 634 bytes, Stack size 56 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5328 + Unknown Stack Size
<LI>Call Chain = gm_socket_recv &rArr; gm_socket_close_for_reconnect &rArr; update_filemod_close_for_reconnect &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d60c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketRecv (via Veneer)
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230c838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_confirm_gps_cache
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
</UL>

<P><STRONG><a name="[230cb50]"></a>gm_socket_status_string</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
</UL>

<P><STRONG><a name="[230cb08]"></a>gm_socket_get_host_by_name_trigger</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, socket.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
</UL>

<P><STRONG><a name="[230d690]"></a>gm_socket_get_host_timer_proc</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104 + Unknown Stack Size
<LI>Call Chain = gm_socket_get_host_timer_proc &rArr; gm_socket_get_host_by_name &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_get_host_init
<LI><a href="#[230ce20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket_by_accessid
<LI><a href="#[230cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[15ce508]"></a>gsm_create</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = gsm_create
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d6d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_RegisterCallBack (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[230bf80]"></a>gsm_destroy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gsm.o(.text), UNUSED)

<P><STRONG><a name="[230bf38]"></a>gsm_get_creg_state</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gsm_get_creg_state &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d55d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetCregStatus (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
</UL>

<P><STRONG><a name="[230d378]"></a>gsm_get_iccid</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gsm_get_iccid
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23038d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_sim
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[230d330]"></a>gsm_get_imsi</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gsm_get_imsi
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
</UL>

<P><STRONG><a name="[230bef0]"></a>gsm_get_model_imei</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gsm_get_model_imei
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[230bea8]"></a>gsm_get_imei</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = gsm_get_imei &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
</UL>

<P><STRONG><a name="[230be60]"></a>gsm_set_imei</STRONG> (Thumb, 486 bytes, Stack size 56 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104 + Unknown Stack Size
<LI>Call Chain = gsm_set_imei &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d4d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadNvramLid (via Veneer)
<LI><a href="#[15d5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadWriteNvram (via Veneer)
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230c1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imei_is_valid
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[230d3c0]"></a>gsm_get_csq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = gsm_get_csq
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetSignalValue (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[230d408]"></a>gsm_get_cell_info</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gsm_get_cell_info &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
<LI><a href="#[2305460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_additional_lbs
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
</UL>

<P><STRONG><a name="[230be18]"></a>get_sim_card_sate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gsm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
</UL>

<P><STRONG><a name="[230bb00]"></a>sms_send</STRONG> (Thumb, 112 bytes, Stack size 1072 bytes, sms.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7184 + Unknown Stack Size
<LI>Call Chain = sms_send &rArr; send_sms_real &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230bb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_real
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230bb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recv_sms
</UL>

<P><STRONG><a name="[15ce3e8]"></a>sms_create</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sms.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = sms_create &rArr; fifo_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_RegisterCallBack (via Veneer)
<LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[230bab8]"></a>sms_destroy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sms.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_delete
</UL>

<P><STRONG><a name="[230b7e8]"></a>uart_open_port</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = uart_open_port
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartOpen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timer_proc
<LI><a href="#[15ce310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_create
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
</UL>

<P><STRONG><a name="[230b7a0]"></a>uart_close_port</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartClrTxBuffer (via Veneer)
<LI><a href="#[15d6c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartClrRxBuffer (via Veneer)
<LI><a href="#[15d6ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartClose (via Veneer)
<LI><a href="#[15d6f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioInit (via Veneer)
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timer_proc
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
<LI><a href="#[230b710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_destroy
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
</UL>

<P><STRONG><a name="[230b758]"></a>uart_write</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartWrite (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
</UL>
<BR>[Called By]<UL><LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
<LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd
<LI><a href="#[2309dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_data
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_epo_pos
<LI><a href="#[2309fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_full_cold_start
<LI><a href="#[230a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_high_accuracy
<LI><a href="#[230a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_set_min_snr
<LI><a href="#[230a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_pos
<LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time
<LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg
<LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version
<LI><a href="#[230a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_version
<LI><a href="#[230a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_at_version
<LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[15ce310]"></a>uart_create</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = uart_create &rArr; uart_open_port
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_RegisterCallBack (via Veneer)
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
<LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[230b710]"></a>uart_destroy</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_delete
</UL>

<P><STRONG><a name="[15ce2c8]"></a>uart_timer_proc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = uart_timer_proc &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc
</UL>

<P><STRONG><a name="[230b3b0]"></a>nmea_sentence_id</STRONG> (Thumb, 398 bytes, Stack size 56 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128 + Unknown Stack Size
<LI>Call Chain = nmea_sentence_id &rArr; nmea_check &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
<LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b368]"></a>nmea_parse_txt</STRONG> (Thumb, 258 bytes, Stack size 184 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232 + Unknown Stack Size
<LI>Call Chain = nmea_parse_txt &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d70d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strstr (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b320]"></a>nmea_parse_inf</STRONG> (Thumb, 292 bytes, Stack size 168 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = nmea_parse_inf &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b2d8]"></a>nmea_parse_rmc</STRONG> (Thumb, 380 bytes, Stack size 88 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = nmea_parse_rmc &rArr; nmea_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b290]"></a>nmea_parse_gga</STRONG> (Thumb, 124 bytes, Stack size 88 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = nmea_parse_gga &rArr; nmea_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b248]"></a>nmea_parse_gsa</STRONG> (Thumb, 134 bytes, Stack size 96 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = nmea_parse_gsa &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b200]"></a>nmea_parse_gll</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[230b1b8]"></a>nmea_parse_gst</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[230b170]"></a>nmea_parse_gsv</STRONG> (Thumb, 120 bytes, Stack size 104 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = nmea_parse_gsv &rArr; nmea_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b128]"></a>nmea_parse_vtg</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[230b0e0]"></a>nmea_parse_zda</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[230b098]"></a>nmea_parse_mtk_ack</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = nmea_parse_mtk_ack &rArr; nmea_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230b050]"></a>nmea_parse_mtk_ver</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, nmea_protocol.o(.text), UNUSED)

<P><STRONG><a name="[230b008]"></a>nmea_parse_td_ack</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = nmea_parse_td_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230afc0]"></a>nmea_parse_td_ver</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = nmea_parse_td_ver
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230af78]"></a>nmea_parse_at_ack</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = nmea_parse_at_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230af30]"></a>nmea_parse_at_ver</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = nmea_parse_at_ver
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230aee8]"></a>nmea_create_common_mtk_sentence</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[230b3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd
<LI><a href="#[230aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_epo_sentence
<LI><a href="#[230acf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_set_min_snr_sentence
<LI><a href="#[230ad38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_active_interference_cancellation
<LI><a href="#[230ad80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_high_accuracy_sentence
<LI><a href="#[230adc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_full_cold_start_sentence
<LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence
<LI><a href="#[230ae58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_time_sentence
<LI><a href="#[230aea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_qeury_version_sentence
</UL>

<P><STRONG><a name="[230aea0]"></a>nmea_creat_mtk_qeury_version_sentence</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = nmea_creat_mtk_qeury_version_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
</UL>
<BR>[Called By]<UL><LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version
</UL>

<P><STRONG><a name="[230ae58]"></a>nmea_creat_mtk_aid_time_sentence</STRONG> (Thumb, 102 bytes, Stack size 128 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = nmea_creat_mtk_aid_time_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
</UL>

<P><STRONG><a name="[230ae10]"></a>nmea_creat_mtk_aid_pos_sentence</STRONG> (Thumb, 98 bytes, Stack size 120 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = nmea_creat_mtk_aid_pos_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_epo_pos
</UL>

<P><STRONG><a name="[230adc8]"></a>nmea_creat_mtk_full_cold_start_sentence</STRONG> (Thumb, 68 bytes, Stack size 80 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = nmea_creat_mtk_full_cold_start_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_full_cold_start
</UL>

<P><STRONG><a name="[230ad80]"></a>nmea_creat_high_accuracy_sentence</STRONG> (Thumb, 74 bytes, Stack size 88 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = nmea_creat_high_accuracy_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_high_accuracy
</UL>

<P><STRONG><a name="[230ad38]"></a>nmea_creat_active_interference_cancellation</STRONG> (Thumb, 72 bytes, Stack size 88 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>

<P><STRONG><a name="[230acf0]"></a>nmea_creat_set_min_snr_sentence</STRONG> (Thumb, 72 bytes, Stack size 88 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = nmea_creat_set_min_snr_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_set_min_snr
</UL>

<P><STRONG><a name="[230aca8]"></a>nmea_creat_mtk_epo_sentence</STRONG> (Thumb, 106 bytes, Stack size 336 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = nmea_creat_mtk_epo_sentence &rArr; nmea_create_common_mtk_sentence
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_data
</UL>

<P><STRONG><a name="[230ac60]"></a>flet_cher_16</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flet_cher_16
</UL>
<BR>[Called By]<UL><LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence
</UL>

<P><STRONG><a name="[230ac18]"></a>nmea_creat_td_qeury_version_sentence</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = nmea_creat_td_qeury_version_sentence &rArr; nmea_create_td_sentence &rArr; flet_cher_16
</UL>
<BR>[Calls]<UL><LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence
</UL>
<BR>[Called By]<UL><LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version
<LI><a href="#[230a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_version
</UL>

<P><STRONG><a name="[230abd0]"></a>nmea_creat_td_aid_time_sentence</STRONG> (Thumb, 302 bytes, Stack size 136 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = nmea_creat_td_aid_time_sentence &rArr; nmea_create_td_sentence &rArr; flet_cher_16
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[236ec58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time
</UL>

<P><STRONG><a name="[230ab88]"></a>nmea_creat_td_aid_pos_sentence</STRONG> (Thumb, 132 bytes, Stack size 136 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = nmea_creat_td_aid_pos_sentence &rArr; nmea_create_td_sentence &rArr; flet_cher_16
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236d730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_pos
</UL>

<P><STRONG><a name="[230ab40]"></a>nmea_creat_td_open_vtg_sentence</STRONG> (Thumb, 66 bytes, Stack size 96 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = nmea_creat_td_open_vtg_sentence &rArr; nmea_create_td_sentence &rArr; flet_cher_16
</UL>
<BR>[Calls]<UL><LI><a href="#[230b4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_td_sentence
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg
</UL>

<P><STRONG><a name="[230aaf8]"></a>nmea_creat_at_qeury_version_sentence</STRONG> (Thumb, 242 bytes, Stack size 184 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = nmea_creat_at_qeury_version_sentence &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230b3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_checksum
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version
<LI><a href="#[230a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_at_version
</UL>

<P><STRONG><a name="[230aab0]"></a>nmea_creat_at_aid_info_sentence</STRONG> (Thumb, 226 bytes, Stack size 144 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5192 + Unknown Stack Size
<LI>Call Chain = nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
</UL>

<P><STRONG><a name="[230aa68]"></a>nmea_get_utc_time</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = nmea_get_utc_time &rArr; util_mktime &rArr; util_items_mktime &rArr; util_get_day &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230aa20]"></a>nmea_rescale</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, nmea_protocol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>

<P><STRONG><a name="[230a9d8]"></a>nmea_tofloat</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nmea_tofloat &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[236cf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
<LI><a href="#[230a240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsa
<LI><a href="#[230a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gga
</UL>

<P><STRONG><a name="[230a990]"></a>nmea_tocoord</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nmea_tocoord &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[236cf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[15ce550]"></a>gps_create</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = gps_create &rArr; clear_data
</UL>
<BR>[Calls]<UL><LI><a href="#[230a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
<LI><a href="#[230e770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_create
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[2309f28]"></a>gps_destroy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230e728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_destroy
</UL>

<P><STRONG><a name="[2309ee0]"></a>gps_timer_proc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309e98]"></a>gps_power_off</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gps_power_off &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gps_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230df48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_close_gps
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2301cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_close
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
</UL>

<P><STRONG><a name="[2309e50]"></a>gps_power_on</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5416 + Unknown Stack Size
<LI>Call Chain = gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gps_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SysMsdelay (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs
<LI><a href="#[2309988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_gps_type
<LI><a href="#[230a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
<LI><a href="#[230deb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_open_gps
<LI><a href="#[230df00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_awake
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
</UL>

<P><STRONG><a name="[2309e08]"></a>gps_write_agps_info</STRONG> (Thumb, 872 bytes, Stack size 224 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5416 + Unknown Stack Size
<LI>Call Chain = gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SysMsdelay (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d6a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetLocalTime (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time
<LI><a href="#[230a558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
<LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence
<LI><a href="#[230ae58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_time_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230deb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_open_gps
<LI><a href="#[230df48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_close_gps
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
</UL>

<P><STRONG><a name="[2309dc0]"></a>gps_write_agps_data</STRONG> (Thumb, 164 bytes, Stack size 328 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5376 + Unknown Stack Size
<LI>Call Chain = gps_write_agps_data &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_epo_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
</UL>

<P><STRONG><a name="[2309d78]"></a>gps_get_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
</UL>

<P><STRONG><a name="[230bd88]"></a>gps_is_fixed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[230c208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fake_cell_alarm_timer_proc
</UL>

<P><STRONG><a name="[2309d30]"></a>gps_get_fix_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
</UL>

<P><STRONG><a name="[2309ce8]"></a>get_last_fixed_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
</UL>

<P><STRONG><a name="[2309ca0]"></a>gps_get_max_snr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309c58]"></a>gps_get_satellites_tracked</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309c10]"></a>gps_get_satellites_inview</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309bc8]"></a>gps_get_satellites_good</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_next_time_and_environment
</UL>

<P><STRONG><a name="[2309b80]"></a>gps_get_snr_array</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
</UL>

<P><STRONG><a name="[2309b38]"></a>gps_get_last_n_senconds_data</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gps_get_last_n_senconds_data &rArr; circular_queue_get_by_index_i &rArr; circular_queue_get_len &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230e2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_i
<LI><a href="#[230e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_f
</UL>
<BR>[Called By]<UL><LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
</UL>

<P><STRONG><a name="[2309af0]"></a>gps_get_last_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gps_get_last_data &rArr; gps_get_last_n_senconds_data &rArr; circular_queue_get_by_index_i &rArr; circular_queue_get_len &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2309b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_n_senconds_data
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230b6c8]"></a>gps_on_rcv_uart_data</STRONG> (Thumb, 1248 bytes, Stack size 96 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5656 + Unknown Stack Size
<LI>Call Chain = gps_on_rcv_uart_data &rArr; on_received_rmc &rArr; upload_gps_data &rArr; gps_service_push_one_gps &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_cold_boot
<LI><a href="#[15cc0d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_is_cold_boot
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[2309f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_epo_pos
<LI><a href="#[2309fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_full_cold_start
<LI><a href="#[230a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_high_accuracy
<LI><a href="#[230a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_set_min_snr
<LI><a href="#[230a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_pos
<LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
<LI><a href="#[230a240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsa
<LI><a href="#[230a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gga
<LI><a href="#[230a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsv
<LI><a href="#[230a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_type
<LI><a href="#[230af30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_at_ver
<LI><a href="#[230af78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_at_ack
<LI><a href="#[230afc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_td_ver
<LI><a href="#[230b008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_td_ack
<LI><a href="#[230b098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_mtk_ack
<LI><a href="#[230b170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsv
<LI><a href="#[230b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsa
<LI><a href="#[230b290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gga
<LI><a href="#[230b2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_rmc
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt
<LI><a href="#[230b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_sentence_id
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
</UL>

<P><STRONG><a name="[2309aa8]"></a>gps_get_constant_speed_time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309a60]"></a>gps_get_aclr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[2309a18]"></a>gps_write_mtk_cmd</STRONG> (Thumb, 1016 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = gps_write_mtk_cmd &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[230dde0]"></a>log_service_upload</STRONG> (Thumb, 176 bytes, Stack size 1664 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
<LI><a href="#[230f808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_print_to_buffer
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_destroy
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[230fb20]"></a>log_service_print</STRONG> (Thumb, 198 bytes, Stack size 3112 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5048 + Unknown Stack Size
<LI>Call Chain = log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_vsprintf (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_cold_boot
<LI><a href="#[15cc670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_gps_since_boot
<LI><a href="#[15cc790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_vehicle_state
<LI><a href="#[15cc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_boot_reason
<LI><a href="#[15cca18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_state_to_file
<LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file
<LI><a href="#[15cccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gsm_led
<LI><a href="#[15ccd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gps_led
<LI><a href="#[15ce2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_timer_proc
<LI><a href="#[15ce4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_create
<LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
<LI><a href="#[23015e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_period_scan_wifi
<LI><a href="#[2301630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init_cb
<LI><a href="#[2301678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan_cb
<LI><a href="#[23016c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_deinit_cb
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on
<LI><a href="#[2301d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gsm_error_code
<LI><a href="#[2301f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_into_lpm_proc
<LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
<LI><a href="#[2302098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_register_lbs_changed
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[23023f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_next_wakeup_time
<LI><a href="#[2302440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_clear_pmu_force_work
<LI><a href="#[2302488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_save_fram_command
<LI><a href="#[23024d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_force_work
<LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[2302710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_calibration_pmu_time
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string
<LI><a href="#[2302c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_smsp_query_packet
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2302e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_smsp_time
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file
<LI><a href="#[2303e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_time_zone
<LI><a href="#[2303eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_reset
<LI><a href="#[2303f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_fram_default_value
<LI><a href="#[2303f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_exit_triger_mode
<LI><a href="#[2303f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_workmode_set
<LI><a href="#[2303fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_into_sleep
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[2304650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_track_mode
<LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock
<LI><a href="#[2304e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_platform_mode
<LI><a href="#[2304f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_saved_protocol_data_gps_time
<LI><a href="#[2304fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_protocol_data_to_file
<LI><a href="#[2305028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_saved_protocol_data_from_file
<LI><a href="#[23050b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_saved_protocol_data_valid
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[23052b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_remaining_number
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data
<LI><a href="#[2305340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_next_time_and_environment
<LI><a href="#[2305388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_extended_alarm_status
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid
<LI><a href="#[2305418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_device_model
<LI><a href="#[2305460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_additional_lbs
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
<LI><a href="#[23054f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_get_state
<LI><a href="#[2305538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_send_packet
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
<LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_data_finish_proc
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_id_len
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2306270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_file_extend_same
<LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open
<LI><a href="#[2306348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_file_request
<LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
<LI><a href="#[23063d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_finish
<LI><a href="#[2306420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_result_report
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
<LI><a href="#[2306540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_retry_config
<LI><a href="#[2306c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_send_request_failed
<LI><a href="#[2306dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_pwd
<LI><a href="#[2306e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_zone
<LI><a href="#[2306e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_byte
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_short
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[2307498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_length
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault
<LI><a href="#[2307720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_para_ok
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok
<LI><a href="#[23077b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_para_to_cfg
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save
<LI><a href="#[23078d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_read_back_free_mem
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem
<LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[23082a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_id_len
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei
<LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_one_gps
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same
<LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
<LI><a href="#[2308e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_data_finish_proc
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
<LI><a href="#[23093e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_data_finish_proc
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
<LI><a href="#[2309478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_insert_one
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd
<LI><a href="#[2309dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_data
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[2309f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_epo_pos
<LI><a href="#[2309fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_full_cold_start
<LI><a href="#[230a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_high_accuracy
<LI><a href="#[230a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_set_min_snr
<LI><a href="#[230a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_pos
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data
<LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time
<LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
<LI><a href="#[230a240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsa
<LI><a href="#[230a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gga
<LI><a href="#[230a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_type
<LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version
<LI><a href="#[230a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_version
<LI><a href="#[230a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_at_version
<LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
<LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
<LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence
<LI><a href="#[230b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsa
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt
<LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send
<LI><a href="#[230bb90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_real
<LI><a href="#[230bbd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_callback
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei
<LI><a href="#[230bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_creg_state
<LI><a href="#[230bfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_fake_cell_callback
<LI><a href="#[230c010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_incomming_call
<LI><a href="#[230c058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_call_status_callback
<LI><a href="#[230c0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sim_card
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230cef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket_get_host_by_name_callback
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
<LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
<LI><a href="#[230e0b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot_atonce
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>

<P><STRONG><a name="[230d2e8]"></a>log_service_create</STRONG> (Thumb, 246 bytes, Stack size 128 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = log_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230ead0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
</UL>

<P><STRONG><a name="[230c640]"></a>log_service_destroy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = log_service_destroy &rArr; log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2309358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[2309280]"></a>log_service_send_msg</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5176 + Unknown Stack Size
<LI>Call Chain = log_service_send_msg &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[2309358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close
<LI><a href="#[23093a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_data_release
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
</UL>

<P><STRONG><a name="[230c6d0]"></a>log_service_connection_failed</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = log_service_connection_failed &rArr; log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2309358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
</UL>

<P><STRONG><a name="[230d2a0]"></a>log_service_timer_proc</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6344 + Unknown Stack Size
<LI>Call Chain = log_service_timer_proc &rArr; log_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
<LI><a href="#[2309310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_work_proc
<LI><a href="#[23093e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_data_finish_proc
<LI><a href="#[230c6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[2309238]"></a>log_service_set_level</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, log_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23091f0]"></a>log_service_get_level</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, log_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23091a8]"></a>log_service_enable_print</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, log_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_destroy
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
</UL>

<P><STRONG><a name="[230c688]"></a>log_service_connection_ok</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = log_service_connection_ok &rArr; log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[230c718]"></a>log_service_close_for_reconnect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = log_service_close_for_reconnect &rArr; log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2309358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[2309160]"></a>log_service_print_test</STRONG> (Thumb, 96 bytes, Stack size 3112 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3152 + Unknown Stack Size
<LI>Call Chain = log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_vsprintf (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23038d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_sim
<LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust
<LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network
<LI><a href="#[2303b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_reboot
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
<LI><a href="#[2304188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_destroy
</UL>

<P><STRONG><a name="[230c5f8]"></a>log_service_print_hex</STRONG> (Thumb, 122 bytes, Stack size 1568 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608 + Unknown Stack Size
<LI>Call Chain = log_service_print_hex &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
<LI><a href="#[230b878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_port_on_receive
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[2308d70]"></a>gps_service_socket_is_same</STRONG> (Thumb, 150 bytes, Stack size 120 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5192 + Unknown Stack Size
<LI>Call Chain = gps_service_socket_is_same &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
</UL>

<P><STRONG><a name="[230c7a8]"></a>gps_service_connection_ok</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = gps_service_connection_ok &rArr; gps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[230c760]"></a>gps_service_destroy</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = gps_service_destroy &rArr; gps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gsm_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[230ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2308c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_restart
<LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[230d4e0]"></a>gps_service_destroy_gprs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5360 + Unknown Stack Size
<LI>Call Chain = gps_service_destroy_gprs &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_get_status
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
<LI><a href="#[230d9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_socket_notify
</UL>

<P><STRONG><a name="[230c7f0]"></a>gps_service_connection_failed</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5368 + Unknown Stack Size
<LI>Call Chain = gps_service_connection_failed &rArr; gps_service_destroy_gprs &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
</UL>

<P><STRONG><a name="[2308d28]"></a>gps_service_send_one_locate</STRONG> (Thumb, 158 bytes, Stack size 520 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5880 + Unknown Stack Size
<LI>Call Chain = gps_service_send_one_locate &rArr; gps_service_destroy_gprs &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peek_one_location_protocol_data
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
</UL>

<P><STRONG><a name="[230d528]"></a>gps_service_create</STRONG> (Thumb, 800 bytes, Stack size 128 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = gps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2308aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_test_mode
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
<LI><a href="#[2306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish_proc
<LI><a href="#[2308c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_restart
<LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
</UL>

<P><STRONG><a name="[230d450]"></a>gps_service_timer_proc</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7744 + Unknown Stack Size
<LI>Call Chain = gps_service_timer_proc &rArr; gps_service_work_proc &rArr; protocol_msg_receive &rArr; protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
<LI><a href="#[2308e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_data_finish_proc
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230d498]"></a>gps_service_get_current_ip</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
</UL>

<P><STRONG><a name="[230c880]"></a>gps_service_close_for_reconnect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = gps_service_close_for_reconnect &rArr; gps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[230c838]"></a>gps_service_confirm_gps_cache</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gps_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230d5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_recv
</UL>

<P><STRONG><a name="[2308ce0]"></a>gps_service_change_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = gps_service_change_config &rArr; gps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[2304218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_gprs_change_dns
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
</UL>

<P><STRONG><a name="[2308c98]"></a>gps_service_restart</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = gps_service_restart &rArr; gps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
</UL>

<P><STRONG><a name="[2308c50]"></a>gps_service_position_send_ok</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gps_service.o(.text), UNUSED)

<P><STRONG><a name="[2309868]"></a>gps_service_push_one_gps</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5304 + Unknown Stack Size
<LI>Call Chain = gps_service_push_one_gps &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data
</UL>

<P><STRONG><a name="[23098b0]"></a>gps_service_push_lbs</STRONG> (Thumb, 58 bytes, Stack size 96 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5392 + Unknown Stack Size
<LI>Call Chain = gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
</UL>
<BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps_service.o(.text)
</UL>
<P><STRONG><a name="[2308c08]"></a>gps_service_clear_all_wait_gps</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gps_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
</UL>

<P><STRONG><a name="[2308bc0]"></a>gps_service_clear_one_gps</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gps_service_clear_one_gps &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_test_mode
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2308b78]"></a>gps_service_send_one_device_ack</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5376 + Unknown Stack Size
<LI>Call Chain = gps_service_send_one_device_ack &rArr; gps_service_destroy_gprs &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2308b30]"></a>gps_service_get_location_counts</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gps_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>

<P><STRONG><a name="[230d8d0]"></a>agps_service_create</STRONG> (Thumb, 308 bytes, Stack size 128 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = agps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2307d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_agps_socket_type
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
</UL>

<P><STRONG><a name="[230c9e8]"></a>agps_service_destroy</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = agps_service_destroy &rArr; agps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2307f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[230cac0]"></a>agps_service_close_for_reconnect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = agps_service_close_for_reconnect &rArr; agps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2307f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[2307e28]"></a>agps_service_delele_file</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = agps_service_delele_file &rArr; util_delete_file
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file
</UL>
<BR>[Called By]<UL><LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23099d0]"></a>agps_service_require_to_gps</STRONG> (Thumb, 866 bytes, Stack size 64 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5480 + Unknown Stack Size
<LI>Call Chain = agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2307e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_delele_file
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[2309dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_data
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230ca78]"></a>agps_service_connection_failed</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = agps_service_connection_failed &rArr; agps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2307f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
</UL>

<P><STRONG><a name="[230d888]"></a>agps_service_timer_proc</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6440 + Unknown Stack Size
<LI>Call Chain = agps_service_timer_proc &rArr; agps_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[230ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230ca30]"></a>agps_service_connection_ok</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5328 + Unknown Stack Size
<LI>Call Chain = agps_service_connection_ok &rArr; agps_msg_send_timing &rArr; agps_msg_pack_timing &rArr; gsm_get_cell_info &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[2307de0]"></a>agps_service_get_unfix_lng</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, agps_service.o(.text), UNUSED)

<P><STRONG><a name="[2307d98]"></a>agps_service_get_unfix_lat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, agps_service.o(.text), UNUSED)

<P><STRONG><a name="[2307648]"></a>goome_del_param_file</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, config_save.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file
</UL>

<P><STRONG><a name="[2307600]"></a>read_param_from_file</STRONG> (Thumb, 462 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5184 + Unknown Stack Size
<LI>Call Chain = read_param_from_file &rArr; goome_delete_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot_reason
<LI><a href="#[15cc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_boot_reason
<LI><a href="#[15d6398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_CheckFile (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23078d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_read_back_free_mem
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem
<LI><a href="#[2307960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_delete_file
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
</UL>

<P><STRONG><a name="[2309940]"></a>config_service_save_to_local</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232 + Unknown Stack Size
<LI>Call Chain = config_service_save_to_local &rArr; convert_cfg_to_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2304e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_platform_mode
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[2307570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_restore_factory_config
<LI><a href="#[230a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_type
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23075b8]"></a>config_service_set_test_mode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = config_service_set_test_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2304188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_destroy
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault
</UL>

<P><STRONG><a name="[15ce700]"></a>config_service_read_from_local</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5304 + Unknown Stack Size
<LI>Call Chain = config_service_read_from_local &rArr; check_para_ok &rArr; check_address_para_ok &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d57c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ImageDummyBase (via Veneer)
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[2307690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_deault
<LI><a href="#[2307720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_para_ok
<LI><a href="#[23077b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_para_to_cfg
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[2307570]"></a>config_service_restore_factory_config</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5240 + Unknown Stack Size
<LI>Call Chain = config_service_restore_factory_config &rArr; config_service_set_deault &rArr; config_service_set_factory_deault &rArr; config_service_set_test_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2307690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_deault
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2308aa0]"></a>config_service_is_test_mode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = config_service_is_test_mode &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2308bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_one_gps
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
</UL>

<P><STRONG><a name="[2308ae8]"></a>config_service_is_default_imei</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = config_service_is_default_imei &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
</UL>

<P><STRONG><a name="[2306b98]"></a>config_service_get_app_protocol</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, config_service.o(.text), UNUSED)

<P><STRONG><a name="[2309988]"></a>config_service_get_gps_type</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, config_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
</UL>

<P><STRONG><a name="[23098f8]"></a>config_service_set</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unified_set_poastion_source
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[2304608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_dev_apn
<LI><a href="#[2304728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set__udp_ip
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[2306b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_reming_gps_count
<LI><a href="#[2306dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_pwd
<LI><a href="#[2306e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_zone
<LI><a href="#[2306e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_byte
<LI><a href="#[2307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_short
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr
<LI><a href="#[23075b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_test_mode
<LI><a href="#[2307690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_deault
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault
<LI><a href="#[23077b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_para_to_cfg
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[230a360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_device_type
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[230c958]"></a>config_service_connection_failed</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = config_service_connection_failed &rArr; config_service_finish &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[2306d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[230c910]"></a>config_service_connection_ok</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232 + Unknown Stack Size
<LI>Call Chain = config_service_connection_ok &rArr; config_msg_request &rArr; config_msg_upload &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2306cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_request
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[230c8c8]"></a>config_service_destroy</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = config_service_destroy &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230c9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close_for_reconnect
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[230c9a0]"></a>config_service_close_for_reconnect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = config_service_close_for_reconnect &rArr; config_service_destroy &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[230fbf8]"></a>config_service_get_pointer</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para
<LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para
<LI><a href="#[2307840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_nvram_device_id
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save
<LI><a href="#[2308d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_socket_is_same
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
<LI><a href="#[230d2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_create
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_create
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
</UL>

<P><STRONG><a name="[230d840]"></a>config_service_create</STRONG> (Thumb, 266 bytes, Stack size 128 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = config_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
</UL>

<P><STRONG><a name="[230d7b0]"></a>config_service_timer_proc</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7632 + Unknown Stack Size
<LI>Call Chain = config_service_timer_proc &rArr; config_msg_receive &rArr; config_msg_content_parse &rArr; config_msg_param_set &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_expmu_power_on
<LI><a href="#[2306c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_send_request_failed
<LI><a href="#[2306cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_request
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[2306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish_proc
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[230c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230d7f8]"></a>config_service_get</STRONG> (Thumb, 582 bytes, Stack size 48 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_timer_proc
<LI><a href="#[2301a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCAL_TO_UTC_SEC
<LI><a href="#[2301ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTC_TO_LOCAL_SEC
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on
<LI><a href="#[2301ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recalc_next_wkp_time
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[2304f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_saved_protocol_data_gps_time
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[2305148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_remaining_number
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip
<LI><a href="#[2306b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_reming_gps_count
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para
<LI><a href="#[2308aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_test_mode
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
</UL>

<P><STRONG><a name="[2307498]"></a>config_service_get_length</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = config_service_get_length &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[2307888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_nvram_save
</UL>

<P><STRONG><a name="[230de28]"></a>config_service_get_zone</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = config_service_get_zone &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[2306b50]"></a>config_service_set_reming_gps_count</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = config_service_set_reming_gps_count &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2306b08]"></a>config_service_update_socket_type</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, config_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
</UL>

<P><STRONG><a name="[2307d50]"></a>config_service_agps_socket_type</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, config_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[230d8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_create
</UL>

<P><STRONG><a name="[23061e0]"></a>update_filemod_create</STRONG> (Thumb, 234 bytes, Stack size 128 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = update_filemod_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
</UL>

<P><STRONG><a name="[230c4d8]"></a>update_filemod_destroy</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5256 + Unknown Stack Size
<LI>Call Chain = update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
<LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[230ea40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_one_block
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
<LI><a href="#[230c568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_failed
<LI><a href="#[230c5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_close_for_reconnect
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[230dd98]"></a>update_filemod_get_checksum</STRONG> (Thumb, 174 bytes, Stack size 1056 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6104 + Unknown Stack Size
<LI>Call Chain = update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d64b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_GetFileSize (via Veneer)
<LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[23063d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_finish
</UL>

<P><STRONG><a name="[2306198]"></a>update_msg_receive</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = update_msg_receive &rArr; update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[2306540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
</UL>

<P><STRONG><a name="[2306150]"></a>update_msg_pack_id_len</STRONG> (Thumb, 810 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = update_msg_pack_id_len &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
</UL>

<P><STRONG><a name="[2306108]"></a>update_msg_pack_head</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = update_msg_pack_head &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
</UL>

<P><STRONG><a name="[23060c0]"></a>update_msg_send_data_block_request</STRONG> (Thumb, 236 bytes, Stack size 80 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5336 + Unknown Stack Size
<LI>Call Chain = update_msg_send_data_block_request &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_id_len
<LI><a href="#[2306348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_file_request
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_blocks_finish
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
</UL>

<P><STRONG><a name="[230c568]"></a>update_filemod_connection_failed</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5264 + Unknown Stack Size
<LI>Call Chain = update_filemod_connection_failed &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
</UL>

<P><STRONG><a name="[2306078]"></a>update_filemod_timer_proc</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6352 + Unknown Stack Size
<LI>Call Chain = update_filemod_timer_proc &rArr; update_filemod_work_proc &rArr; update_msg_receive &rArr; update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[23064f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_work_proc
<LI><a href="#[230c568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
</UL>

<P><STRONG><a name="[2306030]"></a>update_msg_start_data_block_request</STRONG> (Thumb, 386 bytes, Stack size 80 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6192 + Unknown Stack Size
<LI>Call Chain = update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_update_file_extend_same
<LI><a href="#[23062b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_open
<LI><a href="#[2306468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_load
<LI><a href="#[23064b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_create
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
<LI><a href="#[230c520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_ok
</UL>

<P><STRONG><a name="[230c520]"></a>update_filemod_connection_ok</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6200 + Unknown Stack Size
<LI>Call Chain = update_filemod_connection_ok &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[230c5b0]"></a>update_filemod_close_for_reconnect</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5264 + Unknown Stack Size
<LI>Call Chain = update_filemod_close_for_reconnect &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[2305fe8]"></a>update_msg_pack_request</STRONG> (Thumb, 782 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6128 + Unknown Stack Size
<LI>Call Chain = update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_long_to_asc
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2307498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_length
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
</UL>

<P><STRONG><a name="[2305fa0]"></a>update_msg_send_result_to_server</STRONG> (Thumb, 150 bytes, Stack size 128 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5240 + Unknown Stack Size
<LI>Call Chain = update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_id_len
<LI><a href="#[2306420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_result_report
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server
</UL>

<P><STRONG><a name="[2305f58]"></a>get_file_extend</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, update_file.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_is_waiting_reboot
<LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server
<LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
</UL>

<P><STRONG><a name="[2305f10]"></a>init_file_extend</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = init_file_extend
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_data_finish_proc
<LI><a href="#[230d210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_create
</UL>

<P><STRONG><a name="[230d210]"></a>update_service_create</STRONG> (Thumb, 270 bytes, Stack size 128 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = update_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2305f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_file_extend
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230cd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_ip_port
<LI><a href="#[230cd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_addr
<LI><a href="#[230cd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_init
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_create
</UL>

<P><STRONG><a name="[230c400]"></a>update_service_destroy</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = update_service_destroy &rArr; update_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2305a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_close
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy
</UL>

<P><STRONG><a name="[2308980]"></a>update_service_get_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, update_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2305998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_is_waiting_reboot
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
</UL>

<P><STRONG><a name="[2305998]"></a>update_service_is_waiting_reboot</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = update_service_is_waiting_reboot
</UL>
<BR>[Calls]<UL><LI><a href="#[2305f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_file_extend
<LI><a href="#[2308980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
</UL>

<P><STRONG><a name="[2305e38]"></a>update_service_result_to_server</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5248 + Unknown Stack Size
<LI>Call Chain = update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file
<LI><a href="#[15d6230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Rename (via Veneer)
<LI><a href="#[2305f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_file_extend
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
</UL>

<P><STRONG><a name="[230c3b8]"></a>update_service_finish</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = update_service_finish &rArr; update_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_close
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
<LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[230c490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_failed
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
</UL>

<P><STRONG><a name="[230c490]"></a>update_service_connection_failed</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = update_service_connection_failed &rArr; update_service_finish &rArr; update_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2305a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_close
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
</UL>

<P><STRONG><a name="[230d1c8]"></a>update_service_timer_proc</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6392 + Unknown Stack Size
<LI>Call Chain = update_service_timer_proc &rArr; update_service_work_proc &rArr; update_filemod_timer_proc &rArr; update_filemod_work_proc &rArr; update_msg_receive &rArr; update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[2305b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_data_finish_proc
<LI><a href="#[230c490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_failed
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230c448]"></a>update_service_connection_ok</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6248 + Unknown Stack Size
<LI>Call Chain = update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok
</UL>

<P><STRONG><a name="[2305e80]"></a>update_service_after_response</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6200 + Unknown Stack Size
<LI>Call Chain = update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_file_extend
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
</UL>

<P><STRONG><a name="[2305ec8]"></a>update_service_after_blocks_finish</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5344 + Unknown Stack Size
<LI>Call Chain = update_service_after_blocks_finish &rArr; update_msg_send_data_block_request &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
</UL>
<BR>[Called By]<UL><LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
</UL>

<P><STRONG><a name="[23089c8]"></a>protocol_msg_receive</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7712 + Unknown Stack Size
<LI>Call Chain = protocol_msg_receive &rArr; protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
</UL>

<P><STRONG><a name="[2305190]"></a>protocol_2929_install_vehicle_terminal_confirmation_packet</STRONG> (Thumb, 146 bytes, Stack size 64 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5200 + Unknown Stack Size
<LI>Call Chain = protocol_2929_install_vehicle_terminal_confirmation_packet &rArr; protocol_2929_send_packet &rArr; protocol_2929_get_num_to_pseudo_ip &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
<LI><a href="#[23054f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_get_state
<LI><a href="#[2305538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_send_packet
<LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2305788]"></a>protocol_2929_parse_msg</STRONG> (Thumb, 536 bytes, Stack size 528 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7680 + Unknown Stack Size
<LI>Call Chain = protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2304d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_work_mode_upload_data
<LI><a href="#[2304e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_platform_mode
<LI><a href="#[2304ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_set_gps_location_counts
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[2306b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_reming_gps_count
<LI><a href="#[2308b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_device_ack
<LI><a href="#[2308bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_one_gps
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_static_info
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
</UL>

<P><STRONG><a name="[2305148]"></a>protocol_2929_get_remaining_number</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = protocol_2929_get_remaining_number &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[23052b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_remaining_number
</UL>

<P><STRONG><a name="[2305100]"></a>protocol_2929_get_next_time_update</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5248 + Unknown Stack Size
<LI>Call Chain = protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
<LI><a href="#[2304e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_get_report_interval
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_next_time_and_environment
</UL>

<P><STRONG><a name="[23050b8]"></a>is_saved_protocol_data_valid</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, protocol_2929.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2305070]"></a>clear_saved_protocol_data</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, protocol_2929.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>

<P><STRONG><a name="[2305028]"></a>read_saved_protocol_data_from_file</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, protocol_2929.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2304fe0]"></a>save_protocol_data_to_file</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, protocol_2929.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2304f98]"></a>get_saved_protocol_data_gps_time</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, protocol_2929.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cd788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_bcd_to_sec
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2308a58]"></a>peek_one_location_protocol_data</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = peek_one_location_protocol_data
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
</UL>

<P><STRONG><a name="[2308a10]"></a>protocol_2929_install_one_location_packet</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5296 + Unknown Stack Size
<LI>Call Chain = protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[2305220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_work_mode_update
<LI><a href="#[2305268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_platfrom_mode_flg
<LI><a href="#[23052b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_remaining_number
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data
<LI><a href="#[2305340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_next_time_and_environment
<LI><a href="#[2305388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_extended_alarm_status
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid
<LI><a href="#[2305418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_device_model
<LI><a href="#[2305460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_additional_lbs
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data
<LI><a href="#[23054f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_get_state
<LI><a href="#[2305538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_send_packet
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2309868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_one_gps
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs
</UL>

<P><STRONG><a name="[2304530]"></a>check_same_number_in_string</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_same_number_in_string
</UL>
<BR>[Calls]<UL><LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
</UL>

<P><STRONG><a name="[23044e8]"></a>set_pmu_byte_turn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_pmu_byte_turn
</UL>
<BR>[Called By]<UL><LI><a href="#[23044a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gw_get_pmu_work_mode_data
</UL>

<P><STRONG><a name="[23044a0]"></a>gw_get_pmu_work_mode_data</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152 + Unknown Stack Size
<LI>Call Chain = gw_get_pmu_work_mode_data &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23044e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pmu_byte_turn
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
</UL>

<P><STRONG><a name="[2304458]"></a>install_one_upload_mod_data</STRONG> (Thumb, 462 bytes, Stack size 96 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = install_one_upload_mod_data &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
</UL>

<P><STRONG><a name="[2304410]"></a>save_gw_work_mode_to_file</STRONG> (Thumb, 190 bytes, Stack size 80 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5528 + Unknown Stack Size
<LI>Call Chain = save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2303f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_workmode_set
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data
<LI><a href="#[23044a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gw_get_pmu_work_mode_data
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_track_mode
<LI><a href="#[2304698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_timepoint_mode
<LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock
</UL>

<P><STRONG><a name="[23043c8]"></a>get_u16_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode
</UL>

<P><STRONG><a name="[2304380]"></a>get_u32_data</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_timepoint_mode
<LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode
</UL>

<P><STRONG><a name="[2304e78]"></a>deal_platform_mode</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5592 + Unknown Stack Size
<LI>Call Chain = deal_platform_mode &rArr; parse_platform_timepoint_mode &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2304698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_timepoint_mode
<LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2304d10]"></a>get_work_mode_upload_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_work_mode_update
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2304338]"></a>get_old_config_para_number</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock
</UL>

<P><STRONG><a name="[23042f0]"></a>find_special_char</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = find_special_char
</UL>
<BR>[Called By]<UL><LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock
</UL>

<P><STRONG><a name="[23042a8]"></a>get_workmode_string</STRONG> (Thumb, 760 bytes, Stack size 32 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5160 + Unknown Stack Size
<LI>Call Chain = get_workmode_string &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
</UL>

<P><STRONG><a name="[2304260]"></a>delay_gprs_destory</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5360 + Unknown Stack Size
<LI>Call Chain = delay_gprs_destory &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> command.o(.text)
</UL>
<P><STRONG><a name="[2304218]"></a>delay_gprs_change_dns</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = delay_gprs_change_dns &rArr; gps_service_change_config &rArr; gps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> command.o(.text)
</UL>
<P><STRONG><a name="[230ba70]"></a>command_on_receive_data</STRONG> (Thumb, 2082 bytes, Stack size 1080 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7152 + Unknown Stack Size
<LI>Call Chain = command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_reset
<LI><a href="#[15cdc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_string_number_counter
<LI><a href="#[15cdc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_string_upper
<LI><a href="#[15cdd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_remove_char
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d7310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcpy (via Veneer)
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[15d7508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_BuildDateTime (via Veneer)
<LI><a href="#[15d7550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReleaseVerno (via Veneer)
<LI><a href="#[2303eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_reset
<LI><a href="#[2303f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_fram_default_value
<LI><a href="#[2303fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_into_sleep
<LI><a href="#[2304020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_is_working
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[23040b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_version_string
<LI><a href="#[23040f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_reset
<LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result
<LI><a href="#[2304188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_destroy
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
<LI><a href="#[2304890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_scan
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[2304920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_response
<LI><a href="#[2307570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_restore_factory_config
<LI><a href="#[2307e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_delele_file
<LI><a href="#[23091f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_get_level
<LI><a href="#[2309238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_set_level
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd
<LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei
<LI><a href="#[230bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_model_imei
<LI><a href="#[230d330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imsi
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[2310150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_bin_checksum
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive
<LI><a href="#[230bb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recv_sms
</UL>

<P><STRONG><a name="[23041d0]"></a>auto_test_create</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5464 + Unknown Stack Size
<LI>Call Chain = auto_test_create &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReleaseVerno (via Veneer)
<LI><a href="#[23039a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_test_result
<LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[23075b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_test_mode
<LI><a href="#[2308ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_default_imei
<LI><a href="#[2308c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_restart
<LI><a href="#[23091a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_enable_print
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2304188]"></a>auto_test_destroy</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104 + Unknown Stack Size
<LI>Call Chain = auto_test_destroy &rArr; config_service_set_test_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23075b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_test_mode
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
<LI><a href="#[23091a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_enable_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23040f8]"></a>auto_test_reset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = auto_test_reset &rArr; init_test_result
</UL>
<BR>[Calls]<UL><LI><a href="#[15d63e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Delete (via Veneer)
<LI><a href="#[23039a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_test_result
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2304140]"></a>auto_test_get_result</STRONG> (Thumb, 86 bytes, Stack size 1000 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6072 + Unknown Stack Size
<LI>Call Chain = auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23039a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_test_result
<LI><a href="#[2303ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_result_from_file
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2303888]"></a>get_max_ap_rssi</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_max_ap_rssi
</UL>
<BR>[Calls]<UL><LI><a href="#[2304cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_get_wifi_scan_result
</UL>
<BR>[Called By]<UL><LI><a href="#[2303918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_wifi
</UL>

<P><STRONG><a name="[15ce748]"></a>auto_test_timer_proc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8152 + Unknown Stack Size
<LI>Call Chain = auto_test_timer_proc &rArr; auto_test_self_test &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23039a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_test_result
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_1s_proc
</UL>

<P><STRONG><a name="[2304f08]"></a>auto_test_is_working</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = auto_test_is_working &rArr; gsm_get_imei &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[2308aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_is_test_mode
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2303840]"></a>auto_test_acc_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, auto_test.o(.text), UNUSED)

<P><STRONG><a name="[23037f8]"></a>auto_test_acc_off</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, auto_test.o(.text), UNUSED)

<P><STRONG><a name="[2304ec0]"></a>auto_test_set_gps_location_counts</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, auto_test.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg
</UL>

<P><STRONG><a name="[2306ac0]"></a>auto_test_repair_ramp</STRONG> (Thumb, 474 bytes, Stack size 704 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5792 + Unknown Stack Size
<LI>Call Chain = auto_test_repair_ramp &rArr; hard_ware_reboot &rArr; system_state_set_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadNvramLid (via Veneer)
<LI><a href="#[15d5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadWriteNvram (via Veneer)
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_destroy
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
</UL>

<P><STRONG><a name="[2306a78]"></a>is_expmu_power_on</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2304da0]"></a>get_expmu_wkp_reason</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[2305388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_extended_alarm_status
</UL>

<P><STRONG><a name="[2302998]"></a>printf_hex_string</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23025a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_write_response_packet
<LI><a href="#[23025f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_read_packet
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart
</UL>

<P><STRONG><a name="[2302950]"></a>check_arry_data_xor</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = check_arry_data_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
<LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que
</UL>

<P><STRONG><a name="[2302908]"></a>get_expmu_next_wkp_time_register</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
</UL>

<P><STRONG><a name="[23028c0]"></a>does_expmu_in_sleeping</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_into_lpm_proc
</UL>

<P><STRONG><a name="[15ce6b8]"></a>expmu_create</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = expmu_create &rArr; expmu_transfer_status
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2302ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_entry
</UL>

<P><STRONG><a name="[2302878]"></a>expmu_clear_smap_stack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_enter_sleep
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
</UL>

<P><STRONG><a name="[2302830]"></a>expmu_enter_sleep</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = expmu_enter_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[2302878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_clear_smap_stack
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[23027e8]"></a>expmu_exit_sleep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
</UL>

<P><STRONG><a name="[23027a0]"></a>insert_smsp_stack_que</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2302950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_arry_data_xor
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register
<LI><a href="#[2303768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_period_read_expmu_reg
</UL>

<P><STRONG><a name="[2302758]"></a>write_expmu_reg</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = write_expmu_reg &rArr; insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que
<LI><a href="#[2302dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat_write_pmu_register_block
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23023f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_next_wakeup_time
<LI><a href="#[2302440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_clear_pmu_force_work
<LI><a href="#[2302488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_save_fram_command
<LI><a href="#[23024d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_force_work
<LI><a href="#[2302710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_calibration_pmu_time
<LI><a href="#[2303e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_time_zone
<LI><a href="#[2303eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_reset
<LI><a href="#[2303f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_fram_default_value
<LI><a href="#[2303f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_exit_triger_mode
<LI><a href="#[2303f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_workmode_set
<LI><a href="#[2303fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_into_sleep
</UL>

<P><STRONG><a name="[2302710]"></a>smsp_calibration_pmu_time</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = smsp_calibration_pmu_time &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
</UL>

<P><STRONG><a name="[23026c8]"></a>set_expmu_time_to_mpu</STRONG> (Thumb, 284 bytes, Stack size 112 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5160 + Unknown Stack Size
<LI>Call Chain = set_expmu_time_to_mpu &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_tm
<LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
<LI><a href="#[15cdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_localtime
<LI><a href="#[15cdae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_tm_to_mtktime
<LI><a href="#[15d6a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SetLocalTime (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
</UL>

<P><STRONG><a name="[23040b0]"></a>expmu_get_version_string</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = expmu_get_version_string
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2302680]"></a>get_bcd_time_string</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = get_bcd_time_string
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
</UL>

<P><STRONG><a name="[15ce628]"></a>expmu_timer_proc</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5584 + Unknown Stack Size
<LI>Call Chain = expmu_timer_proc &rArr; expmu_query_proc &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc
</UL>

<P><STRONG><a name="[2303768]"></a>auto_test_period_read_expmu_reg</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = auto_test_period_read_expmu_reg &rArr; insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que
<LI><a href="#[2302dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat_write_pmu_register_block
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[23037b0]"></a>auto_test_get_expmu_light_io_state</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[2303690]"></a>expmu_get_powr_on_cnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[2303600]"></a>expmu_get_rtc_wkp_cnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[2303720]"></a>expmu_get_exti1_wkp_cnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[23036d8]"></a>expmu_get_exti2_wkp_cnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[2302638]"></a>match_the_mpu_register_addr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, expmu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23025a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_write_response_packet
<LI><a href="#[23025f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_read_packet
</UL>

<P><STRONG><a name="[23025f0]"></a>prase_smsp_read_packet</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = prase_smsp_read_packet &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2302638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;match_the_mpu_register_addr
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string
</UL>
<BR>[Called By]<UL><LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
</UL>

<P><STRONG><a name="[23025a8]"></a>prase_smsp_write_response_packet</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = prase_smsp_write_response_packet &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2302638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;match_the_mpu_register_addr
<LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string
</UL>
<BR>[Called By]<UL><LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
</UL>

<P><STRONG><a name="[2302560]"></a>slave_mem_share_protocol_prase</STRONG> (Thumb, 378 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128 + Unknown Stack Size
<LI>Call Chain = slave_mem_share_protocol_prase &rArr; prase_smsp_write_response_packet &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23025a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_write_response_packet
<LI><a href="#[23025f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prase_smsp_read_packet
<LI><a href="#[2302950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_arry_data_xor
<LI><a href="#[2302c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_smsp_query_packet
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_expmu_dat_fun
</UL>

<P><STRONG><a name="[230b680]"></a>parse_expmu_dat_fun</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = parse_expmu_dat_fun &rArr; slave_mem_share_protocol_prase &rArr; prase_smsp_write_response_packet &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
</UL>
<BR>[Called By]<UL><LI><a href="#[230b8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_port_receive
</UL>

<P><STRONG><a name="[2302518]"></a>expmu_get_smsp_comm_err_count</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, expmu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>

<P><STRONG><a name="[23024d0]"></a>smsp_set_pmu_force_work</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = smsp_set_pmu_force_work &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
</UL>

<P><STRONG><a name="[2302488]"></a>smsp_set_save_fram_command</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, expmu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2303f48]"></a>smsp_set_exit_triger_mode</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = smsp_set_exit_triger_mode &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2303f00]"></a>smsp_set_fram_default_value</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = smsp_set_fram_default_value &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2302440]"></a>smsp_clear_pmu_force_work</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, expmu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[2303eb8]"></a>smsp_set_pmu_reset</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = smsp_set_pmu_reset &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2303e70]"></a>smsp_set_pmu_time_zone</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = smsp_set_pmu_time_zone &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[23023f8]"></a>smsp_set_next_wakeup_time</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = smsp_set_next_wakeup_time &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
</UL>

<P><STRONG><a name="[2303fd8]"></a>smsp_comm_pmu_into_sleep</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = smsp_comm_pmu_into_sleep &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2301f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_into_lpm_proc
<LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2303648]"></a>expmu_get_rtc_time_value</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = expmu_get_rtc_time_value
</UL>
<BR>[Calls]<UL><LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
</UL>

<P><STRONG><a name="[2303f90]"></a>smsp_comm_pmu_workmode_set</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = smsp_comm_pmu_workmode_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
</UL>

<P><STRONG><a name="[2304de8]"></a>get_cur_gw_work_mode</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128 + Unknown Stack Size
<LI>Call Chain = get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_time_point_mode_time_point
<LI><a href="#[23018b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_loop_mode_time_point
<LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time
<LI><a href="#[2301948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_track_mode_next_sleep_time
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point
<LI><a href="#[2301d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_the_device_need_into_lpm
<LI><a href="#[2301dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_unlimit_report_stop_time
<LI><a href="#[23042a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_workmode_string
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data
<LI><a href="#[23044a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gw_get_pmu_work_mode_data
<LI><a href="#[2305268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_platfrom_mode_flg
</UL>

<P><STRONG><a name="[2301e10]"></a>expmu_srv_trans_stage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, expmu_service.o(.text), UNUSED)

<P><STRONG><a name="[2301dc8]"></a>get_unlimit_report_stop_time</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, expmu_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>

<P><STRONG><a name="[2304e30]"></a>expmu_service_get_report_interval</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, expmu_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
</UL>

<P><STRONG><a name="[2301d80]"></a>does_the_device_need_into_lpm</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = does_the_device_need_into_lpm &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
</UL>

<P><STRONG><a name="[2301d38]"></a>get_gsm_error_code</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, expmu_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230be18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sim_card_sate
<LI><a href="#[230bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_creg_state
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230d918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_is_ok
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>

<P><STRONG><a name="[23023b0]"></a>expmu_service_creat</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5440 + Unknown Stack Size
<LI>Call Chain = expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2301c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_on
<LI><a href="#[2301d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_the_device_need_into_lpm
<LI><a href="#[23024d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_force_work
<LI><a href="#[2304da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_expmu_wkp_reason
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2306a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_expmu_power_on
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
</UL>

<P><STRONG><a name="[2301cf0]"></a>expmu_service_close</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = expmu_service_close &rArr; gps_power_off &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[15ce670]"></a>expmu_service_timer_proc</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5520 + Unknown Stack Size
<LI>Call Chain = expmu_service_timer_proc &rArr; expmu_srv_track_mode_report_proc &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2301cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_close
<LI><a href="#[2301d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_the_device_need_into_lpm
<LI><a href="#[2301ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_rep_gps_data_success_cnt
<LI><a href="#[2301f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_into_lpm_proc
<LI><a href="#[2301f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_next_wkp_time_set_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
<LI><a href="#[2302830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_enter_sleep
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
<LI><a href="#[2309d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_state
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230df90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_sleep
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_10ms_proc
</UL>

<P><STRONG><a name="[2304068]"></a>expmu_service_destory</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5448 + Unknown Stack Size
<LI>Call Chain = expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[2302878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_clear_smap_stack
<LI><a href="#[2308c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_clear_all_wait_gps
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2304020]"></a>expmu_service_is_working</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, expmu_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2301948]"></a>calc_track_mode_next_sleep_time</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = calc_track_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[2301900]"></a>calc_week_mode_next_sleep_time</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5176 + Unknown Stack Size
<LI>Call Chain = calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;week_day_to_utc_time
<LI><a href="#[2301ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTC_TO_LOCAL_SEC
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[23018b8]"></a>calc_plat_loop_mode_time_point</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = calc_plat_loop_mode_time_point &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unified_set_poastion_source
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[2301870]"></a>calc_plat_time_point_mode_time_point</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152 + Unknown Stack Size
<LI>Call Chain = calc_plat_time_point_mode_time_point &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unified_set_poastion_source
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[2301ca8]"></a>recalc_next_wkp_time</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = recalc_next_wkp_time &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
</UL>

<P><STRONG><a name="[2304d58]"></a>get_next_wake_up_time_point</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5192 + Unknown Stack Size
<LI>Call Chain = get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_time_point_mode_time_point
<LI><a href="#[23018b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_loop_mode_time_point
<LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time
<LI><a href="#[2301948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_track_mode_next_sleep_time
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
</UL>

<P><STRONG><a name="[23015e8]"></a>wifi_service_period_scan_wifi</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = wifi_service_period_scan_wifi &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_service.o(.text)
</UL>
<P><STRONG><a name="[2301c60]"></a>wifi_power_on</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = wifi_power_on &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_wifi_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d4a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init (via Veneer)
<LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
</UL>

<P><STRONG><a name="[2303e28]"></a>wifi_power_off</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = wifi_power_off
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_wifi_state
<LI><a href="#[15d4a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_deinit (via Veneer)
<LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[23015a0]"></a>wifi_service_creat</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wifi_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>

<P><STRONG><a name="[2301558]"></a>wifi_service_timer_proc</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wifi_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>

<P><STRONG><a name="[2304cc8]"></a>wifi_service_get_wifi_scan_result</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wifi_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2303888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_ap_rssi
<LI><a href="#[2303918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_wifi
<LI><a href="#[23052f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_wifi_data
</UL>

<P><STRONG><a name="[2301510]"></a>wifi_service_destory</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_service.o(.text), UNUSED)

<P><STRONG><a name="[2372318]"></a>__printf</STRONG> (Thumb, 748 bytes, Stack size 48 bytes, __printf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[2368cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
<LI><a href="#[2368d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r1
<LI><a href="#[2371d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[2371e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb (Weak Reference)
<LI><a href="#[2371ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[2371f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[2371f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct (Weak Reference)
<LI><a href="#[2371fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex (Weak Reference)
<LI><a href="#[2372000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (Weak Reference)
<LI><a href="#[2372048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (Weak Reference)
<LI><a href="#[2372090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
<LI><a href="#[23720d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (Weak Reference)
<LI><a href="#[2372120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[236a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[23722d0]"></a>_printf_return_value</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[2372288]"></a>_printf_percent</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[2372240]"></a>_printf_sizespec</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, __printf.o(.text), UNUSED)

<P><STRONG><a name="[2371d18]"></a>_printf_str</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, _printf_str.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r3
<LI><a href="#[2371c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[2371cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2371ab0]"></a>__0sprintf</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, __0sprintf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[236a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[2371a68]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, __0sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __1sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[230f808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_print_to_buffer
</UL>

<P><STRONG><a name="[2371860]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2301678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan_cb (via Veneer)
<LI><a href="#[2302098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_register_lbs_changed (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan (via Veneer)
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info (via Veneer)
</UL>

<P><STRONG><a name="[2371818]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[23717d0]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[2371620]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_gmtime (via Veneer)
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000 (via Veneer)
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time (via Veneer)
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu (via Veneer)
<LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[2371818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[23715d8]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2371590]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2371548]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2371360]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log (via Veneer)
<LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc (via Veneer)
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc (via Veneer)
<LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg (via Veneer)
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc (via Veneer)
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register (via Veneer)
<LI><a href="#[2303768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_period_read_expmu_reg (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location (via Veneer)
<LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid (via Veneer)
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file (via Veneer)
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data (via Veneer)
<LI><a href="#[2304608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_dev_apn (via Veneer)
<LI><a href="#[2304698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_timepoint_mode (via Veneer)
<LI><a href="#[23046e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_platform_cycle_mode (via Veneer)
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns (via Veneer)
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode (via Veneer)
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working (via Veneer)
<LI><a href="#[23053d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_iccid (via Veneer)
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip (via Veneer)
<LI><a href="#[2305788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_parse_msg (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set (via Veneer)
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault (via Veneer)
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc (via Veneer)
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test (via Veneer)
<LI><a href="#[2309a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_mtk_cmd (via Veneer)
<LI><a href="#[2309dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_data (via Veneer)
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info (via Veneer)
<LI><a href="#[2309f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_epo_pos (via Veneer)
<LI><a href="#[2309fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_full_cold_start (via Veneer)
<LI><a href="#[230a000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mtk_high_accuracy (via Veneer)
<LI><a href="#[230a048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_set_min_snr (via Veneer)
<LI><a href="#[230a090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_pos (via Veneer)
<LI><a href="#[230a120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_td_agps_time (via Veneer)
<LI><a href="#[230a168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_td_vtg (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_and_at_version (via Veneer)
<LI><a href="#[230a3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_td_version (via Veneer)
<LI><a href="#[230a438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_at_version (via Veneer)
<LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version (via Veneer)
<LI><a href="#[230a510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state (via Veneer)
<LI><a href="#[230aa68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_get_utc_time (via Veneer)
<LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence (via Veneer)
<LI><a href="#[230ab40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_open_vtg_sentence (via Veneer)
<LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence (via Veneer)
<LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence (via Veneer)
<LI><a href="#[230aca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_epo_sentence (via Veneer)
<LI><a href="#[230acf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_set_min_snr_sentence (via Veneer)
<LI><a href="#[230ad38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_active_interference_cancellation (via Veneer)
<LI><a href="#[230ad80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_high_accuracy_sentence (via Veneer)
<LI><a href="#[230adc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_full_cold_start_sentence (via Veneer)
<LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence (via Veneer)
<LI><a href="#[230ae58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_time_sentence (via Veneer)
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf (via Veneer)
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt (via Veneer)
<LI><a href="#[230b830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_port_on_receive (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230bb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_recv_sms (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei (via Veneer)
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex (via Veneer)
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy (via Veneer)
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum (via Veneer)
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print (via Veneer)
</UL>

<P><STRONG><a name="[2371318]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23712d0]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2371288]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[23710b8]"></a>strlen</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check
</UL>

<P><STRONG><a name="[2370f00]"></a>__aeabi_uread4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_smsp_comm_err_count (via Veneer)
<LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc (via Veneer)
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc (via Veneer)
<LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc (via Veneer)
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register (via Veneer)
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart (via Veneer)
<LI><a href="#[2303648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_rtc_time_value (via Veneer)
<LI><a href="#[23078d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_read_back_free_mem (via Veneer)
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem (via Veneer)
<LI><a href="#[23079a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_read_minor_param (via Veneer)
<LI><a href="#[2307a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_read (via Veneer)
</UL>

<P><STRONG><a name="[2370eb8]"></a>__rt_uread4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[2370d50]"></a>__aeabi_uwrite4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc (via Veneer)
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc (via Veneer)
<LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc (via Veneer)
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process (via Veneer)
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart (via Veneer)
<LI><a href="#[23077f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_cfg_to_para (via Veneer)
<LI><a href="#[2307918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_write_back_free_mem (via Veneer)
<LI><a href="#[23079f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_write_minor_param (via Veneer)
<LI><a href="#[2307a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_file_param_main_write (via Veneer)
</UL>

<P><STRONG><a name="[2370d08]"></a>__rt_uwrite4</STRONG> (ARM, 32 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[2370a38]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[23709f0]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_gmtime (via Veneer)
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000 (via Veneer)
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time (via Veneer)
<LI><a href="#[15cda10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_day (via Veneer)
<LI><a href="#[230a990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tocoord (via Veneer)
<LI><a href="#[230aa20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_rescale (via Veneer)
<LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan (via Veneer)
<LI><a href="#[230e2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_i (via Veneer)
<LI><a href="#[230e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_f (via Veneer)
<LI><a href="#[230e380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_tail_i (via Veneer)
<LI><a href="#[230e3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_tail_f (via Veneer)
<LI><a href="#[230e5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_len (via Veneer)
<LI><a href="#[230f190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_diff (via Veneer)
</UL>

<P><STRONG><a name="[236bfe8]"></a>__ARM_switch8</STRONG> (ARM, 24 bytes, Stack size 0 bytes, switch8.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15cc598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_reboot_counts (via Veneer)
<LI><a href="#[15cc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_boot_reason (via Veneer)
<LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc (via Veneer)
<LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc (via Veneer)
<LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc (via Veneer)
<LI><a href="#[2302ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_transfer_status (via Veneer)
<LI><a href="#[23042a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_workmode_string (via Veneer)
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file (via Veneer)
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data (via Veneer)
<LI><a href="#[23044a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gw_get_pmu_work_mode_data (via Veneer)
<LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set (via Veneer)
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point (via Veneer)
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status (via Veneer)
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status (via Veneer)
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status (via Veneer)
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status (via Veneer)
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status (via Veneer)
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set (via Veneer)
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data (via Veneer)
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect (via Veneer)
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect (via Veneer)
<LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc (via Veneer)
<LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc (via Veneer)
<LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc (via Veneer)
<LI><a href="#[230d6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_destroy (via Veneer)
<LI><a href="#[230d720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect_ok (via Veneer)
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get (via Veneer)
<LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc (via Veneer)
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status (via Veneer)
<LI><a href="#[230e0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_boot_reason_str (via Veneer)
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer (via Veneer)
</UL>

<P><STRONG><a name="[236bfa0]"></a>__rt_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, switch8.o(.text), UNUSED)

<P><STRONG><a name="[236a310]"></a>__read_errno</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>

<P><STRONG><a name="[236a2c8]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt (via Veneer)
<LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin (via Veneer)
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos (via Veneer)
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin (via Veneer)
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos (via Veneer)
</UL>

<P><STRONG><a name="[236a0f8]"></a>_printf_char_common</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2371ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[2369eb0]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2371ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __0sprintf.o(.text)
</UL>
<P><STRONG><a name="[2368de8]"></a>__ARM_call_via_r0</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368da0]"></a>__call_via_r0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368d58]"></a>__ARM_call_via_r1</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2368d10]"></a>__call_via_r1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368cc8]"></a>__ARM_call_via_r2</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23674b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_outstr_char
<LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2368c80]"></a>__call_via_r2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368c38]"></a>__ARM_call_via_r3</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2371d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2368bf0]"></a>__call_via_r3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368ba8]"></a>__ARM_call_via_r4</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368b60]"></a>__call_via_r4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368b18]"></a>__ARM_call_via_r5</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368ad0]"></a>__call_via_r5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368a88]"></a>__ARM_call_via_r6</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2368a40]"></a>__call_via_r6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[23689f8]"></a>__ARM_call_via_r7</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[23689b0]"></a>__call_via_r7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, callvia.o(.text), UNUSED)

<P><STRONG><a name="[2367c70]"></a>__aeabi_errno_addr</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236a310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno (via Veneer)
</UL>

<P><STRONG><a name="[2367c28]"></a>__rt_errno_addr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[23674b8]"></a>_printf_outstr_char</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_outstr_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _printf_outstr_char
</UL>
<BR>[Calls]<UL><LI><a href="#[2368cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_call_via_r2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[2367340]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_input_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[23709a8]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[2370960]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[2370a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[2370ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[2370b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime (via Veneer)
<LI><a href="#[15cd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_gmtime (via Veneer)
<LI><a href="#[15cda58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_leap_year (via Veneer)
<LI><a href="#[15cdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_localtime (via Veneer)
<LI><a href="#[15cdd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWord2BCD (via Veneer)
<LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time (via Veneer)
<LI><a href="#[2301990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;week_day_to_utc_time (via Veneer)
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point (via Veneer)
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point (via Veneer)
<LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase (via Veneer)
<LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que (via Veneer)
<LI><a href="#[2302e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_smsp_packet_to_uart (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[2304458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_one_upload_mod_data (via Veneer)
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode (via Veneer)
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock (via Veneer)
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request (via Veneer)
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack (via Veneer)
<LI><a href="#[230a318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsv (via Veneer)
<LI><a href="#[230e4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_de_queue_i (via Veneer)
<LI><a href="#[230e4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_de_queue_f (via Veneer)
<LI><a href="#[230e530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_i (via Veneer)
<LI><a href="#[230e578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_f (via Veneer)
<LI><a href="#[230e608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_is_full (via Veneer)
<LI><a href="#[230e890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek_until (via Veneer)
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert (via Veneer)
<LI><a href="#[230f190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_diff (via Veneer)
<LI><a href="#[2310228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_mileage (via Veneer)
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[23682c8]"></a>__ieee754_rem_pio2</STRONG> (ARM, 1172 bytes, Stack size 80 bytes, rred.o(i.__ieee754_rem_pio2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2366ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236e8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2368800]"></a>__kernel_cos</STRONG> (ARM, 372 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2368670]"></a>__kernel_poly</STRONG> (ARM, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[2368058]"></a>__kernel_sin</STRONG> (ARM, 364 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[236bc50]"></a>acos</STRONG> (ARM, 984 bytes, Stack size 40 bytes, acos.o(i.acos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
</UL>

<P><STRONG><a name="[236b7a0]"></a>asin</STRONG> (ARM, 1000 bytes, Stack size 56 bytes, asin.o(i.asin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236c7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
</UL>

<P><STRONG><a name="[236b498]"></a>cos</STRONG> (ARM, 212 bytes, Stack size 32 bytes, cos.o(i.cos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
</UL>

<P><STRONG><a name="[236ae38]"></a>pow</STRONG> (ARM, 3604 bytes, Stack size 216 bytes, pow.o(i.pow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[236aec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copysign
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[236c7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[236e8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[236f768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
</UL>

<P><STRONG><a name="[236ab68]"></a>sin</STRONG> (ARM, 228 bytes, Stack size 32 bytes, sin.o(i.sin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236c388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
</UL>

<P><STRONG><a name="[236a868]"></a>sqrt</STRONG> (ARM, 100 bytes, Stack size 16 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[236a2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno (via Veneer)
<LI><a href="#[236c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[230f388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_2d (via Veneer)
<LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d (via Veneer)
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236fd28]"></a>__aeabi_d2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[15cd500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mile_to_km (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
<LI><a href="#[230f2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_2d (via Veneer)
<LI><a href="#[230f340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_3d (via Veneer)
</UL>

<P><STRONG><a name="[236fce0]"></a>_d2f</STRONG> (ARM, 168 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236fc98]"></a>__fpl_inf_d2f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[236f840]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round (via Veneer)
<LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236f7f8]"></a>_dadd</STRONG> (ARM, 452 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236f7b0]"></a>__fpl_inf_dadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[2369cb8]"></a>__fpl_dcheck_NaN2</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2366ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[23699a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[236e538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[236f2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[236f690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[236f7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2369b08]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2369708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[236c340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[236ec10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[236efb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[236fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[23699a0]"></a>__fpl_dcmp_InfNaN</STRONG> (ARM, 128 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[236c758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[236c978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[2369958]"></a>__fpl_inf_dcmp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[236f328]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[230f2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_2d (via Veneer)
<LI><a href="#[230f340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_3d (via Veneer)
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236f2e0]"></a>_ddiv</STRONG> (ARM, 464 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236f250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236f298]"></a>__fpl_inf_ddiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[236f250]"></a>_ddiv_mantissas</STRONG> (ARM, 608 bytes, Stack size 28 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236f2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[236f000]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round (via Veneer)
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int (via Veneer)
<LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[236efb8]"></a>_dfix</STRONG> (ARM, 172 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236ef70]"></a>__fpl_inf_dfix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[236ec58]"></a>__aeabi_d2uiz</STRONG> (ARM, 0 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence (via Veneer)
</UL>

<P><STRONG><a name="[236ec10]"></a>_dfixu</STRONG> (ARM, 132 bytes, Stack size 8 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236ebc8]"></a>__fpl_inf_dfixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dfixu.o(x$fpl$dfixu), UNUSED)

<P><STRONG><a name="[236e8b0]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int (via Veneer)
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[236e868]"></a>_dflt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[236e820]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236e790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[236e7d8]"></a>__aeabi_ui2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[15cd818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_gpstime (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse (via Veneer)
<LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round (via Veneer)
</UL>

<P><STRONG><a name="[236e790]"></a>_dfltu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236e820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[236c9c0]"></a>__aeabi_cdcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
<LI><a href="#[230f460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_sign (via Veneer)
<LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[236c978]"></a>_dcmple</STRONG> (ARM, 132 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23699a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[236e580]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[15cd500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mile_to_km (via Veneer)
<LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[230f418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_round (via Veneer)
<LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236e538]"></a>_dmul</STRONG> (ARM, 460 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236e4f0]"></a>__fpl_inf_dmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)

<P><STRONG><a name="[2366ea8]"></a>_drem</STRONG> (ARM, 496 bytes, Stack size 16 bytes, drem.o(x$fpl$drem), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[2366e60]"></a>__fpl_inf_drem</STRONG> (ARM, 0 bytes, Stack size unknown bytes, drem.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[236c7a0]"></a>__aeabi_cdrcmple</STRONG> (ARM, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test (via Veneer)
<LI><a href="#[230f460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_sign (via Veneer)
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[236c758]"></a>_drcmple</STRONG> (ARM, 156 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23699a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[236f768]"></a>__aeabi_drsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236f720]"></a>_drsb</STRONG> (ARM, 24 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236f888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[236f8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2369708]"></a>_dsqrt</STRONG> (ARM, 384 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[236a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[23696c0]"></a>__fpl_inf_dsqrt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[236f6d8]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236f690]"></a>_dsub</STRONG> (ARM, 572 bytes, Stack size 8 bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[236f8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236f648]"></a>__fpl_inf_dsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[23695a0]"></a>__dunder</STRONG> (ARM, 272 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[2369558]"></a>__dunder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[236e3d0]"></a>__aeabi_f2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[15cd500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mile_to_km (via Veneer)
<LI><a href="#[2303be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct_to_jsonstr (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file (via Veneer)
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file (via Veneer)
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gga (via Veneer)
<LI><a href="#[230aab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_aid_info_sentence (via Veneer)
<LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence (via Veneer)
<LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
<LI><a href="#[230f2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_2d (via Veneer)
<LI><a href="#[230f340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_normalize_3d (via Veneer)
<LI><a href="#[230f388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_2d (via Veneer)
<LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d (via Veneer)
</UL>

<P><STRONG><a name="[236e388]"></a>_f2d</STRONG> (ARM, 96 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236e340]"></a>__fpl_inf_f2d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[236df10]"></a>__aeabi_fadd</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network (via Veneer)
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230a990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tocoord (via Veneer)
<LI><a href="#[230f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_avage (via Veneer)
<LI><a href="#[230f0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_lowpass_filter (via Veneer)
<LI><a href="#[230f268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_inner_product_2d (via Veneer)
<LI><a href="#[230f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_inner_product_3d (via Veneer)
<LI><a href="#[230f388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_2d (via Veneer)
<LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d (via Veneer)
</UL>

<P><STRONG><a name="[236dec8]"></a>_fadd</STRONG> (ARM, 260 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23693b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[236df58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236de80]"></a>__fpl_inf_fadd</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[23693b8]"></a>__fpl_fcheck_NaN2</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[236cba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[236da00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[236dd60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[236dec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[2369250]"></a>__fpl_fcheck_NaN1</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[236d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[236d6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[236e388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[236da48]"></a>__aeabi_fdiv</STRONG> (ARM, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network (via Veneer)
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230a990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tocoord (via Veneer)
<LI><a href="#[230a9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tofloat (via Veneer)
<LI><a href="#[230f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_avage (via Veneer)
<LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
</UL>

<P><STRONG><a name="[236da00]"></a>_fdiv</STRONG> (ARM, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23693b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236d9b8]"></a>__fpl_inf_fdiv</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[236d730]"></a>__aeabi_f2iz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence (via Veneer)
</UL>

<P><STRONG><a name="[236d6e8]"></a>_ffix</STRONG> (ARM, 112 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236d6a0]"></a>__fpl_inf_ffix</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[236d320]"></a>__aeabi_f2uiz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
</UL>

<P><STRONG><a name="[236d2d8]"></a>_ffixu</STRONG> (ARM, 92 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236d290]"></a>__fpl_inf_ffixu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[236cf28]"></a>__aeabi_i2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[230a990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tocoord (via Veneer)
<LI><a href="#[230a9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tofloat (via Veneer)
</UL>

<P><STRONG><a name="[236cee0]"></a>_fflt</STRONG> (ARM, 92 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[236ce98]"></a>__fflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fflt_noclz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236ce08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[236ce50]"></a>__aeabi_ui2f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network (via Veneer)
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_avage (via Veneer)
</UL>

<P><STRONG><a name="[236ce08]"></a>_ffltu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, fflt_noclz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236ce98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[236cbf0]"></a>__aeabi_fmul</STRONG> (ARM, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network (via Veneer)
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location (via Veneer)
<LI><a href="#[23054a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_pack_gps_data (via Veneer)
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack (via Veneer)
<LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc (via Veneer)
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence (via Veneer)
<LI><a href="#[230f0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_lowpass_filter (via Veneer)
<LI><a href="#[230f1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_angle_3d (via Veneer)
<LI><a href="#[230f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_cross_product_3d (via Veneer)
<LI><a href="#[230f268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_inner_product_2d (via Veneer)
<LI><a href="#[230f2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_inner_product_3d (via Veneer)
<LI><a href="#[230f388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_2d (via Veneer)
<LI><a href="#[230f3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_magnitude_3d (via Veneer)
</UL>

<P><STRONG><a name="[236cba8]"></a>_fmul</STRONG> (ARM, 260 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23693b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236cb60]"></a>__fpl_inf_fmul</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[23690e8]"></a>__fpl_normalise2</STRONG> (ARM, 148 bytes, Stack size 0 bytes, fnorm2_noclz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[236dda8]"></a>__aeabi_fsub</STRONG> (ARM, 0 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub))
<BR><BR>[Called By]<UL><LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed (via Veneer)
<LI><a href="#[230f0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_lowpass_filter (via Veneer)
<LI><a href="#[230f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_cross_product_3d (via Veneer)
</UL>

<P><STRONG><a name="[236dd60]"></a>_fsub</STRONG> (ARM, 356 bytes, Stack size 0 bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23693b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[236dfa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236dd18]"></a>__fpl_inf_fsub</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[2368f78]"></a>__funder</STRONG> (ARM, 140 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[2368f30]"></a>__funder_d</STRONG> (ARM, 4 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[2367220]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2367020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[2369250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[23693b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[2369cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[236c388]"></a>__ARM_scalbn</STRONG> (ARM, 0 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence (via Veneer)
<LI><a href="#[230f148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_get_distance (via Veneer)
<LI><a href="#[2368058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[23682c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2368800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[236ab68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[236b498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[236b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[236bc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acos
</UL>

<P><STRONG><a name="[236c340]"></a>scalbn</STRONG> (ARM, 108 bytes, Stack size 0 bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2369b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[236fb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_infinity (Weak Reference)
</UL>

<P><STRONG><a name="[236c2f8]"></a>__fpl_inf_scalbn</STRONG> (ARM, 0 bytes, Stack size unknown bytes, scalbn_noclz.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[2367020]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2367220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[23699a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[15ccef8]"></a>gsm_led_proc</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = gsm_led_proc &rArr; hard_ware_set_gsm_led &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gsm_led
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_timer_proc
</UL>

<P><STRONG><a name="[15cceb0]"></a>wifi_led_proc</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = wifi_led_proc
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GpioSetLevel (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_timer_proc
</UL>

<P><STRONG><a name="[15cce68]"></a>gps_led_proc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = gps_led_proc &rArr; hard_ware_set_gps_led &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_set_gps_led
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_timer_proc
</UL>

<P><STRONG><a name="[15ccaa8]"></a>init_para</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = init_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d70d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strstr (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[15cc988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_reset
<LI><a href="#[15cca60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_state_from_file
<LI><a href="#[15ce3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_create
</UL>

<P><STRONG><a name="[15cca60]"></a>read_state_from_file</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104 + Unknown Stack Size
<LI>Call Chain = read_state_from_file &rArr; init_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccaa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_para
<LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_create
</UL>

<P><STRONG><a name="[15cca18]"></a>save_state_to_file</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, system_state.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Commit (via Veneer)
<LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fb68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_get_last_good_time
<LI><a href="#[230fbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_get_call_ok_count
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[15cc088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_cold_boot
<LI><a href="#[15cc118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_test_result
<LI><a href="#[15cc1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_defence
<LI><a href="#[15cc238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_user_relay_state
<LI><a href="#[15cc2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_device_relay_state
<LI><a href="#[15cc358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_acc_is_line_mode
<LI><a href="#[15cc3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_started_charge
<LI><a href="#[15cc478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_reported_gps_since_modify_ip
<LI><a href="#[15cc508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_static_gps
<LI><a href="#[15cc670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_gps_since_boot
<LI><a href="#[15cc790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_vehicle_state
<LI><a href="#[15cc7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_work_state
<LI><a href="#[15cc868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot_reason
<LI><a href="#[15cc8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_boot_reason
<LI><a href="#[15cc988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_reset
<LI><a href="#[230ff58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_ip_cache
<LI><a href="#[230ffa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_static_info
<LI><a href="#[2310108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_gsensor_type
<LI><a href="#[2310198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_bin_checksum
<LI><a href="#[2310228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_mileage
<LI><a href="#[2310270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_move_alarm
<LI><a href="#[2310300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_remove_alarm
<LI><a href="#[2310390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_sharp_turn_alarm
<LI><a href="#[2310420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_turn_over_alarm
<LI><a href="#[23104b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_speed_down_alarm
<LI><a href="#[2310540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_speed_up_alarm
<LI><a href="#[23105d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_collision_alarm
<LI><a href="#[2310660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_high_voltage_alarm
<LI><a href="#[23106f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_fakecell_alarm
<LI><a href="#[2310780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_overspeed_alarm
<LI><a href="#[2310810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_shake_alarm
<LI><a href="#[23108e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_power_off_alarm
<LI><a href="#[2310978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_extern_battery_voltage_grade
</UL>

<P><STRONG><a name="[230fa00]"></a>json_strdup</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_item_to_object
</UL>

<P><STRONG><a name="[230f9b8]"></a>add_item_to_object</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, json.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = add_item_to_object &rArr; json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[230fa00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_strdup
</UL>
<BR>[Called By]<UL><LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_double
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
</UL>

<P><STRONG><a name="[230e0f8]"></a>get_boot_reason_str</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = get_boot_reason_str
</UL>
<BR>[Calls]<UL><LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_boot_log
</UL>

<P><STRONG><a name="[230e0b0]"></a>hard_ware_reboot_atonce</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hard_ware.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = hard_ware_reboot_atonce &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d66f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SystemReboot (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hard_ware.o(.text)
</UL>
<P><STRONG><a name="[230dba0]"></a>gprs_config_apn</STRONG> (Thumb, 344 bytes, Stack size 408 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5480 + Unknown Stack Size
<LI>Call Chain = gprs_config_apn &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d4c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_AutoApnCheck (via Veneer)
<LI><a href="#[15d54b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ApnConfig (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[15d7310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230d330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imsi
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230d570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_set_account_id
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[230db58]"></a>gprs_transfer_status</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = gprs_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230dac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_call_ok_proc
<LI><a href="#[230db10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_init_proc
</UL>

<P><STRONG><a name="[230db10]"></a>gprs_init_proc</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5528 + Unknown Stack Size
<LI>Call Chain = gprs_init_proc &rArr; gprs_config_apn &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gsm_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketRegisterCallBack (via Veneer)
<LI><a href="#[15d6aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetServiceAvailability (via Veneer)
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[230dba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_config_apn
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230dac8]"></a>gprs_call_ok_proc</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5360 + Unknown Stack Size
<LI>Call Chain = gprs_call_ok_proc &rArr; gprs_destroy &rArr; gm_socket_global_destroy &rArr; gm_socket_destroy &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gsm_state
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetBearerStatus (via Veneer)
<LI><a href="#[230d9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_destroy
<LI><a href="#[230db58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_transfer_status
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_timer_proc
</UL>

<P><STRONG><a name="[230cef8]"></a>gm_socket_get_host_by_name</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, socket.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = gm_socket_get_host_by_name &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetHostByName (via Veneer)
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_timer_proc
</UL>

<P><STRONG><a name="[230c208]"></a>check_fake_cell_alarm_timer_proc</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = check_fake_cell_alarm_timer_proc &rArr; system_state_set_fakecell_alarm &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_work_state
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[23106f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_fakecell_alarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c1c0]"></a>imei_is_valid</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = imei_is_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isdigit
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230be60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_set_imei
<LI><a href="#[230c178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_imei_callback
</UL>

<P><STRONG><a name="[230c178]"></a>gsm_imei_callback</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = gsm_imei_callback &rArr; imei_is_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230c1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imei_is_valid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c130]"></a>gsm_lbs_callback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gsm_lbs_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c0e8]"></a>gsm_iccid_callback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = gsm_iccid_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c0a0]"></a>check_sim_card</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = check_sim_card &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d58e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetIccid (via Veneer)
<LI><a href="#[15d5930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetImsi (via Veneer)
<LI><a href="#[15d5cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetLbsInfo (via Veneer)
<LI><a href="#[15d6b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetImei (via Veneer)
<LI><a href="#[15d6b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_CheckSimValid (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c058]"></a>gsm_call_status_callback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gsm_call_status_callback &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230c010]"></a>gsm_incomming_call</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = gsm_incomming_call &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d67d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_CallAnswer (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230bfc8]"></a>gsm_fake_cell_callback</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = gsm_fake_cell_callback &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gsm.o(.text)
</UL>
<P><STRONG><a name="[230bbd8]"></a>send_sms_callback</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sms.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = send_sms_callback &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sms.o(.text)
</UL>
<P><STRONG><a name="[230bb90]"></a>send_sms_real</STRONG> (Thumb, 68 bytes, Stack size 1064 bytes, sms.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6112 + Unknown Stack Size
<LI>Call Chain = send_sms_real &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SendSMS (via Veneer)
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sms.o(.text)
</UL>
<P><STRONG><a name="[230bb48]"></a>on_recv_sms</STRONG> (Thumb, 78 bytes, Stack size 1048 bytes, sms.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8232 + Unknown Stack Size
<LI>Call Chain = on_recv_sms &rArr; sms_send &rArr; send_sms_real &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230bb00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sms_send
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sms.o(.text)
</UL>
<P><STRONG><a name="[230b8c0]"></a>expmu_port_receive</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5160 + Unknown Stack Size
<LI>Call Chain = expmu_port_receive &rArr; parse_expmu_dat_fun &rArr; slave_mem_share_protocol_prase &rArr; prase_smsp_write_response_packet &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartRead (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230b680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_expmu_dat_fun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[230b878]"></a>gps_port_on_receive</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5696 + Unknown Stack Size
<LI>Call Chain = gps_port_on_receive &rArr; gps_on_rcv_uart_data &rArr; on_received_rmc &rArr; upload_gps_data &rArr; gps_service_push_one_gps &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartRead (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230e890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek_until
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[230b830]"></a>debug_port_on_receive</STRONG> (Thumb, 148 bytes, Stack size 1056 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8208 + Unknown Stack Size
<LI>Call Chain = debug_port_on_receive &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_UartRead (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[230b560]"></a>nmea_check</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = nmea_check &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isprint
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[230b488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2int
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[23710b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[230b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_sentence_id
</UL>

<P><STRONG><a name="[230b518]"></a>nmea_scan</STRONG> (Thumb, 1054 bytes, Stack size 128 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = nmea_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_strtol
<LI><a href="#[15cd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isdigit
<LI><a href="#[230b440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_isfield
<LI><a href="#[23709f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via Veneer)
<LI><a href="#[2371860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_mtk_ack
<LI><a href="#[230b0e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_zda
<LI><a href="#[230b128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_vtg
<LI><a href="#[230b170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsv
<LI><a href="#[230b1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gst
<LI><a href="#[230b200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gll
<LI><a href="#[230b248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gsa
<LI><a href="#[230b290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_gga
<LI><a href="#[230b2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_rmc
<LI><a href="#[230b320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_inf
<LI><a href="#[230b368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_txt
<LI><a href="#[230b3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_sentence_id
</UL>

<P><STRONG><a name="[230b4d0]"></a>nmea_create_td_sentence</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = nmea_create_td_sentence &rArr; flet_cher_16
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230ac60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flet_cher_16
</UL>
<BR>[Called By]<UL><LI><a href="#[230ab40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_open_vtg_sentence
<LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence
<LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence
<LI><a href="#[230ac18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_qeury_version_sentence
</UL>

<P><STRONG><a name="[230b488]"></a>hex2int</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, nmea_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230b560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_check
</UL>

<P><STRONG><a name="[230b440]"></a>nmea_isfield</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, nmea_protocol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nmea_isfield
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isprint
</UL>
<BR>[Called By]<UL><LI><a href="#[230b518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scan
</UL>

<P><STRONG><a name="[230b3f8]"></a>nmea_checksum</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nmea_protocol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence
<LI><a href="#[230aee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_create_common_mtk_sentence
</UL>

<P><STRONG><a name="[230a558]"></a>clear_data</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = clear_data
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23107c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_overspeed_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_create
<LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
</UL>

<P><STRONG><a name="[230a510]"></a>check_fix_state</STRONG> (Thumb, 252 bytes, Stack size 184 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5576 + Unknown Stack Size
<LI>Call Chain = check_fix_state &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a4c8]"></a>query_mtk_version</STRONG> (Thumb, 108 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = query_mtk_version &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230aea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_qeury_version_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_has_received_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a480]"></a>check_has_received_data</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152 + Unknown Stack Size
<LI>Call Chain = check_has_received_data &rArr; query_mtk_version &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SysMsdelay (via Veneer)
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230a4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_mtk_version
<LI><a href="#[230b7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_close_port
<LI><a href="#[230b7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_open_port
<LI><a href="#[230deb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_open_gps
<LI><a href="#[230df48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_close_gps
<LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a438]"></a>query_at_version</STRONG> (Thumb, 528 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = query_at_version &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a3f0]"></a>query_td_version</STRONG> (Thumb, 96 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = query_td_version &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230ac18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_qeury_version_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a3a8]"></a>query_td_and_at_version</STRONG> (Thumb, 156 bytes, Stack size 96 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = query_td_and_at_version &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230aaf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_at_qeury_version_sentence
<LI><a href="#[230ac18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_qeury_version_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a360]"></a>set_device_type</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5240 + Unknown Stack Size
<LI>Call Chain = set_device_type &rArr; config_service_save_to_local &rArr; convert_cfg_to_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a318]"></a>on_received_gsv</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = on_received_gsv
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a2d0]"></a>check_fix_state_change</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = check_fix_state_change &rArr; util_check_state_change
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccdd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_gps_state
<LI><a href="#[15cd398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_check_state_change
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[230a240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gsa
<LI><a href="#[230a288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_gga
</UL>

<P><STRONG><a name="[230a288]"></a>on_received_gga</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = on_received_gga &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state_change
<LI><a href="#[230a9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tofloat
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a240]"></a>on_received_gsa</STRONG> (Thumb, 470 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = on_received_gsa &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230a2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fix_state_change
<LI><a href="#[230a9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tofloat
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a1f8]"></a>calc_alcr_by_speed</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = calc_alcr_by_speed &rArr; circular_queue_get_tail_f &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230e3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_tail_f
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236dda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[236fd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230a1b0]"></a>on_received_rmc</STRONG> (Thumb, 586 bytes, Stack size 224 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5560 + Unknown Stack Size
<LI>Call Chain = on_received_rmc &rArr; upload_gps_data &rArr; gps_service_push_one_gps &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_has_reported_gps_since_boot
<LI><a href="#[15cc6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_has_reported_gps_since_boot
<LI><a href="#[15cd500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mile_to_km
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_gmtime
<LI><a href="#[15cdae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_tm_to_mtktime
<LI><a href="#[15d6a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SetLocalTime (via Veneer)
<LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
<LI><a href="#[230a0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upload_gps_data
<LI><a href="#[230a1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alcr_by_speed
<LI><a href="#[230a990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tocoord
<LI><a href="#[230a9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_tofloat
<LI><a href="#[230aa68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_get_utc_time
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230e2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_i
<LI><a href="#[230e338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_get_by_index_f
<LI><a href="#[230e530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_i
<LI><a href="#[230e578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circular_queue_en_queue_f
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple (via Veneer)
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a168]"></a>open_td_vtg</STRONG> (Thumb, 82 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = open_td_vtg &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[230ab40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_open_vtg_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.text)
</UL>
<P><STRONG><a name="[230a120]"></a>write_td_agps_time</STRONG> (Thumb, 90 bytes, Stack size 136 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5184 + Unknown Stack Size
<LI>Call Chain = write_td_agps_time &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230abd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_time_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_write_agps_info
</UL>

<P><STRONG><a name="[230a0d8]"></a>upload_gps_data</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5336 + Unknown Stack Size
<LI>Call Chain = upload_gps_data &rArr; gps_service_push_one_gps &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d5d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StopTimer (via Veneer)
<LI><a href="#[2309868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_one_gps
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230a1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_received_rmc
</UL>

<P><STRONG><a name="[230a090]"></a>write_td_agps_pos</STRONG> (Thumb, 66 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = write_td_agps_pos &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230ab88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_td_aid_pos_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a048]"></a>write_set_min_snr</STRONG> (Thumb, 68 bytes, Stack size 96 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = write_set_min_snr &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230acf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_set_min_snr_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[230a000]"></a>write_mtk_high_accuracy</STRONG> (Thumb, 66 bytes, Stack size 96 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = write_mtk_high_accuracy &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230ad80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_high_accuracy_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[2309fb8]"></a>write_mtk_full_cold_start</STRONG> (Thumb, 62 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = write_mtk_full_cold_start &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230adc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_full_cold_start_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[2309f70]"></a>write_mtk_epo_pos</STRONG> (Thumb, 72 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = write_mtk_epo_pos &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230ae10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_creat_mtk_aid_pos_sentence
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230b6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_on_rcv_uart_data
</UL>

<P><STRONG><a name="[2309478]"></a>log_data_insert_one</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = log_data_insert_one &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230e9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_insert
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
</UL>

<P><STRONG><a name="[2309430]"></a>log_service_transfer_status</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[23092c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_init_proc
<LI><a href="#[23093e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_data_finish_proc
<LI><a href="#[230c640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_destroy
<LI><a href="#[230c688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_ok
<LI><a href="#[230c6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_failed
<LI><a href="#[230c718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close_for_reconnect
</UL>

<P><STRONG><a name="[23093e8]"></a>log_service_data_finish_proc</STRONG> (Thumb, 532 bytes, Stack size 24 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = log_service_data_finish_proc &rArr; log_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
<LI><a href="#[230d918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_is_ok
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
</UL>

<P><STRONG><a name="[23093a0]"></a>log_data_release</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = log_data_release
</UL>
<BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
</UL>

<P><STRONG><a name="[2309358]"></a>log_service_close</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = log_service_close
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[230c640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_destroy
<LI><a href="#[230c6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_connection_failed
<LI><a href="#[230c718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_close_for_reconnect
</UL>

<P><STRONG><a name="[2309310]"></a>log_service_work_proc</STRONG> (Thumb, 96 bytes, Stack size 112 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5288 + Unknown Stack Size
<LI>Call Chain = log_service_work_proc &rArr; log_service_send_msg &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2309280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_send_msg
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
</UL>

<P><STRONG><a name="[23092c8]"></a>log_service_init_proc</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, log_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = log_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2309430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_transfer_status
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[230d2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_timer_proc
</UL>

<P><STRONG><a name="[2308ed8]"></a>gps_service_transfer_status</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = gps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_init_proc
<LI><a href="#[2308e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_work_proc
<LI><a href="#[2308e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_data_finish_proc
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230c7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_ok
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close_for_reconnect
</UL>

<P><STRONG><a name="[2308e90]"></a>gps_service_close</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = gps_service_close
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230c7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_connection_failed
<LI><a href="#[230c880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_close_for_reconnect
</UL>

<P><STRONG><a name="[2308e48]"></a>gps_service_data_finish_proc</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = gps_service_data_finish_proc &rArr; gps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
</UL>

<P><STRONG><a name="[2308e00]"></a>gps_service_work_proc</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7728 + Unknown Stack Size
<LI>Call Chain = gps_service_work_proc &rArr; protocol_msg_receive &rArr; protocol_2929_parse_msg &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23089c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_msg_receive
<LI><a href="#[2308d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_send_one_locate
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[230d4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy_gprs
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
</UL>

<P><STRONG><a name="[2308db8]"></a>gps_service_init_proc</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = gps_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2308ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_transfer_status
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[230d450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_timer_proc
</UL>

<P><STRONG><a name="[2308458]"></a>agps_service_transfer_status</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = agps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[2308410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_data_finish_proc
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[230c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_destroy
<LI><a href="#[230ca30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_ok
<LI><a href="#[230ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_failed
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
</UL>

<P><STRONG><a name="[2308410]"></a>agps_service_data_finish_proc</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128 + Unknown Stack Size
<LI>Call Chain = agps_service_data_finish_proc &rArr; agps_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
<LI><a href="#[2309d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_state
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
</UL>

<P><STRONG><a name="[23083c8]"></a>agps_read_data_file</STRONG> (Thumb, 330 bytes, Stack size 88 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = agps_read_data_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
</UL>

<P><STRONG><a name="[2308380]"></a>agps_service_check_and_read_file</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5160 + Unknown Stack Size
<LI>Call Chain = agps_service_check_and_read_file &rArr; agps_read_data_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23083c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_read_data_file
<LI><a href="#[2309988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_gps_type
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
</UL>

<P><STRONG><a name="[2308338]"></a>agps_service_write_to_gps</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5504 + Unknown Stack Size
<LI>Call Chain = agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[2308380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_check_and_read_file
<LI><a href="#[23099d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_require_to_gps
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_init_proc
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
</UL>

<P><STRONG><a name="[23082f0]"></a>agps_write_data_file</STRONG> (Thumb, 572 bytes, Stack size 104 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5608 + Unknown Stack Size
<LI>Call Chain = agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_delete_file
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
</UL>

<P><STRONG><a name="[23082a8]"></a>agps_msg_pack_id_len</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = agps_msg_pack_id_len &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
</UL>

<P><STRONG><a name="[2308260]"></a>agps_msg_pack_head</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = agps_msg_pack_head &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
</UL>

<P><STRONG><a name="[2308218]"></a>agps_msg_send_get_file</STRONG> (Thumb, 198 bytes, Stack size 144 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5256 + Unknown Stack Size
<LI>Call Chain = agps_msg_send_get_file &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2307eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_get_file
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[23082a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_id_len
<LI><a href="#[2309988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_gps_type
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
</UL>

<P><STRONG><a name="[23081d0]"></a>agps_msg_parse_zkw_ack</STRONG> (Thumb, 896 bytes, Stack size 40 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5648 + Unknown Stack Size
<LI>Call Chain = agps_msg_parse_zkw_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2307e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_agps_at6558_check_item_num
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
</UL>

<P><STRONG><a name="[2308188]"></a>agps_msg_parse_taidou_ack</STRONG> (Thumb, 728 bytes, Stack size 96 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5704 + Unknown Stack Size
<LI>Call Chain = agps_msg_parse_taidou_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
</UL>

<P><STRONG><a name="[2308140]"></a>agps_msg_parse_epo_ack</STRONG> (Thumb, 730 bytes, Stack size 32 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5640 + Unknown Stack Size
<LI>Call Chain = agps_msg_parse_epo_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[23082f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_write_data_file
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
</UL>

<P><STRONG><a name="[23080f8]"></a>agps_msg_parse_timing_ack</STRONG> (Thumb, 694 bytes, Stack size 128 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5632 + Unknown Stack Size
<LI>Call Chain = agps_msg_parse_timing_ack &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mtktime_to_tm
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15cd980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_mktime
<LI><a href="#[15cdaa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_localtime
<LI><a href="#[15cdae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_tm_to_mtktime
<LI><a href="#[15d6a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SetLocalTime (via Veneer)
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[2371620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
</UL>

<P><STRONG><a name="[23080b0]"></a>agps_msg_parse</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5728 + Unknown Stack Size
<LI>Call Chain = agps_msg_parse &rArr; agps_msg_parse_taidou_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23080f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_timing_ack
<LI><a href="#[2308140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_epo_ack
<LI><a href="#[2308188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_taidou_ack
<LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
</UL>

<P><STRONG><a name="[2308068]"></a>agps_msg_receive</STRONG> (Thumb, 720 bytes, Stack size 32 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5760 + Unknown Stack Size
<LI>Call Chain = agps_msg_receive &rArr; agps_msg_parse &rArr; agps_msg_parse_taidou_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[23080b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
</UL>

<P><STRONG><a name="[2308020]"></a>agps_msg_pack_timing</STRONG> (Thumb, 532 bytes, Stack size 152 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = agps_msg_pack_timing &rArr; gsm_get_cell_info &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_current_local_time
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230de28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_zone
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
</UL>

<P><STRONG><a name="[2307fd8]"></a>agps_msg_send_timing</STRONG> (Thumb, 140 bytes, Stack size 112 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5320 + Unknown Stack Size
<LI>Call Chain = agps_msg_send_timing &rArr; agps_msg_pack_timing &rArr; gsm_get_cell_info &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2308020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_timing
<LI><a href="#[2308260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_head
<LI><a href="#[23082a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_pack_id_len
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_work_proc
<LI><a href="#[230ca30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_ok
</UL>

<P><STRONG><a name="[2307f90]"></a>agps_service_work_proc</STRONG> (Thumb, 586 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5768 + Unknown Stack Size
<LI>Call Chain = agps_service_work_proc &rArr; agps_msg_receive &rArr; agps_msg_parse &rArr; agps_msg_parse_taidou_ack &rArr; agps_write_data_file &rArr; agps_service_write_to_gps &rArr; agps_service_require_to_gps &rArr; gps_write_agps_info &rArr; nmea_creat_at_aid_info_sentence &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2307d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_agps_socket_type
<LI><a href="#[2307fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_timing
<LI><a href="#[2308068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_receive
<LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
</UL>

<P><STRONG><a name="[2307f48]"></a>agps_service_init_proc</STRONG> (Thumb, 158 bytes, Stack size 104 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6424 + Unknown Stack Size
<LI>Call Chain = agps_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2308338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_write_to_gps
<LI><a href="#[2308458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_transfer_status
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[230d888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_timer_proc
</UL>

<P><STRONG><a name="[2307f00]"></a>agps_service_close</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = agps_service_close
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230c9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_destroy
<LI><a href="#[230ca78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_connection_failed
<LI><a href="#[230cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_service_close_for_reconnect
</UL>

<P><STRONG><a name="[2307eb8]"></a>agps_msg_pack_get_file</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = agps_msg_pack_get_file
</UL>
<BR>[Called By]<UL><LI><a href="#[2308218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_send_get_file
</UL>

<P><STRONG><a name="[2307e70]"></a>goome_agps_at6558_check_item_num</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, agps_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = goome_agps_at6558_check_item_num
</UL>
<BR>[Called By]<UL><LI><a href="#[23081d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_msg_parse_zkw_ack
</UL>

<P><STRONG><a name="[2307a80]"></a>goome_file_param_main_write</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = goome_file_param_main_write &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>

<P><STRONG><a name="[2307a38]"></a>goome_file_param_main_read</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = goome_file_param_main_read &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
</UL>

<P><STRONG><a name="[23079f0]"></a>goome_file_write_minor_param</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = goome_file_write_minor_param &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>

<P><STRONG><a name="[23079a8]"></a>goome_file_read_minor_param</STRONG> (Thumb, 1112 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = goome_file_read_minor_param &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
</UL>

<P><STRONG><a name="[2307960]"></a>goome_delete_file</STRONG> (Thumb, 56 bytes, Stack size 112 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5160 + Unknown Stack Size
<LI>Call Chain = goome_delete_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_ucs2_to_ascii
<LI><a href="#[15d6398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_CheckFile (via Veneer)
<LI><a href="#[15d63e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Delete (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[2307648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goome_del_param_file
</UL>

<P><STRONG><a name="[2307918]"></a>param_write_back_free_mem</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = param_write_back_free_mem &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>

<P><STRONG><a name="[23078d0]"></a>param_read_back_free_mem</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = param_read_back_free_mem &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_param_from_file
</UL>

<P><STRONG><a name="[2307888]"></a>goome_file_nvram_save</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5120 + Unknown Stack Size
<LI>Call Chain = goome_file_nvram_save &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadNvramLid (via Veneer)
<LI><a href="#[15d5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadWriteNvram (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2307498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_length
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>

<P><STRONG><a name="[2307840]"></a>read_nvram_device_id</STRONG> (Thumb, 538 bytes, Stack size 24 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = read_nvram_device_id &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadNvramLid (via Veneer)
<LI><a href="#[15d5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadWriteNvram (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
</UL>

<P><STRONG><a name="[23077f8]"></a>convert_cfg_to_para</STRONG> (Thumb, 856 bytes, Stack size 136 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = convert_cfg_to_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
</UL>

<P><STRONG><a name="[23077b0]"></a>convert_para_to_cfg</STRONG> (Thumb, 626 bytes, Stack size 144 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232 + Unknown Stack Size
<LI>Call Chain = convert_para_to_cfg &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
</UL>

<P><STRONG><a name="[2307768]"></a>check_address_para_ok</STRONG> (Thumb, 104 bytes, Stack size 120 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5168 + Unknown Stack Size
<LI>Call Chain = check_address_para_ok &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2307720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_para_ok
</UL>

<P><STRONG><a name="[2307720]"></a>check_para_ok</STRONG> (Thumb, 230 bytes, Stack size 112 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5280 + Unknown Stack Size
<LI>Call Chain = check_para_ok &rArr; check_address_para_ok &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[2307768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_address_para_ok
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
</UL>

<P><STRONG><a name="[23076d8]"></a>config_service_set_factory_deault</STRONG> (Thumb, 866 bytes, Stack size 128 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = config_service_set_factory_deault &rArr; config_service_set_test_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23075b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_test_mode
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2307570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_restore_factory_config
<LI><a href="#[2307690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_deault
</UL>

<P><STRONG><a name="[2307690]"></a>config_service_set_deault</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, config_save.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5232 + Unknown Stack Size
<LI>Call Chain = config_service_set_deault &rArr; config_service_set_factory_deault &rArr; config_service_set_test_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23076d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_factory_deault
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_read_from_local
<LI><a href="#[2307570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_restore_factory_config
</UL>

<P><STRONG><a name="[23070a8]"></a>config_service_transfer_status</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_retry_config
<LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[2306d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_init_proc
<LI><a href="#[230c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_destroy
<LI><a href="#[230c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_ok
<LI><a href="#[230c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_failed
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2307060]"></a>config_service_set_addr</STRONG> (Thumb, 148 bytes, Stack size 128 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = config_service_set_addr &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d4d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ConvertIpAddr (via Veneer)
<LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
</UL>

<P><STRONG><a name="[2307018]"></a>config_service_set_short</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = config_service_set_short &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
</UL>

<P><STRONG><a name="[2306fd0]"></a>config_msg_upload</STRONG> (Thumb, 812 bytes, Stack size 104 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = config_msg_upload &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_request
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
</UL>

<P><STRONG><a name="[2306f88]"></a>config_msg_param_set</STRONG> (Thumb, 304 bytes, Stack size 224 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7376 + Unknown Stack Size
<LI>Call Chain = config_msg_param_set &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2306dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_pwd
<LI><a href="#[2306e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_zone
<LI><a href="#[2306e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_byte
<LI><a href="#[2307018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_short
<LI><a href="#[2307060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_addr
<LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
</UL>

<P><STRONG><a name="[2306f40]"></a>config_msg_content_parse</STRONG> (Thumb, 388 bytes, Stack size 152 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7528 + Unknown Stack Size
<LI>Call Chain = config_msg_content_parse &rArr; config_msg_param_set &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cdc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_string_upper
<LI><a href="#[15cdd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_remove_char
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2306ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_repair_ramp
<LI><a href="#[2306c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_get_item
<LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
<LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_destroy
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[236e7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[236f328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
</UL>

<P><STRONG><a name="[2306ef8]"></a>config_msg_receive</STRONG> (Thumb, 1232 bytes, Stack size 88 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7616 + Unknown Stack Size
<LI>Call Chain = config_msg_receive &rArr; config_msg_content_parse &rArr; config_msg_param_set &rArr; command_on_receive_data &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cddb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_asc
<LI><a href="#[15d68f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryFree (via Veneer)
<LI><a href="#[15d6938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_MemoryAlloc (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230bea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_imei
<LI><a href="#[230c5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_hex
<LI><a href="#[230cc70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_close_for_reconnect
<LI><a href="#[230e8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_pop_len
<LI><a href="#[230e968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_peek
<LI><a href="#[230ea88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_reset
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2306eb0]"></a>config_service_finish_proc</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216 + Unknown Stack Size
<LI>Call Chain = config_service_finish_proc &rArr; gps_service_create &rArr; system_state_set_ip_cache &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2306be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_retry_config
<LI><a href="#[230d528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_create
<LI><a href="#[230d918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2306e68]"></a>config_service_set_byte</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = config_service_set_byte &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
</UL>

<P><STRONG><a name="[2306e20]"></a>config_service_set_zone</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = config_service_set_zone &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
</UL>

<P><STRONG><a name="[2306dd8]"></a>config_service_set_pwd</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = config_service_set_pwd &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_param_set
</UL>

<P><STRONG><a name="[2306d90]"></a>config_service_init_proc</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = config_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2306d48]"></a>config_service_close</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = config_service_close
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[230c8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_destroy
<LI><a href="#[230c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_failed
</UL>

<P><STRONG><a name="[2306d00]"></a>config_service_finish</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = config_service_finish &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_close
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2306c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_send_request_failed
<LI><a href="#[2306cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_request
<LI><a href="#[2306ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_receive
<LI><a href="#[230c958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_failed
</UL>

<P><STRONG><a name="[2306cb8]"></a>config_msg_request</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = config_msg_request &rArr; config_msg_upload &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[2306fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_upload
</UL>
<BR>[Called By]<UL><LI><a href="#[230c910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_connection_ok
<LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2306c70]"></a>config_msg_get_item</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = config_msg_get_item
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_msg_content_parse
</UL>

<P><STRONG><a name="[2306c28]"></a>config_service_send_request_failed</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = config_service_send_request_failed &rArr; config_service_finish &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2306d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_timer_proc
</UL>

<P><STRONG><a name="[2306be0]"></a>config_service_retry_config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, config_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = config_service_retry_config &rArr; config_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23070a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_transfer_status
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_finish_proc
</UL>

<P><STRONG><a name="[23066a8]"></a>update_filemod_transfer_status</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = update_filemod_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2306300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_init_proc
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230c520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_ok
<LI><a href="#[230c568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_connection_failed
</UL>

<P><STRONG><a name="[2306660]"></a>update_filemod_state_file_save</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = update_filemod_state_file_save &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Commit (via Veneer)
<LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
</UL>

<P><STRONG><a name="[2306618]"></a>update_msg_parse_check_block_bits</STRONG> (Thumb, 632 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6152 + Unknown Stack Size
<LI>Call Chain = update_msg_parse_check_block_bits &rArr; update_filemod_file_finish &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[2305ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_blocks_finish
<LI><a href="#[23063d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_finish
<LI><a href="#[2306660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_state_file_save
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
</UL>

<P><STRONG><a name="[23065d0]"></a>update_filemod_file_write</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = update_filemod_file_write &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Seek (via Veneer)
<LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_one_block
</UL>

<P><STRONG><a name="[2306588]"></a>update_msg_parse_response</STRONG> (Thumb, 394 bytes, Stack size 72 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6272 + Unknown Stack Size
<LI>Call Chain = update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2305e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_after_response
<LI><a href="#[23061e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_create
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2306540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse
</UL>

<P><STRONG><a name="[2306540]"></a>update_msg_parse</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6296 + Unknown Stack Size
<LI>Call Chain = update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
<LI><a href="#[2306588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_response
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
</UL>

<P><STRONG><a name="[23064f8]"></a>update_filemod_work_proc</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6336 + Unknown Stack Size
<LI>Call Chain = update_filemod_work_proc &rArr; update_msg_receive &rArr; update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
</UL>

<P><STRONG><a name="[23064b0]"></a>update_filemod_file_create</STRONG> (Thumb, 594 bytes, Stack size 1064 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6112 + Unknown Stack Size
<LI>Call Chain = update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Write (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
</UL>

<P><STRONG><a name="[2306468]"></a>update_filemod_state_file_load</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = update_filemod_state_file_load &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
</UL>

<P><STRONG><a name="[2306420]"></a>update_msg_pack_result_report</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = update_msg_pack_result_report &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_result_to_server
</UL>

<P><STRONG><a name="[23063d8]"></a>update_filemod_file_finish</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6128 + Unknown Stack Size
<LI>Call Chain = update_filemod_file_finish &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[230dd98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_get_checksum
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
</UL>

<P><STRONG><a name="[2306390]"></a>update_msg_parse_file_data</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6192 + Unknown Stack Size
<LI>Call Chain = update_msg_parse_file_data &rArr; update_msg_parse_check_block_bits &rArr; update_filemod_file_finish &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2306228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_one_block
<LI><a href="#[2306618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_check_block_bits
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse
</UL>

<P><STRONG><a name="[2306348]"></a>update_msg_pack_file_request</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = update_msg_pack_file_request &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
</UL>

<P><STRONG><a name="[2306300]"></a>update_filemod_init_proc</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = update_filemod_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[23066a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_transfer_status
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
</UL>

<P><STRONG><a name="[23062b8]"></a>update_filemod_file_open</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = update_filemod_file_open &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d64b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_GetFileSize (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
</UL>

<P><STRONG><a name="[2306270]"></a>is_update_file_extend_same</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = is_update_file_extend_same &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d71a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncmp (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2306030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_start_data_block_request
</UL>

<P><STRONG><a name="[2306228]"></a>update_msg_parse_one_block</STRONG> (Thumb, 520 bytes, Stack size 16 bytes, update_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5272 + Unknown Stack Size
<LI>Call Chain = update_msg_parse_one_block &rArr; update_filemod_destroy &rArr; update_service_result_to_server &rArr; update_msg_send_result_to_server &rArr; gm_socket_send &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[23065d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_file_write
<LI><a href="#[230c4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[2306390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_parse_file_data
</UL>

<P><STRONG><a name="[2305b48]"></a>update_service_transfer_status</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = update_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230cb50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_status_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23059e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_init_proc
<LI><a href="#[2305b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_data_finish_proc
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230c400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_destroy
<LI><a href="#[230c448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_ok
<LI><a href="#[230c490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_failed
</UL>

<P><STRONG><a name="[2305b00]"></a>update_service_data_finish_proc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = update_service_data_finish_proc &rArr; update_service_transfer_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[2305f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_file_extend
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
</UL>

<P><STRONG><a name="[2305ab8]"></a>update_msg_send_request</STRONG> (Thumb, 132 bytes, Stack size 112 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6240 + Unknown Stack Size
<LI>Call Chain = update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_request
<LI><a href="#[2306108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_head
<LI><a href="#[2306150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_pack_id_len
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230cb98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_send
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_work_proc
<LI><a href="#[230c448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_ok
</UL>

<P><STRONG><a name="[2305a70]"></a>update_service_work_proc</STRONG> (Thumb, 898 bytes, Stack size 24 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6376 + Unknown Stack Size
<LI>Call Chain = update_service_work_proc &rArr; update_filemod_timer_proc &rArr; update_filemod_work_proc &rArr; update_msg_receive &rArr; update_msg_parse &rArr; update_msg_parse_response &rArr; update_service_after_response &rArr; update_msg_start_data_block_request &rArr; update_filemod_file_create &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d72c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strncpy (via Veneer)
<LI><a href="#[2305ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_request
<LI><a href="#[2305e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_result_to_server
<LI><a href="#[2305f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_file_extend
<LI><a href="#[2306078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_filemod_timer_proc
<LI><a href="#[23060c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_send_data_block_request
<LI><a href="#[2306198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_msg_receive
<LI><a href="#[2306b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_update_socket_type
<LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
</UL>

<P><STRONG><a name="[2305a28]"></a>update_service_close</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = update_service_close
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_SocketClose (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230c3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_finish
<LI><a href="#[230c400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_destroy
<LI><a href="#[230c490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_connection_failed
</UL>

<P><STRONG><a name="[23059e0]"></a>update_service_init_proc</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, update_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 6328 + Unknown Stack Size
<LI>Call Chain = update_service_init_proc &rArr; gm_socket_connect &rArr; gm_socket_connect_ok &rArr; update_service_connection_ok &rArr; update_msg_send_request &rArr; update_msg_pack_request &rArr; update_filemod_get_checksum &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2305b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_transfer_status
<LI><a href="#[230cb08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_get_host_by_name_trigger
<LI><a href="#[230cc28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_socket_connect
<LI><a href="#[230ccb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gm_is_valid_ip
<LI><a href="#[230ff10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_ip_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[230d1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_timer_proc
</UL>

<P><STRONG><a name="[2305580]"></a>protocol_2929_get_num_to_pseudo_ip</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = protocol_2929_get_num_to_pseudo_ip &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_send_packet
</UL>

<P><STRONG><a name="[2305538]"></a>protocol_2929_send_packet</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5136 + Unknown Stack Size
<LI>Call Chain = protocol_2929_send_packet &rArr; protocol_2929_get_num_to_pseudo_ip &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_num_to_pseudo_ip
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23054f0]"></a>protocol_2929_pack_get_state</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_get_state &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23054a8]"></a>protocol_2929_pack_gps_data</STRONG> (Thumb, 546 bytes, Stack size 80 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_gps_data &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15cdd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DWord2BCD
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236cf28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f (via Veneer)
<LI><a href="#[236d320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz (via Veneer)
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236e8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[236ec58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[236f000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[236f6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[236f840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2305190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_vehicle_terminal_confirmation_packet
<LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305460]"></a>protocol_2929_pack_additional_lbs</STRONG> (Thumb, 426 bytes, Stack size 112 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5168 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_additional_lbs &rArr; gsm_get_cell_info &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305418]"></a>protocol_2929_pack_device_model</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_device_model &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23053d0]"></a>protocol_2929_pack_iccid</STRONG> (Thumb, 666 bytes, Stack size 40 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_iccid &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cde00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_chr
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305388]"></a>protocol_2929_pack_extended_alarm_status</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_extended_alarm_status &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2304da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_expmu_wkp_reason
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305340]"></a>protocol_2929_pack_next_time_and_environment</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5272 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_next_time_update
<LI><a href="#[2309bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_satellites_good
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23052f8]"></a>protocol_2929_pack_wifi_data</STRONG> (Thumb, 898 bytes, Stack size 64 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5112 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_wifi_data &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[2304cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_get_wifi_scan_result
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23052b0]"></a>protocol_2929_pack_remaining_number</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5064 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_remaining_number &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2305148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_get_remaining_number
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305268]"></a>protocol_2929_pack_platfrom_mode_flg</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5144 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_platfrom_mode_flg &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[2305220]"></a>protocol_2929_pack_work_mode_update</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, protocol_2929.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = protocol_2929_pack_work_mode_update
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2304d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_work_mode_upload_data
</UL>
<BR>[Called By]<UL><LI><a href="#[2308a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_2929_install_one_location_packet
</UL>

<P><STRONG><a name="[23049b0]"></a>old_cmd_set_wkm_clock</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5576 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_wkm_clock &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d74c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_atoi (via Veneer)
<LI><a href="#[23042f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_special_char
<LI><a href="#[2304338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_old_config_para_number
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2304968]"></a>old_cmd_set_wkm_week_mode</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5560 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_wkm_week_mode &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d74c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_atoi (via Veneer)
<LI><a href="#[23042f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_special_char
<LI><a href="#[2304338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_old_config_para_number
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[2304530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_same_number_in_string
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2304920]"></a>old_2929_cmd_response</STRONG> (Thumb, 518 bytes, Stack size 24 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5184 + Unknown Stack Size
<LI>Call Chain = old_2929_cmd_response &rArr; get_workmode_string &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cdb78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_is_valid_dns
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23042a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_workmode_string
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_creg_state
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fbf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[23048d8]"></a>old_2929_cmd_set</STRONG> (Thumb, 808 bytes, Stack size 240 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5816 + Unknown Stack Size
<LI>Call Chain = old_2929_cmd_set &rArr; old_cmd_set_wkm_clock &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_wifi_state
<LI><a href="#[15d5db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_StartTimer (via Veneer)
<LI><a href="#[15d70d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strstr (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[15d74c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_atoi (via Veneer)
<LI><a href="#[2303e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_power_off
<LI><a href="#[2303e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_pmu_time_zone
<LI><a href="#[2303f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_exit_triger_mode
<LI><a href="#[2304068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_destory
<LI><a href="#[2304608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_dev_apn
<LI><a href="#[2304650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_track_mode
<LI><a href="#[2304728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set__udp_ip
<LI><a href="#[2304770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_main_dns
<LI><a href="#[23047b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_cell_num
<LI><a href="#[2304800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_param_context
<LI><a href="#[2304968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_week_mode
<LI><a href="#[23049b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_cmd_set_wkm_clock
<LI><a href="#[2308ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_change_config
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230c760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_destroy
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
<LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2304890]"></a>command_scan</STRONG> (Thumb, 462 bytes, Stack size 64 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = command_scan &rArr; util_strtol &rArr; util_strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_strtol
<LI><a href="#[15cd470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isprint
<LI><a href="#[15cd4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_isdigit
<LI><a href="#[15cdc50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_string_upper
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d71f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[230ba70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_on_receive_data
</UL>

<P><STRONG><a name="[2304848]"></a>cmd_reboot</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = cmd_reboot &rArr; hard_ware_reboot &rArr; system_state_set_boot_reason &rArr; save_state_to_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230dfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_reboot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> command.o(.text)
</UL>
<P><STRONG><a name="[2304800]"></a>get_param_context</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, command.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[23047b8]"></a>old_cmd_set_cell_num</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5120 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_cell_num &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cdc08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_string_number_counter
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2304770]"></a>old_cmd_set_main_dns</STRONG> (Thumb, 116 bytes, Stack size 120 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_main_dns &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2304728]"></a>old_cmd_set__udp_ip</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152 + Unknown Stack Size
<LI>Call Chain = old_cmd_set__udp_ip &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[23046e0]"></a>parse_platform_cycle_mode</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5568 + Unknown Stack Size
<LI>Call Chain = parse_platform_cycle_mode &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2304380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_u32_data
<LI><a href="#[23043c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_u16_data
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_platform_mode
</UL>

<P><STRONG><a name="[2304698]"></a>parse_platform_timepoint_mode</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5576 + Unknown Stack Size
<LI>Call Chain = parse_platform_timepoint_mode &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[2304380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_u32_data
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_platform_mode
</UL>

<P><STRONG><a name="[2304650]"></a>old_cmd_set_wkm_track_mode</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5544 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_wkm_track_mode &rArr; save_gw_work_mode_to_file &rArr; expmu_service_destory &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d74c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_atoi (via Veneer)
<LI><a href="#[2304410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_gw_work_mode_to_file
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2304608]"></a>old_cmd_set_dev_apn</STRONG> (Thumb, 140 bytes, Stack size 296 bytes, command.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5384 + Unknown Stack Size
<LI>Call Chain = old_cmd_set_dev_apn &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d6fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_sscanf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[23048d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;old_2929_cmd_set
</UL>

<P><STRONG><a name="[2303c30]"></a>auto_test_check_chip_rid</STRONG> (Thumb, 162 bytes, Stack size 104 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = auto_test_check_chip_rid &rArr; auto_test_calc_hashnr
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetChipRID (via Veneer)
<LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[23039f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_calc_hashnr
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
</UL>

<P><STRONG><a name="[2303be8]"></a>struct_to_jsonstr</STRONG> (Thumb, 516 bytes, Stack size 32 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = struct_to_jsonstr &rArr; json_add_int &rArr; add_item_to_object &rArr; json_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230f808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_print_to_buffer
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_double
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_destroy
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[236e3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result
</UL>

<P><STRONG><a name="[2303ba0]"></a>read_result_from_file</STRONG> (Thumb, 1134 bytes, Stack size 24 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d65d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Read (via Veneer)
<LI><a href="#[15d6620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Close (via Veneer)
<LI><a href="#[15d6668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_FS_Open (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fc40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_calc_common_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result
</UL>

<P><STRONG><a name="[2303b58]"></a>auto_test_check_gps_location</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3200 + Unknown Stack Size
<LI>Call Chain = auto_test_check_gps_location &rArr; log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
<LI><a href="#[2309b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_snr_array
<LI><a href="#[2309d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_fix_time
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230f070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applied_math_avage
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2303b10]"></a>auto_test_check_reboot</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3168 + Unknown Stack Size
<LI>Call Chain = auto_test_check_reboot &rArr; log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_reboot_counts
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2303ac8]"></a>auto_test_check_network</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3176 + Unknown Stack Size
<LI>Call Chain = auto_test_check_network &rArr; log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230fbb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_get_call_ok_count
<LI><a href="#[236cbf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul (via Veneer)
<LI><a href="#[236ce50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f (via Veneer)
<LI><a href="#[236da48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv (via Veneer)
<LI><a href="#[236df10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2303a80]"></a>auto_test_check_adjust</STRONG> (Thumb, 188 bytes, Stack size 696 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3848 + Unknown Stack Size
<LI>Call Chain = auto_test_check_adjust &rArr; log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadNvramLid (via Veneer)
<LI><a href="#[15d5468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_ReadWriteNvram (via Veneer)
<LI><a href="#[15d5780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_GetBarcode (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2303a38]"></a>auto_test_self_test</STRONG> (Thumb, 840 bytes, Stack size 2072 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8144 + Unknown Stack Size
<LI>Call Chain = auto_test_self_test &rArr; auto_test_get_result &rArr; read_result_from_file &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_snprintf (via Veneer)
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23038d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_sim
<LI><a href="#[2303918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_wifi
<LI><a href="#[2303960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_expmu
<LI><a href="#[2303a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_adjust
<LI><a href="#[2303ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_network
<LI><a href="#[2303b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_reboot
<LI><a href="#[2303b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_gps_location
<LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid
<LI><a href="#[23040b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_version_string
<LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230bef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_model_imei
<LI><a href="#[2310150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_bin_checksum
<LI><a href="#[236c7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[236e580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[236e7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_timer_proc
</UL>

<P><STRONG><a name="[23039f0]"></a>auto_test_calc_hashnr</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = auto_test_calc_hashnr
</UL>
<BR>[Called By]<UL><LI><a href="#[2303c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_check_chip_rid
</UL>

<P><STRONG><a name="[23039a8]"></a>init_test_result</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = init_test_result
</UL>
<BR>[Calls]<UL><LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_timer_proc
<LI><a href="#[23040f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_reset
<LI><a href="#[2304140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_result
<LI><a href="#[23041d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_create
</UL>

<P><STRONG><a name="[2303960]"></a>auto_test_check_expmu</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = auto_test_check_expmu &rArr; auto_test_period_read_expmu_reg &rArr; insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2303600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_rtc_wkp_cnt
<LI><a href="#[2303648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_rtc_time_value
<LI><a href="#[2303690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_powr_on_cnt
<LI><a href="#[23036d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_exti2_wkp_cnt
<LI><a href="#[2303720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_exti1_wkp_cnt
<LI><a href="#[2303768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_period_read_expmu_reg
<LI><a href="#[23037b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_get_expmu_light_io_state
<LI><a href="#[230fcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_rtc_time_not_match_count
<LI><a href="#[230fd18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_expmu_smsp_comm_cannot_establish
<LI><a href="#[230fda8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_expmu_comm_err_count
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2303918]"></a>auto_test_wifi</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = auto_test_wifi &rArr; get_max_ap_rssi
</UL>
<BR>[Calls]<UL><LI><a href="#[2303888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_ap_rssi
<LI><a href="#[2304cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service_get_wifi_scan_result
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[23038d0]"></a>auto_test_check_sim</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, auto_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3168 + Unknown Stack Size
<LI>Call Chain = auto_test_check_sim &rArr; log_service_print_test &rArr; uart_write &rArr; uart_close_port &rArr; fifo_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d6b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_CheckSimValid (via Veneer)
<LI><a href="#[2309160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print_test
<LI><a href="#[230d378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_iccid
</UL>
<BR>[Called By]<UL><LI><a href="#[2303a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_self_test
</UL>

<P><STRONG><a name="[2302ea8]"></a>expmu_transfer_status</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = expmu_transfer_status
</UL>
<BR>[Calls]<UL><LI><a href="#[236bfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_switch8 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_create
<LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
</UL>

<P><STRONG><a name="[2302e60]"></a>push_smsp_packet_to_uart</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = push_smsp_packet_to_uart &rArr; printf_hex_string &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2302998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_hex_string
<LI><a href="#[230b758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_expmu_comm_err_count
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
</UL>

<P><STRONG><a name="[2302e18]"></a>show_smsp_time</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = show_smsp_time &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc
</UL>

<P><STRONG><a name="[2302dd0]"></a>creat_write_pmu_register_block</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = creat_write_pmu_register_block
</UL>
<BR>[Calls]<UL><LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_expmu_reg
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register
<LI><a href="#[2303768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_period_read_expmu_reg
</UL>

<P><STRONG><a name="[2302d88]"></a>sync_expmu_mpu_time_process</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5208 + Unknown Stack Size
<LI>Call Chain = sync_expmu_mpu_time_process &rArr; set_expmu_time_to_mpu &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_bcd_to_sec
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[23026c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_expmu_time_to_mpu
<LI><a href="#[2302710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_calibration_pmu_time
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fdf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_rtc_time_not_match_count
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc
</UL>

<P><STRONG><a name="[2302d40]"></a>expmu_read_register</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = expmu_read_register &rArr; insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que
<LI><a href="#[2302dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;creat_write_pmu_register_block
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_init_proc
<LI><a href="#[2302cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_query_proc
<LI><a href="#[2302cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_work_proc
</UL>

<P><STRONG><a name="[2302cf8]"></a>expmu_work_proc</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5224 + Unknown Stack Size
<LI>Call Chain = expmu_work_proc &rArr; sync_expmu_mpu_time_process &rArr; set_expmu_time_to_mpu &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register
<LI><a href="#[2302d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_expmu_mpu_time_process
<LI><a href="#[2302e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_smsp_time
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
</UL>

<P><STRONG><a name="[2302cb0]"></a>expmu_query_proc</STRONG> (Thumb, 702 bytes, Stack size 128 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5568 + Unknown Stack Size
<LI>Call Chain = expmu_query_proc &rArr; expmu_service_creat &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d7118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_strlen (via Veneer)
<LI><a href="#[23023b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_creat
<LI><a href="#[2302680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bcd_time_string
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register
<LI><a href="#[2302ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_transfer_status
<LI><a href="#[23040b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_get_version_string
<LI><a href="#[230dde0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_upload
<LI><a href="#[230f850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_string
<LI><a href="#[230f8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_add_int
<LI><a href="#[230f970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;json_create
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230fe38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_expmu_smsp_comm_cannot_establish
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
</UL>

<P><STRONG><a name="[2302c68]"></a>expmu_init_proc</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = expmu_init_proc &rArr; expmu_read_register &rArr; insert_smsp_stack_que &rArr; check_arry_data_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23027a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_smsp_stack_que
<LI><a href="#[2302d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_read_register
<LI><a href="#[2302ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_transfer_status
<LI><a href="#[230fe38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_expmu_smsp_comm_cannot_establish
<LI><a href="#[2370d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via Veneer)
<LI><a href="#[2370f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_timer_proc
</UL>

<P><STRONG><a name="[2302c20]"></a>parse_smsp_query_packet</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, expmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5088 + Unknown Stack Size
<LI>Call Chain = parse_smsp_query_packet &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2302560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_mem_share_protocol_prase
</UL>

<P><STRONG><a name="[2302098]"></a>device_register_lbs_changed</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = device_register_lbs_changed &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
</UL>

<P><STRONG><a name="[2302050]"></a>does_need_open_gps_power</STRONG> (Thumb, 112 bytes, Stack size 96 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5176 + Unknown Stack Size
<LI>Call Chain = does_need_open_gps_power &rArr; device_register_lbs_changed &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[2302098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_register_lbs_changed
<LI><a href="#[2309ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_last_fixed_time
<LI><a href="#[230d408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_cell_info
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
</UL>

<P><STRONG><a name="[2302008]"></a>expmu_srv_track_mode_report_proc</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5464 + Unknown Stack Size
<LI>Call Chain = expmu_srv_track_mode_report_proc &rArr; gps_power_on &rArr; gps_service_push_lbs &rArr; protocol_2929_install_one_location_packet &rArr; protocol_2929_pack_next_time_and_environment &rArr; protocol_2929_get_next_time_update &rArr; get_next_wake_up_time_point &rArr; calc_week_mode_next_sleep_time &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d7430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memset (via Veneer)
<LI><a href="#[2301ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_rep_gps_data_success_cnt
<LI><a href="#[2302050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_need_open_gps_power
<LI><a href="#[23027e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_exit_sleep
<LI><a href="#[2309868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_one_gps
<LI><a href="#[23098b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_service_push_lbs
<LI><a href="#[2309af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_last_data
<LI><a href="#[2309d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_get_state
<LI><a href="#[2309e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_on
<LI><a href="#[2309e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_power_off
<LI><a href="#[230bd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_is_fixed
<LI><a href="#[230df00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_ware_awake
<LI><a href="#[2371360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[2301fc0]"></a>expmu_srv_praper_into_lpm_proc</STRONG> (Thumb, 842 bytes, Stack size 64 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5296 + Unknown Stack Size
<LI>Call Chain = expmu_srv_praper_into_lpm_proc &rArr; config_service_save_to_local &rArr; convert_cfg_to_para &rArr; config_service_get_pointer &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cc868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_boot_reason
<LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15cd8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_utc_sec_to_bcdtime_base2000
<LI><a href="#[15cd938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_get_utc_time
<LI><a href="#[15d73e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcpy (via Veneer)
<LI><a href="#[2301ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recalc_next_wkp_time
<LI><a href="#[2301ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_rep_gps_data_success_cnt
<LI><a href="#[23023f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_next_wakeup_time
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
<LI><a href="#[2304f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_test_is_working
<LI><a href="#[2305998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_is_waiting_reboot
<LI><a href="#[2306b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set_reming_gps_count
<LI><a href="#[2308980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_service_get_status
<LI><a href="#[2309940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_save_to_local
<LI><a href="#[230be18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sim_card_sate
<LI><a href="#[230bf38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_creg_state
<LI><a href="#[230d3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_get_csq
<LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
<LI><a href="#[230d918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_is_ok
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[230ffa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_set_static_info
<LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[2301f78]"></a>expmu_srv_next_wkp_time_set_proc</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = expmu_srv_next_wkp_time_set_proc &rArr; smsp_set_next_wakeup_time &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d73a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GM_memcmp (via Veneer)
<LI><a href="#[23023f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_set_next_wakeup_time
<LI><a href="#[2302908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_expmu_next_wkp_time_register
<LI><a href="#[2303fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_into_sleep
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[2301f30]"></a>expmu_srv_into_lpm_proc</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5072 + Unknown Stack Size
<LI>Call Chain = expmu_srv_into_lpm_proc &rArr; smsp_comm_pmu_into_sleep &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[23028c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;does_expmu_in_sleeping
<LI><a href="#[2303fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsp_comm_pmu_into_sleep
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
</UL>

<P><STRONG><a name="[2301ee8]"></a>get_device_rep_gps_data_success_cnt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, expmu_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_device_rep_gps_data_success_cnt
</UL>
<BR>[Calls]<UL><LI><a href="#[230ffe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_state_get_statis_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[15ce670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_service_timer_proc
<LI><a href="#[2301fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_praper_into_lpm_proc
<LI><a href="#[2302008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expmu_srv_track_mode_report_proc
</UL>

<P><STRONG><a name="[2301af8]"></a>calc_error_mode_time_point</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5104 + Unknown Stack Size
<LI>Call Chain = calc_error_mode_time_point &rArr; unified_set_poastion_source &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unified_set_poastion_source
<LI><a href="#[2301a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCAL_TO_UTC_SEC
<LI><a href="#[2301ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTC_TO_LOCAL_SEC
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_time_point_mode_time_point
<LI><a href="#[23018b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_loop_mode_time_point
<LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point
<LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[2301ab0]"></a>UTC_TO_LOCAL_SEC</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = UTC_TO_LOCAL_SEC &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time
<LI><a href="#[2301990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;week_day_to_utc_time
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
</UL>

<P><STRONG><a name="[2301a68]"></a>LOCAL_TO_UTC_SEC</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = LOCAL_TO_UTC_SEC &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230d7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2301990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;week_day_to_utc_time
<LI><a href="#[23019d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_alarm_clock_mode_time_point
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
</UL>

<P><STRONG><a name="[2301a20]"></a>unified_set_poastion_source</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5096 + Unknown Stack Size
<LI>Call Chain = unified_set_poastion_source &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23098f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_service_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2301870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_time_point_mode_time_point
<LI><a href="#[23018b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_plat_loop_mode_time_point
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
</UL>

<P><STRONG><a name="[23019d8]"></a>calc_alarm_clock_mode_time_point</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5152 + Unknown Stack Size
<LI>Call Chain = calc_alarm_clock_mode_time_point &rArr; get_cur_gw_work_mode &rArr; config_service_set &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCAL_TO_UTC_SEC
<LI><a href="#[2301ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTC_TO_LOCAL_SEC
<LI><a href="#[2301af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_error_mode_time_point
<LI><a href="#[2304de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_gw_work_mode
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2304d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_wake_up_time_point
</UL>

<P><STRONG><a name="[2301990]"></a>week_day_to_utc_time</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, calc_wkp_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = week_day_to_utc_time &rArr; LOCAL_TO_UTC_SEC &rArr; config_service_get &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2301a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOCAL_TO_UTC_SEC
<LI><a href="#[2301ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTC_TO_LOCAL_SEC
<LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2301900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_week_mode_next_sleep_time
</UL>

<P><STRONG><a name="[23016c0]"></a>wlan_deinit_cb</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = wlan_deinit_cb &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15d4a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_deinit (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_service.o(.text)
</UL>
<P><STRONG><a name="[2301678]"></a>wlan_scan_cb</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5080 + Unknown Stack Size
<LI>Call Chain = wlan_scan_cb &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15cd740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;util_clock
<LI><a href="#[15d4a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan (via Veneer)
<LI><a href="#[15d4a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_deinit (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
<LI><a href="#[2371860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_service.o(.text)
</UL>
<P><STRONG><a name="[2301630]"></a>wlan_init_cb</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, wifi_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5056 + Unknown Stack Size
<LI>Call Chain = wlan_init_cb &rArr; log_service_print &rArr; log_service_upload &rArr;  log_service_print (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15ccd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_wifi_state
<LI><a href="#[15d4a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_scan (via Veneer)
<LI><a href="#[15d4a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_init (via Veneer)
<LI><a href="#[230fb20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_service_print
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_service.o(.text)
</UL>
<P><STRONG><a name="[2370b10]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[2370ac8]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[2370a80]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2370960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[236f8d0]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236f690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[236f720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[236f888]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236f720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[236f7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[236dfa0]"></a>_fadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236dd60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[236df58]"></a>_fsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, faddsub_noclz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236dec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[236aec8]"></a>copysign</STRONG> (ARM, 16 bytes, Stack size 0 bytes, pow.o(i.copysign), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[236ae38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[236fb78]"></a>__fpl_infinity</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2366ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem (Weak Reference)
<LI><a href="#[2369708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (Weak Reference)
<LI><a href="#[23699a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN (Weak Reference)
<LI><a href="#[236c340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn (Weak Reference)
<LI><a href="#[236cba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul (Weak Reference)
<LI><a href="#[236d2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu (Weak Reference)
<LI><a href="#[236d6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix (Weak Reference)
<LI><a href="#[236da00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv (Weak Reference)
<LI><a href="#[236dd60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub (Weak Reference)
<LI><a href="#[236dec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd (Weak Reference)
<LI><a href="#[236e388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d (Weak Reference)
<LI><a href="#[236e538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul (Weak Reference)
<LI><a href="#[236ec10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu (Weak Reference)
<LI><a href="#[236efb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix (Weak Reference)
<LI><a href="#[236f2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv (Weak Reference)
<LI><a href="#[236f690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub (Weak Reference)
<LI><a href="#[236f7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd (Weak Reference)
<LI><a href="#[236fce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f (Weak Reference)
</UL>

<P><STRONG><a name="[2372120]"></a>_printf_charcount</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[23720d8]"></a>_printf_fp_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2372090]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2372048]"></a>_printf_int_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2372000]"></a>_printf_longlong_dec</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2371fb8]"></a>_printf_longlong_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2371f70]"></a>_printf_longlong_oct</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2371f28]"></a>_printf_mbtowc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2371cd0]"></a>_printf_post_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2371d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str (Weak Reference)
</UL>

<P><STRONG><a name="[2371c88]"></a>_printf_pre_padding</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2371d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str (Weak Reference)
</UL>

<P><STRONG><a name="[2371ee0]"></a>_printf_wc</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>

<P><STRONG><a name="[2371e98]"></a>_printf_wctomb</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2372318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (Weak Reference)
</UL>
<HR></body></html>
